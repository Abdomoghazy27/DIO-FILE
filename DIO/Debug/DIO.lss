
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003ac2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00003ac2  00003b36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002844  00000000  00000000  00003b40  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000ab5  00000000  00000000  00006384  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00006e39  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00006f79  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000070e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00008d32  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00009c1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000a9cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000ab2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000adb9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b587  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ec       	ldi	r30, 0xC2	; 194
      68:	fa e3       	ldi	r31, 0x3A	; 58
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <main>
      7a:	0c 94 5f 1d 	jmp	0x3abe	; 0x3abe <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 28 1d 	jmp	0x3a50	; 0x3a50 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 44 1d 	jmp	0x3a88	; 0x3a88 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 34 1d 	jmp	0x3a68	; 0x3a68 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 50 1d 	jmp	0x3aa0	; 0x3aa0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 34 1d 	jmp	0x3a68	; 0x3a68 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 50 1d 	jmp	0x3aa0	; 0x3aa0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 28 1d 	jmp	0x3a50	; 0x3a50 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 44 1d 	jmp	0x3a88	; 0x3a88 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 34 1d 	jmp	0x3a68	; 0x3a68 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 50 1d 	jmp	0x3aa0	; 0x3aa0 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 34 1d 	jmp	0x3a68	; 0x3a68 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 50 1d 	jmp	0x3aa0	; 0x3aa0 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 34 1d 	jmp	0x3a68	; 0x3a68 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 50 1d 	jmp	0x3aa0	; 0x3aa0 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 38 1d 	jmp	0x3a70	; 0x3a70 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 54 1d 	jmp	0x3aa8	; 0x3aa8 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <LED_ON>:
#include "LED_Interface.h"
#include "DIO_Reg.h"


uint8 LED_ON(uint8 copy_port,uint8 copy_pin)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <LED_ON+0x6>
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
     b40:	89 83       	std	Y+1, r24	; 0x01
     b42:	6a 83       	std	Y+2, r22	; 0x02

	DIO_SetPinDirection( copy_port ,copy_pin, OUTPUT );
     b44:	89 81       	ldd	r24, Y+1	; 0x01
     b46:	6a 81       	ldd	r22, Y+2	; 0x02
     b48:	41 e0       	ldi	r20, 0x01	; 1
     b4a:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>
	DIO_SetPinValue( copy_port , copy_pin,OUTPUT_HIGH);
     b4e:	89 81       	ldd	r24, Y+1	; 0x01
     b50:	6a 81       	ldd	r22, Y+2	; 0x02
     b52:	41 e0       	ldi	r20, 0x01	; 1
     b54:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

return 0;
     b58:	80 e0       	ldi	r24, 0x00	; 0
}
     b5a:	0f 90       	pop	r0
     b5c:	0f 90       	pop	r0
     b5e:	cf 91       	pop	r28
     b60:	df 91       	pop	r29
     b62:	08 95       	ret

00000b64 <LED_OFF>:

uint8 LED_OFF(uint8 copy_port,uint8 copy_pin)
{
     b64:	df 93       	push	r29
     b66:	cf 93       	push	r28
     b68:	00 d0       	rcall	.+0      	; 0xb6a <LED_OFF+0x6>
     b6a:	cd b7       	in	r28, 0x3d	; 61
     b6c:	de b7       	in	r29, 0x3e	; 62
     b6e:	89 83       	std	Y+1, r24	; 0x01
     b70:	6a 83       	std	Y+2, r22	; 0x02

	DIO_SetPinDirection( copy_port ,copy_pin, OUTPUT );
     b72:	89 81       	ldd	r24, Y+1	; 0x01
     b74:	6a 81       	ldd	r22, Y+2	; 0x02
     b76:	41 e0       	ldi	r20, 0x01	; 1
     b78:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>
	DIO_SetPinValue( copy_port , copy_pin,OUTPUT_LOW);
     b7c:	89 81       	ldd	r24, Y+1	; 0x01
     b7e:	6a 81       	ldd	r22, Y+2	; 0x02
     b80:	40 e0       	ldi	r20, 0x00	; 0
     b82:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

return 0;
     b86:	80 e0       	ldi	r24, 0x00	; 0
}
     b88:	0f 90       	pop	r0
     b8a:	0f 90       	pop	r0
     b8c:	cf 91       	pop	r28
     b8e:	df 91       	pop	r29
     b90:	08 95       	ret

00000b92 <TOGGLE_LED>:

uint8 TOGGLE_LED(uint8 copy_port,uint8 copy_pin)
{
     b92:	df 93       	push	r29
     b94:	cf 93       	push	r28
     b96:	00 d0       	rcall	.+0      	; 0xb98 <TOGGLE_LED+0x6>
     b98:	00 d0       	rcall	.+0      	; 0xb9a <TOGGLE_LED+0x8>
     b9a:	0f 92       	push	r0
     b9c:	cd b7       	in	r28, 0x3d	; 61
     b9e:	de b7       	in	r29, 0x3e	; 62
     ba0:	8a 83       	std	Y+2, r24	; 0x02
     ba2:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorStatus =OK;
     ba4:	19 82       	std	Y+1, r1	; 0x01
	 if (copy_pin<= PIN7 )
     ba6:	8b 81       	ldd	r24, Y+3	; 0x03
     ba8:	88 30       	cpi	r24, 0x08	; 8
     baa:	08 f0       	brcs	.+2      	; 0xbae <TOGGLE_LED+0x1c>
     bac:	72 c0       	rjmp	.+228    	; 0xc92 <TOGGLE_LED+0x100>
	 {


	 switch(copy_port)
     bae:	8a 81       	ldd	r24, Y+2	; 0x02
     bb0:	28 2f       	mov	r18, r24
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	3d 83       	std	Y+5, r19	; 0x05
     bb6:	2c 83       	std	Y+4, r18	; 0x04
     bb8:	8c 81       	ldd	r24, Y+4	; 0x04
     bba:	9d 81       	ldd	r25, Y+5	; 0x05
     bbc:	81 30       	cpi	r24, 0x01	; 1
     bbe:	91 05       	cpc	r25, r1
     bc0:	49 f1       	breq	.+82     	; 0xc14 <TOGGLE_LED+0x82>
     bc2:	2c 81       	ldd	r18, Y+4	; 0x04
     bc4:	3d 81       	ldd	r19, Y+5	; 0x05
     bc6:	22 30       	cpi	r18, 0x02	; 2
     bc8:	31 05       	cpc	r19, r1
     bca:	2c f4       	brge	.+10     	; 0xbd6 <TOGGLE_LED+0x44>
     bcc:	8c 81       	ldd	r24, Y+4	; 0x04
     bce:	9d 81       	ldd	r25, Y+5	; 0x05
     bd0:	00 97       	sbiw	r24, 0x00	; 0
     bd2:	61 f0       	breq	.+24     	; 0xbec <TOGGLE_LED+0x5a>
     bd4:	5b c0       	rjmp	.+182    	; 0xc8c <TOGGLE_LED+0xfa>
     bd6:	2c 81       	ldd	r18, Y+4	; 0x04
     bd8:	3d 81       	ldd	r19, Y+5	; 0x05
     bda:	22 30       	cpi	r18, 0x02	; 2
     bdc:	31 05       	cpc	r19, r1
     bde:	71 f1       	breq	.+92     	; 0xc3c <TOGGLE_LED+0xaa>
     be0:	8c 81       	ldd	r24, Y+4	; 0x04
     be2:	9d 81       	ldd	r25, Y+5	; 0x05
     be4:	83 30       	cpi	r24, 0x03	; 3
     be6:	91 05       	cpc	r25, r1
     be8:	e9 f1       	breq	.+122    	; 0xc64 <TOGGLE_LED+0xd2>
     bea:	50 c0       	rjmp	.+160    	; 0xc8c <TOGGLE_LED+0xfa>
				   {
				          case DIO_PORTA : TOGGLE_BIT(PORTA,copy_pin); break;
     bec:	ab e3       	ldi	r26, 0x3B	; 59
     bee:	b0 e0       	ldi	r27, 0x00	; 0
     bf0:	eb e3       	ldi	r30, 0x3B	; 59
     bf2:	f0 e0       	ldi	r31, 0x00	; 0
     bf4:	80 81       	ld	r24, Z
     bf6:	48 2f       	mov	r20, r24
     bf8:	8b 81       	ldd	r24, Y+3	; 0x03
     bfa:	28 2f       	mov	r18, r24
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	81 e0       	ldi	r24, 0x01	; 1
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	02 2e       	mov	r0, r18
     c04:	02 c0       	rjmp	.+4      	; 0xc0a <TOGGLE_LED+0x78>
     c06:	88 0f       	add	r24, r24
     c08:	99 1f       	adc	r25, r25
     c0a:	0a 94       	dec	r0
     c0c:	e2 f7       	brpl	.-8      	; 0xc06 <TOGGLE_LED+0x74>
     c0e:	84 27       	eor	r24, r20
     c10:	8c 93       	st	X, r24
     c12:	41 c0       	rjmp	.+130    	; 0xc96 <TOGGLE_LED+0x104>
				          case DIO_PORTB : TOGGLE_BIT(PORTB,copy_pin); break;
     c14:	a8 e3       	ldi	r26, 0x38	; 56
     c16:	b0 e0       	ldi	r27, 0x00	; 0
     c18:	e8 e3       	ldi	r30, 0x38	; 56
     c1a:	f0 e0       	ldi	r31, 0x00	; 0
     c1c:	80 81       	ld	r24, Z
     c1e:	48 2f       	mov	r20, r24
     c20:	8b 81       	ldd	r24, Y+3	; 0x03
     c22:	28 2f       	mov	r18, r24
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	02 2e       	mov	r0, r18
     c2c:	02 c0       	rjmp	.+4      	; 0xc32 <TOGGLE_LED+0xa0>
     c2e:	88 0f       	add	r24, r24
     c30:	99 1f       	adc	r25, r25
     c32:	0a 94       	dec	r0
     c34:	e2 f7       	brpl	.-8      	; 0xc2e <TOGGLE_LED+0x9c>
     c36:	84 27       	eor	r24, r20
     c38:	8c 93       	st	X, r24
     c3a:	2d c0       	rjmp	.+90     	; 0xc96 <TOGGLE_LED+0x104>
				          case DIO_PORTC : TOGGLE_BIT(PORTC,copy_pin); break;
     c3c:	a5 e3       	ldi	r26, 0x35	; 53
     c3e:	b0 e0       	ldi	r27, 0x00	; 0
     c40:	e5 e3       	ldi	r30, 0x35	; 53
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	80 81       	ld	r24, Z
     c46:	48 2f       	mov	r20, r24
     c48:	8b 81       	ldd	r24, Y+3	; 0x03
     c4a:	28 2f       	mov	r18, r24
     c4c:	30 e0       	ldi	r19, 0x00	; 0
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	02 2e       	mov	r0, r18
     c54:	02 c0       	rjmp	.+4      	; 0xc5a <TOGGLE_LED+0xc8>
     c56:	88 0f       	add	r24, r24
     c58:	99 1f       	adc	r25, r25
     c5a:	0a 94       	dec	r0
     c5c:	e2 f7       	brpl	.-8      	; 0xc56 <TOGGLE_LED+0xc4>
     c5e:	84 27       	eor	r24, r20
     c60:	8c 93       	st	X, r24
     c62:	19 c0       	rjmp	.+50     	; 0xc96 <TOGGLE_LED+0x104>
				          case DIO_PORTD : TOGGLE_BIT(PORTD,copy_pin); break;
     c64:	a2 e3       	ldi	r26, 0x32	; 50
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	e2 e3       	ldi	r30, 0x32	; 50
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	80 81       	ld	r24, Z
     c6e:	48 2f       	mov	r20, r24
     c70:	8b 81       	ldd	r24, Y+3	; 0x03
     c72:	28 2f       	mov	r18, r24
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	02 2e       	mov	r0, r18
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <TOGGLE_LED+0xf0>
     c7e:	88 0f       	add	r24, r24
     c80:	99 1f       	adc	r25, r25
     c82:	0a 94       	dec	r0
     c84:	e2 f7       	brpl	.-8      	; 0xc7e <TOGGLE_LED+0xec>
     c86:	84 27       	eor	r24, r20
     c88:	8c 93       	st	X, r24
     c8a:	05 c0       	rjmp	.+10     	; 0xc96 <TOGGLE_LED+0x104>
				          default :local_errorStatus=NOK ; break ;
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	89 83       	std	Y+1, r24	; 0x01
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <TOGGLE_LED+0x104>
				   }

	 }
	  else
	  {
	 	 local_errorStatus=NOK ;
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	89 83       	std	Y+1, r24	; 0x01

	  }
	 return local_errorStatus;
     c96:	89 81       	ldd	r24, Y+1	; 0x01

}
     c98:	0f 90       	pop	r0
     c9a:	0f 90       	pop	r0
     c9c:	0f 90       	pop	r0
     c9e:	0f 90       	pop	r0
     ca0:	0f 90       	pop	r0
     ca2:	cf 91       	pop	r28
     ca4:	df 91       	pop	r29
     ca6:	08 95       	ret

00000ca8 <LCD_Init>:
#include "LCD_Interface.h"
#include "LCD_Config.h"


void LCD_Init()
{
     ca8:	df 93       	push	r29
     caa:	cf 93       	push	r28
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	2e 97       	sbiw	r28, 0x0e	; 14
     cb2:	0f b6       	in	r0, 0x3f	; 63
     cb4:	f8 94       	cli
     cb6:	de bf       	out	0x3e, r29	; 62
     cb8:	0f be       	out	0x3f, r0	; 63
     cba:	cd bf       	out	0x3d, r28	; 61
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	a0 ef       	ldi	r26, 0xF0	; 240
     cc2:	b1 e4       	ldi	r27, 0x41	; 65
     cc4:	8b 87       	std	Y+11, r24	; 0x0b
     cc6:	9c 87       	std	Y+12, r25	; 0x0c
     cc8:	ad 87       	std	Y+13, r26	; 0x0d
     cca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ccc:	6b 85       	ldd	r22, Y+11	; 0x0b
     cce:	7c 85       	ldd	r23, Y+12	; 0x0c
     cd0:	8d 85       	ldd	r24, Y+13	; 0x0d
     cd2:	9e 85       	ldd	r25, Y+14	; 0x0e
     cd4:	20 e0       	ldi	r18, 0x00	; 0
     cd6:	30 e0       	ldi	r19, 0x00	; 0
     cd8:	4a e7       	ldi	r20, 0x7A	; 122
     cda:	55 e4       	ldi	r21, 0x45	; 69
     cdc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ce0:	dc 01       	movw	r26, r24
     ce2:	cb 01       	movw	r24, r22
     ce4:	8f 83       	std	Y+7, r24	; 0x07
     ce6:	98 87       	std	Y+8, r25	; 0x08
     ce8:	a9 87       	std	Y+9, r26	; 0x09
     cea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     cec:	6f 81       	ldd	r22, Y+7	; 0x07
     cee:	78 85       	ldd	r23, Y+8	; 0x08
     cf0:	89 85       	ldd	r24, Y+9	; 0x09
     cf2:	9a 85       	ldd	r25, Y+10	; 0x0a
     cf4:	20 e0       	ldi	r18, 0x00	; 0
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	40 e8       	ldi	r20, 0x80	; 128
     cfa:	5f e3       	ldi	r21, 0x3F	; 63
     cfc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d00:	88 23       	and	r24, r24
     d02:	2c f4       	brge	.+10     	; 0xd0e <LCD_Init+0x66>
		__ticks = 1;
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	9e 83       	std	Y+6, r25	; 0x06
     d0a:	8d 83       	std	Y+5, r24	; 0x05
     d0c:	3f c0       	rjmp	.+126    	; 0xd8c <LCD_Init+0xe4>
	else if (__tmp > 65535)
     d0e:	6f 81       	ldd	r22, Y+7	; 0x07
     d10:	78 85       	ldd	r23, Y+8	; 0x08
     d12:	89 85       	ldd	r24, Y+9	; 0x09
     d14:	9a 85       	ldd	r25, Y+10	; 0x0a
     d16:	20 e0       	ldi	r18, 0x00	; 0
     d18:	3f ef       	ldi	r19, 0xFF	; 255
     d1a:	4f e7       	ldi	r20, 0x7F	; 127
     d1c:	57 e4       	ldi	r21, 0x47	; 71
     d1e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d22:	18 16       	cp	r1, r24
     d24:	4c f5       	brge	.+82     	; 0xd78 <LCD_Init+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d26:	6b 85       	ldd	r22, Y+11	; 0x0b
     d28:	7c 85       	ldd	r23, Y+12	; 0x0c
     d2a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d2c:	9e 85       	ldd	r25, Y+14	; 0x0e
     d2e:	20 e0       	ldi	r18, 0x00	; 0
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	40 e2       	ldi	r20, 0x20	; 32
     d34:	51 e4       	ldi	r21, 0x41	; 65
     d36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d3a:	dc 01       	movw	r26, r24
     d3c:	cb 01       	movw	r24, r22
     d3e:	bc 01       	movw	r22, r24
     d40:	cd 01       	movw	r24, r26
     d42:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d46:	dc 01       	movw	r26, r24
     d48:	cb 01       	movw	r24, r22
     d4a:	9e 83       	std	Y+6, r25	; 0x06
     d4c:	8d 83       	std	Y+5, r24	; 0x05
     d4e:	0f c0       	rjmp	.+30     	; 0xd6e <LCD_Init+0xc6>
     d50:	80 e9       	ldi	r24, 0x90	; 144
     d52:	91 e0       	ldi	r25, 0x01	; 1
     d54:	9c 83       	std	Y+4, r25	; 0x04
     d56:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     d58:	8b 81       	ldd	r24, Y+3	; 0x03
     d5a:	9c 81       	ldd	r25, Y+4	; 0x04
     d5c:	01 97       	sbiw	r24, 0x01	; 1
     d5e:	f1 f7       	brne	.-4      	; 0xd5c <LCD_Init+0xb4>
     d60:	9c 83       	std	Y+4, r25	; 0x04
     d62:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d64:	8d 81       	ldd	r24, Y+5	; 0x05
     d66:	9e 81       	ldd	r25, Y+6	; 0x06
     d68:	01 97       	sbiw	r24, 0x01	; 1
     d6a:	9e 83       	std	Y+6, r25	; 0x06
     d6c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d6e:	8d 81       	ldd	r24, Y+5	; 0x05
     d70:	9e 81       	ldd	r25, Y+6	; 0x06
     d72:	00 97       	sbiw	r24, 0x00	; 0
     d74:	69 f7       	brne	.-38     	; 0xd50 <LCD_Init+0xa8>
     d76:	14 c0       	rjmp	.+40     	; 0xda0 <LCD_Init+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d78:	6f 81       	ldd	r22, Y+7	; 0x07
     d7a:	78 85       	ldd	r23, Y+8	; 0x08
     d7c:	89 85       	ldd	r24, Y+9	; 0x09
     d7e:	9a 85       	ldd	r25, Y+10	; 0x0a
     d80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d84:	dc 01       	movw	r26, r24
     d86:	cb 01       	movw	r24, r22
     d88:	9e 83       	std	Y+6, r25	; 0x06
     d8a:	8d 83       	std	Y+5, r24	; 0x05
     d8c:	8d 81       	ldd	r24, Y+5	; 0x05
     d8e:	9e 81       	ldd	r25, Y+6	; 0x06
     d90:	9a 83       	std	Y+2, r25	; 0x02
     d92:	89 83       	std	Y+1, r24	; 0x01
     d94:	89 81       	ldd	r24, Y+1	; 0x01
     d96:	9a 81       	ldd	r25, Y+2	; 0x02
     d98:	01 97       	sbiw	r24, 0x01	; 1
     d9a:	f1 f7       	brne	.-4      	; 0xd98 <LCD_Init+0xf0>
     d9c:	9a 83       	std	Y+2, r25	; 0x02
     d9e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(30);

	DIO_SetPinDirection(LCD_CTRL_PORT,LCD_RS_PIN,OUTPUT);
     da0:	81 e0       	ldi	r24, 0x01	; 1
     da2:	61 e0       	ldi	r22, 0x01	; 1
     da4:	41 e0       	ldi	r20, 0x01	; 1
     da6:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_CTRL_PORT,LCD_RW_PIN,OUTPUT);
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	62 e0       	ldi	r22, 0x02	; 2
     dae:	41 e0       	ldi	r20, 0x01	; 1
     db0:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>
	DIO_SetPinDirection(LCD_CTRL_PORT,LCD_E_PIN,OUTPUT);
     db4:	81 e0       	ldi	r24, 0x01	; 1
     db6:	63 e0       	ldi	r22, 0x03	; 3
     db8:	41 e0       	ldi	r20, 0x01	; 1
     dba:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>

	DIO_SetPortDirection(LCD_DATA_PORT,OUTPUT);
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	61 e0       	ldi	r22, 0x01	; 1
     dc2:	0e 94 eb 1b 	call	0x37d6	; 0x37d6 <DIO_SetPortDirection>

	LCD_SendCommand(LCD_SET_LINES_FONT);
     dc6:	80 e4       	ldi	r24, 0x40	; 64
     dc8:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <LCD_SendCommand>

	LCD_SendCommand(LCD_SET_DISPLAY_CURSOR_BLANK);
     dcc:	80 e0       	ldi	r24, 0x00	; 0
     dce:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <LCD_SendCommand>

	LCD_SendCommand(LCD_CLEAR_DISPLAY);
     dd2:	81 e0       	ldi	r24, 0x01	; 1
     dd4:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <LCD_SendCommand>

	LCD_SendCommand(LCD_SET_ENTRY_MODE);
     dd8:	89 e4       	ldi	r24, 0x49	; 73
     dda:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <LCD_SendCommand>

}
     dde:	2e 96       	adiw	r28, 0x0e	; 14
     de0:	0f b6       	in	r0, 0x3f	; 63
     de2:	f8 94       	cli
     de4:	de bf       	out	0x3e, r29	; 62
     de6:	0f be       	out	0x3f, r0	; 63
     de8:	cd bf       	out	0x3d, r28	; 61
     dea:	cf 91       	pop	r28
     dec:	df 91       	pop	r29
     dee:	08 95       	ret

00000df0 <LCD_SendCommand>:



void LCD_SendCommand(uint8 copy_command)
{
     df0:	df 93       	push	r29
     df2:	cf 93       	push	r28
     df4:	cd b7       	in	r28, 0x3d	; 61
     df6:	de b7       	in	r29, 0x3e	; 62
     df8:	2f 97       	sbiw	r28, 0x0f	; 15
     dfa:	0f b6       	in	r0, 0x3f	; 63
     dfc:	f8 94       	cli
     dfe:	de bf       	out	0x3e, r29	; 62
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	cd bf       	out	0x3d, r28	; 61
     e04:	8f 87       	std	Y+15, r24	; 0x0f
DIO_SetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,OUTPUT_LOW);
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	61 e0       	ldi	r22, 0x01	; 1
     e0a:	40 e0       	ldi	r20, 0x00	; 0
     e0c:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

DIO_SetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,OUTPUT_LOW);
     e10:	81 e0       	ldi	r24, 0x01	; 1
     e12:	62 e0       	ldi	r22, 0x02	; 2
     e14:	40 e0       	ldi	r20, 0x00	; 0
     e16:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

DIO_SetPortValue(LCD_DATA_PORT,copy_command);
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	6f 85       	ldd	r22, Y+15	; 0x0f
     e1e:	0e 94 a3 1b 	call	0x3746	; 0x3746 <DIO_SetPortValue>

DIO_SetPinValue(LCD_CTRL_PORT,LCD_E_PIN,OUTPUT_HIGH);
     e22:	81 e0       	ldi	r24, 0x01	; 1
     e24:	63 e0       	ldi	r22, 0x03	; 3
     e26:	41 e0       	ldi	r20, 0x01	; 1
     e28:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
     e2c:	80 e0       	ldi	r24, 0x00	; 0
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	a0 e0       	ldi	r26, 0x00	; 0
     e32:	b0 e4       	ldi	r27, 0x40	; 64
     e34:	8b 87       	std	Y+11, r24	; 0x0b
     e36:	9c 87       	std	Y+12, r25	; 0x0c
     e38:	ad 87       	std	Y+13, r26	; 0x0d
     e3a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e3c:	6b 85       	ldd	r22, Y+11	; 0x0b
     e3e:	7c 85       	ldd	r23, Y+12	; 0x0c
     e40:	8d 85       	ldd	r24, Y+13	; 0x0d
     e42:	9e 85       	ldd	r25, Y+14	; 0x0e
     e44:	20 e0       	ldi	r18, 0x00	; 0
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	4a e7       	ldi	r20, 0x7A	; 122
     e4a:	55 e4       	ldi	r21, 0x45	; 69
     e4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e50:	dc 01       	movw	r26, r24
     e52:	cb 01       	movw	r24, r22
     e54:	8f 83       	std	Y+7, r24	; 0x07
     e56:	98 87       	std	Y+8, r25	; 0x08
     e58:	a9 87       	std	Y+9, r26	; 0x09
     e5a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     e5c:	6f 81       	ldd	r22, Y+7	; 0x07
     e5e:	78 85       	ldd	r23, Y+8	; 0x08
     e60:	89 85       	ldd	r24, Y+9	; 0x09
     e62:	9a 85       	ldd	r25, Y+10	; 0x0a
     e64:	20 e0       	ldi	r18, 0x00	; 0
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	40 e8       	ldi	r20, 0x80	; 128
     e6a:	5f e3       	ldi	r21, 0x3F	; 63
     e6c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e70:	88 23       	and	r24, r24
     e72:	2c f4       	brge	.+10     	; 0xe7e <LCD_SendCommand+0x8e>
		__ticks = 1;
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	9e 83       	std	Y+6, r25	; 0x06
     e7a:	8d 83       	std	Y+5, r24	; 0x05
     e7c:	3f c0       	rjmp	.+126    	; 0xefc <LCD_SendCommand+0x10c>
	else if (__tmp > 65535)
     e7e:	6f 81       	ldd	r22, Y+7	; 0x07
     e80:	78 85       	ldd	r23, Y+8	; 0x08
     e82:	89 85       	ldd	r24, Y+9	; 0x09
     e84:	9a 85       	ldd	r25, Y+10	; 0x0a
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	3f ef       	ldi	r19, 0xFF	; 255
     e8a:	4f e7       	ldi	r20, 0x7F	; 127
     e8c:	57 e4       	ldi	r21, 0x47	; 71
     e8e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e92:	18 16       	cp	r1, r24
     e94:	4c f5       	brge	.+82     	; 0xee8 <LCD_SendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e96:	6b 85       	ldd	r22, Y+11	; 0x0b
     e98:	7c 85       	ldd	r23, Y+12	; 0x0c
     e9a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e9c:	9e 85       	ldd	r25, Y+14	; 0x0e
     e9e:	20 e0       	ldi	r18, 0x00	; 0
     ea0:	30 e0       	ldi	r19, 0x00	; 0
     ea2:	40 e2       	ldi	r20, 0x20	; 32
     ea4:	51 e4       	ldi	r21, 0x41	; 65
     ea6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     eaa:	dc 01       	movw	r26, r24
     eac:	cb 01       	movw	r24, r22
     eae:	bc 01       	movw	r22, r24
     eb0:	cd 01       	movw	r24, r26
     eb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     eb6:	dc 01       	movw	r26, r24
     eb8:	cb 01       	movw	r24, r22
     eba:	9e 83       	std	Y+6, r25	; 0x06
     ebc:	8d 83       	std	Y+5, r24	; 0x05
     ebe:	0f c0       	rjmp	.+30     	; 0xede <LCD_SendCommand+0xee>
     ec0:	80 e9       	ldi	r24, 0x90	; 144
     ec2:	91 e0       	ldi	r25, 0x01	; 1
     ec4:	9c 83       	std	Y+4, r25	; 0x04
     ec6:	8b 83       	std	Y+3, r24	; 0x03
     ec8:	8b 81       	ldd	r24, Y+3	; 0x03
     eca:	9c 81       	ldd	r25, Y+4	; 0x04
     ecc:	01 97       	sbiw	r24, 0x01	; 1
     ece:	f1 f7       	brne	.-4      	; 0xecc <LCD_SendCommand+0xdc>
     ed0:	9c 83       	std	Y+4, r25	; 0x04
     ed2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ed4:	8d 81       	ldd	r24, Y+5	; 0x05
     ed6:	9e 81       	ldd	r25, Y+6	; 0x06
     ed8:	01 97       	sbiw	r24, 0x01	; 1
     eda:	9e 83       	std	Y+6, r25	; 0x06
     edc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ede:	8d 81       	ldd	r24, Y+5	; 0x05
     ee0:	9e 81       	ldd	r25, Y+6	; 0x06
     ee2:	00 97       	sbiw	r24, 0x00	; 0
     ee4:	69 f7       	brne	.-38     	; 0xec0 <LCD_SendCommand+0xd0>
     ee6:	14 c0       	rjmp	.+40     	; 0xf10 <LCD_SendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ee8:	6f 81       	ldd	r22, Y+7	; 0x07
     eea:	78 85       	ldd	r23, Y+8	; 0x08
     eec:	89 85       	ldd	r24, Y+9	; 0x09
     eee:	9a 85       	ldd	r25, Y+10	; 0x0a
     ef0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ef4:	dc 01       	movw	r26, r24
     ef6:	cb 01       	movw	r24, r22
     ef8:	9e 83       	std	Y+6, r25	; 0x06
     efa:	8d 83       	std	Y+5, r24	; 0x05
     efc:	8d 81       	ldd	r24, Y+5	; 0x05
     efe:	9e 81       	ldd	r25, Y+6	; 0x06
     f00:	9a 83       	std	Y+2, r25	; 0x02
     f02:	89 83       	std	Y+1, r24	; 0x01
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	9a 81       	ldd	r25, Y+2	; 0x02
     f08:	01 97       	sbiw	r24, 0x01	; 1
     f0a:	f1 f7       	brne	.-4      	; 0xf08 <LCD_SendCommand+0x118>
     f0c:	9a 83       	std	Y+2, r25	; 0x02
     f0e:	89 83       	std	Y+1, r24	; 0x01
_delay_ms(2);
DIO_SetPinValue(LCD_CTRL_PORT,LCD_E_PIN,OUTPUT_LOW);
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	63 e0       	ldi	r22, 0x03	; 3
     f14:	40 e0       	ldi	r20, 0x00	; 0
     f16:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

}
     f1a:	2f 96       	adiw	r28, 0x0f	; 15
     f1c:	0f b6       	in	r0, 0x3f	; 63
     f1e:	f8 94       	cli
     f20:	de bf       	out	0x3e, r29	; 62
     f22:	0f be       	out	0x3f, r0	; 63
     f24:	cd bf       	out	0x3d, r28	; 61
     f26:	cf 91       	pop	r28
     f28:	df 91       	pop	r29
     f2a:	08 95       	ret

00000f2c <LCD_SendData>:


void LCD_SendData(uint8 copy_data)
{
     f2c:	df 93       	push	r29
     f2e:	cf 93       	push	r28
     f30:	cd b7       	in	r28, 0x3d	; 61
     f32:	de b7       	in	r29, 0x3e	; 62
     f34:	2f 97       	sbiw	r28, 0x0f	; 15
     f36:	0f b6       	in	r0, 0x3f	; 63
     f38:	f8 94       	cli
     f3a:	de bf       	out	0x3e, r29	; 62
     f3c:	0f be       	out	0x3f, r0	; 63
     f3e:	cd bf       	out	0x3d, r28	; 61
     f40:	8f 87       	std	Y+15, r24	; 0x0f

	DIO_SetPinValue(LCD_CTRL_PORT,LCD_RS_PIN,OUTPUT_HIGH);
     f42:	81 e0       	ldi	r24, 0x01	; 1
     f44:	61 e0       	ldi	r22, 0x01	; 1
     f46:	41 e0       	ldi	r20, 0x01	; 1
     f48:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

	DIO_SetPinValue(LCD_CTRL_PORT,LCD_RW_PIN,OUTPUT_LOW);
     f4c:	81 e0       	ldi	r24, 0x01	; 1
     f4e:	62 e0       	ldi	r22, 0x02	; 2
     f50:	40 e0       	ldi	r20, 0x00	; 0
     f52:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

	DIO_SetPortValue(LCD_DATA_PORT,copy_data);
     f56:	80 e0       	ldi	r24, 0x00	; 0
     f58:	6f 85       	ldd	r22, Y+15	; 0x0f
     f5a:	0e 94 a3 1b 	call	0x3746	; 0x3746 <DIO_SetPortValue>

	DIO_SetPinValue(LCD_CTRL_PORT,LCD_E_PIN,OUTPUT_HIGH);
     f5e:	81 e0       	ldi	r24, 0x01	; 1
     f60:	63 e0       	ldi	r22, 0x03	; 3
     f62:	41 e0       	ldi	r20, 0x01	; 1
     f64:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	a0 e0       	ldi	r26, 0x00	; 0
     f6e:	b0 e4       	ldi	r27, 0x40	; 64
     f70:	8b 87       	std	Y+11, r24	; 0x0b
     f72:	9c 87       	std	Y+12, r25	; 0x0c
     f74:	ad 87       	std	Y+13, r26	; 0x0d
     f76:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f78:	6b 85       	ldd	r22, Y+11	; 0x0b
     f7a:	7c 85       	ldd	r23, Y+12	; 0x0c
     f7c:	8d 85       	ldd	r24, Y+13	; 0x0d
     f7e:	9e 85       	ldd	r25, Y+14	; 0x0e
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	4a e7       	ldi	r20, 0x7A	; 122
     f86:	55 e4       	ldi	r21, 0x45	; 69
     f88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	8f 83       	std	Y+7, r24	; 0x07
     f92:	98 87       	std	Y+8, r25	; 0x08
     f94:	a9 87       	std	Y+9, r26	; 0x09
     f96:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     f98:	6f 81       	ldd	r22, Y+7	; 0x07
     f9a:	78 85       	ldd	r23, Y+8	; 0x08
     f9c:	89 85       	ldd	r24, Y+9	; 0x09
     f9e:	9a 85       	ldd	r25, Y+10	; 0x0a
     fa0:	20 e0       	ldi	r18, 0x00	; 0
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	40 e8       	ldi	r20, 0x80	; 128
     fa6:	5f e3       	ldi	r21, 0x3F	; 63
     fa8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     fac:	88 23       	and	r24, r24
     fae:	2c f4       	brge	.+10     	; 0xfba <LCD_SendData+0x8e>
		__ticks = 1;
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	9e 83       	std	Y+6, r25	; 0x06
     fb6:	8d 83       	std	Y+5, r24	; 0x05
     fb8:	3f c0       	rjmp	.+126    	; 0x1038 <LCD_SendData+0x10c>
	else if (__tmp > 65535)
     fba:	6f 81       	ldd	r22, Y+7	; 0x07
     fbc:	78 85       	ldd	r23, Y+8	; 0x08
     fbe:	89 85       	ldd	r24, Y+9	; 0x09
     fc0:	9a 85       	ldd	r25, Y+10	; 0x0a
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	3f ef       	ldi	r19, 0xFF	; 255
     fc6:	4f e7       	ldi	r20, 0x7F	; 127
     fc8:	57 e4       	ldi	r21, 0x47	; 71
     fca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     fce:	18 16       	cp	r1, r24
     fd0:	4c f5       	brge	.+82     	; 0x1024 <LCD_SendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fd2:	6b 85       	ldd	r22, Y+11	; 0x0b
     fd4:	7c 85       	ldd	r23, Y+12	; 0x0c
     fd6:	8d 85       	ldd	r24, Y+13	; 0x0d
     fd8:	9e 85       	ldd	r25, Y+14	; 0x0e
     fda:	20 e0       	ldi	r18, 0x00	; 0
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	40 e2       	ldi	r20, 0x20	; 32
     fe0:	51 e4       	ldi	r21, 0x41	; 65
     fe2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fe6:	dc 01       	movw	r26, r24
     fe8:	cb 01       	movw	r24, r22
     fea:	bc 01       	movw	r22, r24
     fec:	cd 01       	movw	r24, r26
     fee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ff2:	dc 01       	movw	r26, r24
     ff4:	cb 01       	movw	r24, r22
     ff6:	9e 83       	std	Y+6, r25	; 0x06
     ff8:	8d 83       	std	Y+5, r24	; 0x05
     ffa:	0f c0       	rjmp	.+30     	; 0x101a <LCD_SendData+0xee>
     ffc:	80 e9       	ldi	r24, 0x90	; 144
     ffe:	91 e0       	ldi	r25, 0x01	; 1
    1000:	9c 83       	std	Y+4, r25	; 0x04
    1002:	8b 83       	std	Y+3, r24	; 0x03
    1004:	8b 81       	ldd	r24, Y+3	; 0x03
    1006:	9c 81       	ldd	r25, Y+4	; 0x04
    1008:	01 97       	sbiw	r24, 0x01	; 1
    100a:	f1 f7       	brne	.-4      	; 0x1008 <LCD_SendData+0xdc>
    100c:	9c 83       	std	Y+4, r25	; 0x04
    100e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1010:	8d 81       	ldd	r24, Y+5	; 0x05
    1012:	9e 81       	ldd	r25, Y+6	; 0x06
    1014:	01 97       	sbiw	r24, 0x01	; 1
    1016:	9e 83       	std	Y+6, r25	; 0x06
    1018:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    101a:	8d 81       	ldd	r24, Y+5	; 0x05
    101c:	9e 81       	ldd	r25, Y+6	; 0x06
    101e:	00 97       	sbiw	r24, 0x00	; 0
    1020:	69 f7       	brne	.-38     	; 0xffc <LCD_SendData+0xd0>
    1022:	14 c0       	rjmp	.+40     	; 0x104c <LCD_SendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1024:	6f 81       	ldd	r22, Y+7	; 0x07
    1026:	78 85       	ldd	r23, Y+8	; 0x08
    1028:	89 85       	ldd	r24, Y+9	; 0x09
    102a:	9a 85       	ldd	r25, Y+10	; 0x0a
    102c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1030:	dc 01       	movw	r26, r24
    1032:	cb 01       	movw	r24, r22
    1034:	9e 83       	std	Y+6, r25	; 0x06
    1036:	8d 83       	std	Y+5, r24	; 0x05
    1038:	8d 81       	ldd	r24, Y+5	; 0x05
    103a:	9e 81       	ldd	r25, Y+6	; 0x06
    103c:	9a 83       	std	Y+2, r25	; 0x02
    103e:	89 83       	std	Y+1, r24	; 0x01
    1040:	89 81       	ldd	r24, Y+1	; 0x01
    1042:	9a 81       	ldd	r25, Y+2	; 0x02
    1044:	01 97       	sbiw	r24, 0x01	; 1
    1046:	f1 f7       	brne	.-4      	; 0x1044 <LCD_SendData+0x118>
    1048:	9a 83       	std	Y+2, r25	; 0x02
    104a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_SetPinValue(LCD_CTRL_PORT,LCD_E_PIN,OUTPUT_LOW);
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	63 e0       	ldi	r22, 0x03	; 3
    1050:	40 e0       	ldi	r20, 0x00	; 0
    1052:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>


 }
    1056:	2f 96       	adiw	r28, 0x0f	; 15
    1058:	0f b6       	in	r0, 0x3f	; 63
    105a:	f8 94       	cli
    105c:	de bf       	out	0x3e, r29	; 62
    105e:	0f be       	out	0x3f, r0	; 63
    1060:	cd bf       	out	0x3d, r28	; 61
    1062:	cf 91       	pop	r28
    1064:	df 91       	pop	r29
    1066:	08 95       	ret

00001068 <BUTTON_GetStatus>:
#include "DIO_Reg.h"
#include "DIO_Interface.h"
#include "BUTTON_Interface.h"

uint8 BUTTON_GetStatus(uint8 copy_port,uint8 copy_pin, uint8 *copy_pvalue)
{
    1068:	df 93       	push	r29
    106a:	cf 93       	push	r28
    106c:	cd b7       	in	r28, 0x3d	; 61
    106e:	de b7       	in	r29, 0x3e	; 62
    1070:	27 97       	sbiw	r28, 0x07	; 7
    1072:	0f b6       	in	r0, 0x3f	; 63
    1074:	f8 94       	cli
    1076:	de bf       	out	0x3e, r29	; 62
    1078:	0f be       	out	0x3f, r0	; 63
    107a:	cd bf       	out	0x3d, r28	; 61
    107c:	8a 83       	std	Y+2, r24	; 0x02
    107e:	6b 83       	std	Y+3, r22	; 0x03
    1080:	5d 83       	std	Y+5, r21	; 0x05
    1082:	4c 83       	std	Y+4, r20	; 0x04
	DIO_SetPinDirection(copy_port,copy_pin,INPUT);
    1084:	8a 81       	ldd	r24, Y+2	; 0x02
    1086:	6b 81       	ldd	r22, Y+3	; 0x03
    1088:	40 e0       	ldi	r20, 0x00	; 0
    108a:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>

	uint8 local_errorStatus =OK;
    108e:	19 82       	std	Y+1, r1	; 0x01
	 if (copy_pin<= PIN7 && (copy_pvalue != NULL))
    1090:	8b 81       	ldd	r24, Y+3	; 0x03
    1092:	88 30       	cpi	r24, 0x08	; 8
    1094:	08 f0       	brcs	.+2      	; 0x1098 <BUTTON_GetStatus+0x30>
    1096:	79 c0       	rjmp	.+242    	; 0x118a <BUTTON_GetStatus+0x122>
    1098:	8c 81       	ldd	r24, Y+4	; 0x04
    109a:	9d 81       	ldd	r25, Y+5	; 0x05
    109c:	00 97       	sbiw	r24, 0x00	; 0
    109e:	09 f4       	brne	.+2      	; 0x10a2 <BUTTON_GetStatus+0x3a>
    10a0:	74 c0       	rjmp	.+232    	; 0x118a <BUTTON_GetStatus+0x122>
	 {


				   switch(copy_port)
    10a2:	8a 81       	ldd	r24, Y+2	; 0x02
    10a4:	28 2f       	mov	r18, r24
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	3f 83       	std	Y+7, r19	; 0x07
    10aa:	2e 83       	std	Y+6, r18	; 0x06
    10ac:	4e 81       	ldd	r20, Y+6	; 0x06
    10ae:	5f 81       	ldd	r21, Y+7	; 0x07
    10b0:	41 30       	cpi	r20, 0x01	; 1
    10b2:	51 05       	cpc	r21, r1
    10b4:	59 f1       	breq	.+86     	; 0x110c <BUTTON_GetStatus+0xa4>
    10b6:	8e 81       	ldd	r24, Y+6	; 0x06
    10b8:	9f 81       	ldd	r25, Y+7	; 0x07
    10ba:	82 30       	cpi	r24, 0x02	; 2
    10bc:	91 05       	cpc	r25, r1
    10be:	34 f4       	brge	.+12     	; 0x10cc <BUTTON_GetStatus+0x64>
    10c0:	2e 81       	ldd	r18, Y+6	; 0x06
    10c2:	3f 81       	ldd	r19, Y+7	; 0x07
    10c4:	21 15       	cp	r18, r1
    10c6:	31 05       	cpc	r19, r1
    10c8:	69 f0       	breq	.+26     	; 0x10e4 <BUTTON_GetStatus+0x7c>
    10ca:	5c c0       	rjmp	.+184    	; 0x1184 <BUTTON_GetStatus+0x11c>
    10cc:	4e 81       	ldd	r20, Y+6	; 0x06
    10ce:	5f 81       	ldd	r21, Y+7	; 0x07
    10d0:	42 30       	cpi	r20, 0x02	; 2
    10d2:	51 05       	cpc	r21, r1
    10d4:	79 f1       	breq	.+94     	; 0x1134 <BUTTON_GetStatus+0xcc>
    10d6:	8e 81       	ldd	r24, Y+6	; 0x06
    10d8:	9f 81       	ldd	r25, Y+7	; 0x07
    10da:	83 30       	cpi	r24, 0x03	; 3
    10dc:	91 05       	cpc	r25, r1
    10de:	09 f4       	brne	.+2      	; 0x10e2 <BUTTON_GetStatus+0x7a>
    10e0:	3d c0       	rjmp	.+122    	; 0x115c <BUTTON_GetStatus+0xf4>
    10e2:	50 c0       	rjmp	.+160    	; 0x1184 <BUTTON_GetStatus+0x11c>
				   {
				          case DIO_PORTA : GET_BIT(PINA,copy_pin,*copy_pvalue); break;
    10e4:	e9 e3       	ldi	r30, 0x39	; 57
    10e6:	f0 e0       	ldi	r31, 0x00	; 0
    10e8:	80 81       	ld	r24, Z
    10ea:	28 2f       	mov	r18, r24
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	8b 81       	ldd	r24, Y+3	; 0x03
    10f0:	88 2f       	mov	r24, r24
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	a9 01       	movw	r20, r18
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <BUTTON_GetStatus+0x94>
    10f8:	55 95       	asr	r21
    10fa:	47 95       	ror	r20
    10fc:	8a 95       	dec	r24
    10fe:	e2 f7       	brpl	.-8      	; 0x10f8 <BUTTON_GetStatus+0x90>
    1100:	ca 01       	movw	r24, r20
    1102:	81 70       	andi	r24, 0x01	; 1
    1104:	ec 81       	ldd	r30, Y+4	; 0x04
    1106:	fd 81       	ldd	r31, Y+5	; 0x05
    1108:	80 83       	st	Z, r24
    110a:	41 c0       	rjmp	.+130    	; 0x118e <BUTTON_GetStatus+0x126>
				          case DIO_PORTB : GET_BIT(PINB,copy_pin,*copy_pvalue); break;
    110c:	e6 e3       	ldi	r30, 0x36	; 54
    110e:	f0 e0       	ldi	r31, 0x00	; 0
    1110:	80 81       	ld	r24, Z
    1112:	28 2f       	mov	r18, r24
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	8b 81       	ldd	r24, Y+3	; 0x03
    1118:	88 2f       	mov	r24, r24
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	a9 01       	movw	r20, r18
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <BUTTON_GetStatus+0xbc>
    1120:	55 95       	asr	r21
    1122:	47 95       	ror	r20
    1124:	8a 95       	dec	r24
    1126:	e2 f7       	brpl	.-8      	; 0x1120 <BUTTON_GetStatus+0xb8>
    1128:	ca 01       	movw	r24, r20
    112a:	81 70       	andi	r24, 0x01	; 1
    112c:	ec 81       	ldd	r30, Y+4	; 0x04
    112e:	fd 81       	ldd	r31, Y+5	; 0x05
    1130:	80 83       	st	Z, r24
    1132:	2d c0       	rjmp	.+90     	; 0x118e <BUTTON_GetStatus+0x126>
				          case DIO_PORTC : GET_BIT(PINC,copy_pin,*copy_pvalue); break;
    1134:	e3 e3       	ldi	r30, 0x33	; 51
    1136:	f0 e0       	ldi	r31, 0x00	; 0
    1138:	80 81       	ld	r24, Z
    113a:	28 2f       	mov	r18, r24
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	88 2f       	mov	r24, r24
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	a9 01       	movw	r20, r18
    1146:	02 c0       	rjmp	.+4      	; 0x114c <BUTTON_GetStatus+0xe4>
    1148:	55 95       	asr	r21
    114a:	47 95       	ror	r20
    114c:	8a 95       	dec	r24
    114e:	e2 f7       	brpl	.-8      	; 0x1148 <BUTTON_GetStatus+0xe0>
    1150:	ca 01       	movw	r24, r20
    1152:	81 70       	andi	r24, 0x01	; 1
    1154:	ec 81       	ldd	r30, Y+4	; 0x04
    1156:	fd 81       	ldd	r31, Y+5	; 0x05
    1158:	80 83       	st	Z, r24
    115a:	19 c0       	rjmp	.+50     	; 0x118e <BUTTON_GetStatus+0x126>
				          case DIO_PORTD : GET_BIT(PIND,copy_pin,*copy_pvalue); break;
    115c:	e0 e3       	ldi	r30, 0x30	; 48
    115e:	f0 e0       	ldi	r31, 0x00	; 0
    1160:	80 81       	ld	r24, Z
    1162:	28 2f       	mov	r18, r24
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	8b 81       	ldd	r24, Y+3	; 0x03
    1168:	88 2f       	mov	r24, r24
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	a9 01       	movw	r20, r18
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <BUTTON_GetStatus+0x10c>
    1170:	55 95       	asr	r21
    1172:	47 95       	ror	r20
    1174:	8a 95       	dec	r24
    1176:	e2 f7       	brpl	.-8      	; 0x1170 <BUTTON_GetStatus+0x108>
    1178:	ca 01       	movw	r24, r20
    117a:	81 70       	andi	r24, 0x01	; 1
    117c:	ec 81       	ldd	r30, Y+4	; 0x04
    117e:	fd 81       	ldd	r31, Y+5	; 0x05
    1180:	80 83       	st	Z, r24
    1182:	05 c0       	rjmp	.+10     	; 0x118e <BUTTON_GetStatus+0x126>
				          default :local_errorStatus=NOK ; break ;
    1184:	81 e0       	ldi	r24, 0x01	; 1
    1186:	89 83       	std	Y+1, r24	; 0x01
    1188:	02 c0       	rjmp	.+4      	; 0x118e <BUTTON_GetStatus+0x126>
				   }

	 }
	 else
	 {
		 local_errorStatus= NOK;
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	89 83       	std	Y+1, r24	; 0x01

	 }
	return local_errorStatus;
    118e:	89 81       	ldd	r24, Y+1	; 0x01

}
    1190:	27 96       	adiw	r28, 0x07	; 7
    1192:	0f b6       	in	r0, 0x3f	; 63
    1194:	f8 94       	cli
    1196:	de bf       	out	0x3e, r29	; 62
    1198:	0f be       	out	0x3f, r0	; 63
    119a:	cd bf       	out	0x3d, r28	; 61
    119c:	cf 91       	pop	r28
    119e:	df 91       	pop	r29
    11a0:	08 95       	ret

000011a2 <main>:
#include "DIO_Reg.h"
#include "DIO_Interface.h"
#include "LED_Interface.h"
#include"BUTTON_Interface.h"
int main(void)
{
    11a2:	0f 93       	push	r16
    11a4:	1f 93       	push	r17
    11a6:	df 93       	push	r29
    11a8:	cf 93       	push	r28
    11aa:	cd b7       	in	r28, 0x3d	; 61
    11ac:	de b7       	in	r29, 0x3e	; 62
    11ae:	c3 55       	subi	r28, 0x53	; 83
    11b0:	d1 40       	sbci	r29, 0x01	; 1
    11b2:	0f b6       	in	r0, 0x3f	; 63
    11b4:	f8 94       	cli
    11b6:	de bf       	out	0x3e, r29	; 62
    11b8:	0f be       	out	0x3f, r0	; 63
    11ba:	cd bf       	out	0x3d, r28	; 61
uint8 button2;
uint8 button1;
uint8 button;
DIO_SetPinDirection(DIO_PORTA,PIN3,OUTPUT);
    11bc:	80 e0       	ldi	r24, 0x00	; 0
    11be:	63 e0       	ldi	r22, 0x03	; 3
    11c0:	41 e0       	ldi	r20, 0x01	; 1
    11c2:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>

while(1)
{
BUTTON_GetStatus(DIO_PORTD,PIN2,&button2);
    11c6:	9e 01       	movw	r18, r28
    11c8:	2f 5a       	subi	r18, 0xAF	; 175
    11ca:	3e 4f       	sbci	r19, 0xFE	; 254
    11cc:	83 e0       	ldi	r24, 0x03	; 3
    11ce:	62 e0       	ldi	r22, 0x02	; 2
    11d0:	a9 01       	movw	r20, r18
    11d2:	0e 94 34 08 	call	0x1068	; 0x1068 <BUTTON_GetStatus>
BUTTON_GetStatus(DIO_PORTD,PIN6,&button1);
    11d6:	9e 01       	movw	r18, r28
    11d8:	2e 5a       	subi	r18, 0xAE	; 174
    11da:	3e 4f       	sbci	r19, 0xFE	; 254
    11dc:	83 e0       	ldi	r24, 0x03	; 3
    11de:	66 e0       	ldi	r22, 0x06	; 6
    11e0:	a9 01       	movw	r20, r18
    11e2:	0e 94 34 08 	call	0x1068	; 0x1068 <BUTTON_GetStatus>
BUTTON_GetStatus(DIO_PORTB,PIN0,&button);
    11e6:	9e 01       	movw	r18, r28
    11e8:	2d 5a       	subi	r18, 0xAD	; 173
    11ea:	3e 4f       	sbci	r19, 0xFE	; 254
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	60 e0       	ldi	r22, 0x00	; 0
    11f0:	a9 01       	movw	r20, r18
    11f2:	0e 94 34 08 	call	0x1068	; 0x1068 <BUTTON_GetStatus>

if(button2== OUTPUT_HIGH)
    11f6:	fe 01       	movw	r30, r28
    11f8:	ef 5a       	subi	r30, 0xAF	; 175
    11fa:	fe 4f       	sbci	r31, 0xFE	; 254
    11fc:	80 81       	ld	r24, Z
    11fe:	81 30       	cpi	r24, 0x01	; 1
    1200:	09 f0       	breq	.+2      	; 0x1204 <main+0x62>
    1202:	69 c4       	rjmp	.+2258   	; 0x1ad6 <main+0x934>
{
    DIO_SetPinValue(DIO_PORTA,PIN3,OUTPUT_HIGH);
    1204:	80 e0       	ldi	r24, 0x00	; 0
    1206:	63 e0       	ldi	r22, 0x03	; 3
    1208:	41 e0       	ldi	r20, 0x01	; 1
    120a:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
    LED_ON(DIO_PORTC , PIN2);
    120e:	82 e0       	ldi	r24, 0x02	; 2
    1210:	62 e0       	ldi	r22, 0x02	; 2
    1212:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    1216:	fe 01       	movw	r30, r28
    1218:	e3 5b       	subi	r30, 0xB3	; 179
    121a:	fe 4f       	sbci	r31, 0xFE	; 254
    121c:	80 e0       	ldi	r24, 0x00	; 0
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	aa ef       	ldi	r26, 0xFA	; 250
    1222:	b3 e4       	ldi	r27, 0x43	; 67
    1224:	80 83       	st	Z, r24
    1226:	91 83       	std	Z+1, r25	; 0x01
    1228:	a2 83       	std	Z+2, r26	; 0x02
    122a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    122c:	8e 01       	movw	r16, r28
    122e:	07 5b       	subi	r16, 0xB7	; 183
    1230:	1e 4f       	sbci	r17, 0xFE	; 254
    1232:	fe 01       	movw	r30, r28
    1234:	e3 5b       	subi	r30, 0xB3	; 179
    1236:	fe 4f       	sbci	r31, 0xFE	; 254
    1238:	60 81       	ld	r22, Z
    123a:	71 81       	ldd	r23, Z+1	; 0x01
    123c:	82 81       	ldd	r24, Z+2	; 0x02
    123e:	93 81       	ldd	r25, Z+3	; 0x03
    1240:	20 e0       	ldi	r18, 0x00	; 0
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	4a e7       	ldi	r20, 0x7A	; 122
    1246:	55 e4       	ldi	r21, 0x45	; 69
    1248:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    124c:	dc 01       	movw	r26, r24
    124e:	cb 01       	movw	r24, r22
    1250:	f8 01       	movw	r30, r16
    1252:	80 83       	st	Z, r24
    1254:	91 83       	std	Z+1, r25	; 0x01
    1256:	a2 83       	std	Z+2, r26	; 0x02
    1258:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    125a:	fe 01       	movw	r30, r28
    125c:	e7 5b       	subi	r30, 0xB7	; 183
    125e:	fe 4f       	sbci	r31, 0xFE	; 254
    1260:	60 81       	ld	r22, Z
    1262:	71 81       	ldd	r23, Z+1	; 0x01
    1264:	82 81       	ldd	r24, Z+2	; 0x02
    1266:	93 81       	ldd	r25, Z+3	; 0x03
    1268:	20 e0       	ldi	r18, 0x00	; 0
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	40 e8       	ldi	r20, 0x80	; 128
    126e:	5f e3       	ldi	r21, 0x3F	; 63
    1270:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1274:	88 23       	and	r24, r24
    1276:	44 f4       	brge	.+16     	; 0x1288 <main+0xe6>
		__ticks = 1;
    1278:	fe 01       	movw	r30, r28
    127a:	e9 5b       	subi	r30, 0xB9	; 185
    127c:	fe 4f       	sbci	r31, 0xFE	; 254
    127e:	81 e0       	ldi	r24, 0x01	; 1
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	91 83       	std	Z+1, r25	; 0x01
    1284:	80 83       	st	Z, r24
    1286:	64 c0       	rjmp	.+200    	; 0x1350 <main+0x1ae>
	else if (__tmp > 65535)
    1288:	fe 01       	movw	r30, r28
    128a:	e7 5b       	subi	r30, 0xB7	; 183
    128c:	fe 4f       	sbci	r31, 0xFE	; 254
    128e:	60 81       	ld	r22, Z
    1290:	71 81       	ldd	r23, Z+1	; 0x01
    1292:	82 81       	ldd	r24, Z+2	; 0x02
    1294:	93 81       	ldd	r25, Z+3	; 0x03
    1296:	20 e0       	ldi	r18, 0x00	; 0
    1298:	3f ef       	ldi	r19, 0xFF	; 255
    129a:	4f e7       	ldi	r20, 0x7F	; 127
    129c:	57 e4       	ldi	r21, 0x47	; 71
    129e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12a2:	18 16       	cp	r1, r24
    12a4:	0c f0       	brlt	.+2      	; 0x12a8 <main+0x106>
    12a6:	43 c0       	rjmp	.+134    	; 0x132e <main+0x18c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12a8:	fe 01       	movw	r30, r28
    12aa:	e3 5b       	subi	r30, 0xB3	; 179
    12ac:	fe 4f       	sbci	r31, 0xFE	; 254
    12ae:	60 81       	ld	r22, Z
    12b0:	71 81       	ldd	r23, Z+1	; 0x01
    12b2:	82 81       	ldd	r24, Z+2	; 0x02
    12b4:	93 81       	ldd	r25, Z+3	; 0x03
    12b6:	20 e0       	ldi	r18, 0x00	; 0
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	40 e2       	ldi	r20, 0x20	; 32
    12bc:	51 e4       	ldi	r21, 0x41	; 65
    12be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12c2:	dc 01       	movw	r26, r24
    12c4:	cb 01       	movw	r24, r22
    12c6:	8e 01       	movw	r16, r28
    12c8:	09 5b       	subi	r16, 0xB9	; 185
    12ca:	1e 4f       	sbci	r17, 0xFE	; 254
    12cc:	bc 01       	movw	r22, r24
    12ce:	cd 01       	movw	r24, r26
    12d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12d4:	dc 01       	movw	r26, r24
    12d6:	cb 01       	movw	r24, r22
    12d8:	f8 01       	movw	r30, r16
    12da:	91 83       	std	Z+1, r25	; 0x01
    12dc:	80 83       	st	Z, r24
    12de:	1f c0       	rjmp	.+62     	; 0x131e <main+0x17c>
    12e0:	fe 01       	movw	r30, r28
    12e2:	eb 5b       	subi	r30, 0xBB	; 187
    12e4:	fe 4f       	sbci	r31, 0xFE	; 254
    12e6:	80 e9       	ldi	r24, 0x90	; 144
    12e8:	91 e0       	ldi	r25, 0x01	; 1
    12ea:	91 83       	std	Z+1, r25	; 0x01
    12ec:	80 83       	st	Z, r24
    12ee:	fe 01       	movw	r30, r28
    12f0:	eb 5b       	subi	r30, 0xBB	; 187
    12f2:	fe 4f       	sbci	r31, 0xFE	; 254
    12f4:	80 81       	ld	r24, Z
    12f6:	91 81       	ldd	r25, Z+1	; 0x01
    12f8:	01 97       	sbiw	r24, 0x01	; 1
    12fa:	f1 f7       	brne	.-4      	; 0x12f8 <main+0x156>
    12fc:	fe 01       	movw	r30, r28
    12fe:	eb 5b       	subi	r30, 0xBB	; 187
    1300:	fe 4f       	sbci	r31, 0xFE	; 254
    1302:	91 83       	std	Z+1, r25	; 0x01
    1304:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1306:	de 01       	movw	r26, r28
    1308:	a9 5b       	subi	r26, 0xB9	; 185
    130a:	be 4f       	sbci	r27, 0xFE	; 254
    130c:	fe 01       	movw	r30, r28
    130e:	e9 5b       	subi	r30, 0xB9	; 185
    1310:	fe 4f       	sbci	r31, 0xFE	; 254
    1312:	80 81       	ld	r24, Z
    1314:	91 81       	ldd	r25, Z+1	; 0x01
    1316:	01 97       	sbiw	r24, 0x01	; 1
    1318:	11 96       	adiw	r26, 0x01	; 1
    131a:	9c 93       	st	X, r25
    131c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    131e:	fe 01       	movw	r30, r28
    1320:	e9 5b       	subi	r30, 0xB9	; 185
    1322:	fe 4f       	sbci	r31, 0xFE	; 254
    1324:	80 81       	ld	r24, Z
    1326:	91 81       	ldd	r25, Z+1	; 0x01
    1328:	00 97       	sbiw	r24, 0x00	; 0
    132a:	d1 f6       	brne	.-76     	; 0x12e0 <main+0x13e>
    132c:	27 c0       	rjmp	.+78     	; 0x137c <main+0x1da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    132e:	8e 01       	movw	r16, r28
    1330:	09 5b       	subi	r16, 0xB9	; 185
    1332:	1e 4f       	sbci	r17, 0xFE	; 254
    1334:	fe 01       	movw	r30, r28
    1336:	e7 5b       	subi	r30, 0xB7	; 183
    1338:	fe 4f       	sbci	r31, 0xFE	; 254
    133a:	60 81       	ld	r22, Z
    133c:	71 81       	ldd	r23, Z+1	; 0x01
    133e:	82 81       	ldd	r24, Z+2	; 0x02
    1340:	93 81       	ldd	r25, Z+3	; 0x03
    1342:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1346:	dc 01       	movw	r26, r24
    1348:	cb 01       	movw	r24, r22
    134a:	f8 01       	movw	r30, r16
    134c:	91 83       	std	Z+1, r25	; 0x01
    134e:	80 83       	st	Z, r24
    1350:	de 01       	movw	r26, r28
    1352:	ad 5b       	subi	r26, 0xBD	; 189
    1354:	be 4f       	sbci	r27, 0xFE	; 254
    1356:	fe 01       	movw	r30, r28
    1358:	e9 5b       	subi	r30, 0xB9	; 185
    135a:	fe 4f       	sbci	r31, 0xFE	; 254
    135c:	80 81       	ld	r24, Z
    135e:	91 81       	ldd	r25, Z+1	; 0x01
    1360:	8d 93       	st	X+, r24
    1362:	9c 93       	st	X, r25
    1364:	fe 01       	movw	r30, r28
    1366:	ed 5b       	subi	r30, 0xBD	; 189
    1368:	fe 4f       	sbci	r31, 0xFE	; 254
    136a:	80 81       	ld	r24, Z
    136c:	91 81       	ldd	r25, Z+1	; 0x01
    136e:	01 97       	sbiw	r24, 0x01	; 1
    1370:	f1 f7       	brne	.-4      	; 0x136e <main+0x1cc>
    1372:	fe 01       	movw	r30, r28
    1374:	ed 5b       	subi	r30, 0xBD	; 189
    1376:	fe 4f       	sbci	r31, 0xFE	; 254
    1378:	91 83       	std	Z+1, r25	; 0x01
    137a:	80 83       	st	Z, r24
    _delay_ms(500);
    DIO_SetPinValue(DIO_PORTA,PIN3,OUTPUT_LOW);
    137c:	80 e0       	ldi	r24, 0x00	; 0
    137e:	63 e0       	ldi	r22, 0x03	; 3
    1380:	40 e0       	ldi	r20, 0x00	; 0
    1382:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
    1386:	fe 01       	movw	r30, r28
    1388:	e1 5c       	subi	r30, 0xC1	; 193
    138a:	fe 4f       	sbci	r31, 0xFE	; 254
    138c:	80 e0       	ldi	r24, 0x00	; 0
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	aa ef       	ldi	r26, 0xFA	; 250
    1392:	b4 e4       	ldi	r27, 0x44	; 68
    1394:	80 83       	st	Z, r24
    1396:	91 83       	std	Z+1, r25	; 0x01
    1398:	a2 83       	std	Z+2, r26	; 0x02
    139a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    139c:	8e 01       	movw	r16, r28
    139e:	05 5c       	subi	r16, 0xC5	; 197
    13a0:	1e 4f       	sbci	r17, 0xFE	; 254
    13a2:	fe 01       	movw	r30, r28
    13a4:	e1 5c       	subi	r30, 0xC1	; 193
    13a6:	fe 4f       	sbci	r31, 0xFE	; 254
    13a8:	60 81       	ld	r22, Z
    13aa:	71 81       	ldd	r23, Z+1	; 0x01
    13ac:	82 81       	ldd	r24, Z+2	; 0x02
    13ae:	93 81       	ldd	r25, Z+3	; 0x03
    13b0:	20 e0       	ldi	r18, 0x00	; 0
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	4a e7       	ldi	r20, 0x7A	; 122
    13b6:	55 e4       	ldi	r21, 0x45	; 69
    13b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13bc:	dc 01       	movw	r26, r24
    13be:	cb 01       	movw	r24, r22
    13c0:	f8 01       	movw	r30, r16
    13c2:	80 83       	st	Z, r24
    13c4:	91 83       	std	Z+1, r25	; 0x01
    13c6:	a2 83       	std	Z+2, r26	; 0x02
    13c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13ca:	fe 01       	movw	r30, r28
    13cc:	e5 5c       	subi	r30, 0xC5	; 197
    13ce:	fe 4f       	sbci	r31, 0xFE	; 254
    13d0:	60 81       	ld	r22, Z
    13d2:	71 81       	ldd	r23, Z+1	; 0x01
    13d4:	82 81       	ldd	r24, Z+2	; 0x02
    13d6:	93 81       	ldd	r25, Z+3	; 0x03
    13d8:	20 e0       	ldi	r18, 0x00	; 0
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	40 e8       	ldi	r20, 0x80	; 128
    13de:	5f e3       	ldi	r21, 0x3F	; 63
    13e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13e4:	88 23       	and	r24, r24
    13e6:	44 f4       	brge	.+16     	; 0x13f8 <main+0x256>
		__ticks = 1;
    13e8:	fe 01       	movw	r30, r28
    13ea:	e7 5c       	subi	r30, 0xC7	; 199
    13ec:	fe 4f       	sbci	r31, 0xFE	; 254
    13ee:	81 e0       	ldi	r24, 0x01	; 1
    13f0:	90 e0       	ldi	r25, 0x00	; 0
    13f2:	91 83       	std	Z+1, r25	; 0x01
    13f4:	80 83       	st	Z, r24
    13f6:	64 c0       	rjmp	.+200    	; 0x14c0 <main+0x31e>
	else if (__tmp > 65535)
    13f8:	fe 01       	movw	r30, r28
    13fa:	e5 5c       	subi	r30, 0xC5	; 197
    13fc:	fe 4f       	sbci	r31, 0xFE	; 254
    13fe:	60 81       	ld	r22, Z
    1400:	71 81       	ldd	r23, Z+1	; 0x01
    1402:	82 81       	ldd	r24, Z+2	; 0x02
    1404:	93 81       	ldd	r25, Z+3	; 0x03
    1406:	20 e0       	ldi	r18, 0x00	; 0
    1408:	3f ef       	ldi	r19, 0xFF	; 255
    140a:	4f e7       	ldi	r20, 0x7F	; 127
    140c:	57 e4       	ldi	r21, 0x47	; 71
    140e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1412:	18 16       	cp	r1, r24
    1414:	0c f0       	brlt	.+2      	; 0x1418 <main+0x276>
    1416:	43 c0       	rjmp	.+134    	; 0x149e <main+0x2fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1418:	fe 01       	movw	r30, r28
    141a:	e1 5c       	subi	r30, 0xC1	; 193
    141c:	fe 4f       	sbci	r31, 0xFE	; 254
    141e:	60 81       	ld	r22, Z
    1420:	71 81       	ldd	r23, Z+1	; 0x01
    1422:	82 81       	ldd	r24, Z+2	; 0x02
    1424:	93 81       	ldd	r25, Z+3	; 0x03
    1426:	20 e0       	ldi	r18, 0x00	; 0
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	40 e2       	ldi	r20, 0x20	; 32
    142c:	51 e4       	ldi	r21, 0x41	; 65
    142e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1432:	dc 01       	movw	r26, r24
    1434:	cb 01       	movw	r24, r22
    1436:	8e 01       	movw	r16, r28
    1438:	07 5c       	subi	r16, 0xC7	; 199
    143a:	1e 4f       	sbci	r17, 0xFE	; 254
    143c:	bc 01       	movw	r22, r24
    143e:	cd 01       	movw	r24, r26
    1440:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1444:	dc 01       	movw	r26, r24
    1446:	cb 01       	movw	r24, r22
    1448:	f8 01       	movw	r30, r16
    144a:	91 83       	std	Z+1, r25	; 0x01
    144c:	80 83       	st	Z, r24
    144e:	1f c0       	rjmp	.+62     	; 0x148e <main+0x2ec>
    1450:	fe 01       	movw	r30, r28
    1452:	e9 5c       	subi	r30, 0xC9	; 201
    1454:	fe 4f       	sbci	r31, 0xFE	; 254
    1456:	80 e9       	ldi	r24, 0x90	; 144
    1458:	91 e0       	ldi	r25, 0x01	; 1
    145a:	91 83       	std	Z+1, r25	; 0x01
    145c:	80 83       	st	Z, r24
    145e:	fe 01       	movw	r30, r28
    1460:	e9 5c       	subi	r30, 0xC9	; 201
    1462:	fe 4f       	sbci	r31, 0xFE	; 254
    1464:	80 81       	ld	r24, Z
    1466:	91 81       	ldd	r25, Z+1	; 0x01
    1468:	01 97       	sbiw	r24, 0x01	; 1
    146a:	f1 f7       	brne	.-4      	; 0x1468 <main+0x2c6>
    146c:	fe 01       	movw	r30, r28
    146e:	e9 5c       	subi	r30, 0xC9	; 201
    1470:	fe 4f       	sbci	r31, 0xFE	; 254
    1472:	91 83       	std	Z+1, r25	; 0x01
    1474:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1476:	de 01       	movw	r26, r28
    1478:	a7 5c       	subi	r26, 0xC7	; 199
    147a:	be 4f       	sbci	r27, 0xFE	; 254
    147c:	fe 01       	movw	r30, r28
    147e:	e7 5c       	subi	r30, 0xC7	; 199
    1480:	fe 4f       	sbci	r31, 0xFE	; 254
    1482:	80 81       	ld	r24, Z
    1484:	91 81       	ldd	r25, Z+1	; 0x01
    1486:	01 97       	sbiw	r24, 0x01	; 1
    1488:	11 96       	adiw	r26, 0x01	; 1
    148a:	9c 93       	st	X, r25
    148c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    148e:	fe 01       	movw	r30, r28
    1490:	e7 5c       	subi	r30, 0xC7	; 199
    1492:	fe 4f       	sbci	r31, 0xFE	; 254
    1494:	80 81       	ld	r24, Z
    1496:	91 81       	ldd	r25, Z+1	; 0x01
    1498:	00 97       	sbiw	r24, 0x00	; 0
    149a:	d1 f6       	brne	.-76     	; 0x1450 <main+0x2ae>
    149c:	27 c0       	rjmp	.+78     	; 0x14ec <main+0x34a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    149e:	8e 01       	movw	r16, r28
    14a0:	07 5c       	subi	r16, 0xC7	; 199
    14a2:	1e 4f       	sbci	r17, 0xFE	; 254
    14a4:	fe 01       	movw	r30, r28
    14a6:	e5 5c       	subi	r30, 0xC5	; 197
    14a8:	fe 4f       	sbci	r31, 0xFE	; 254
    14aa:	60 81       	ld	r22, Z
    14ac:	71 81       	ldd	r23, Z+1	; 0x01
    14ae:	82 81       	ldd	r24, Z+2	; 0x02
    14b0:	93 81       	ldd	r25, Z+3	; 0x03
    14b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14b6:	dc 01       	movw	r26, r24
    14b8:	cb 01       	movw	r24, r22
    14ba:	f8 01       	movw	r30, r16
    14bc:	91 83       	std	Z+1, r25	; 0x01
    14be:	80 83       	st	Z, r24
    14c0:	de 01       	movw	r26, r28
    14c2:	ab 5c       	subi	r26, 0xCB	; 203
    14c4:	be 4f       	sbci	r27, 0xFE	; 254
    14c6:	fe 01       	movw	r30, r28
    14c8:	e7 5c       	subi	r30, 0xC7	; 199
    14ca:	fe 4f       	sbci	r31, 0xFE	; 254
    14cc:	80 81       	ld	r24, Z
    14ce:	91 81       	ldd	r25, Z+1	; 0x01
    14d0:	8d 93       	st	X+, r24
    14d2:	9c 93       	st	X, r25
    14d4:	fe 01       	movw	r30, r28
    14d6:	eb 5c       	subi	r30, 0xCB	; 203
    14d8:	fe 4f       	sbci	r31, 0xFE	; 254
    14da:	80 81       	ld	r24, Z
    14dc:	91 81       	ldd	r25, Z+1	; 0x01
    14de:	01 97       	sbiw	r24, 0x01	; 1
    14e0:	f1 f7       	brne	.-4      	; 0x14de <main+0x33c>
    14e2:	fe 01       	movw	r30, r28
    14e4:	eb 5c       	subi	r30, 0xCB	; 203
    14e6:	fe 4f       	sbci	r31, 0xFE	; 254
    14e8:	91 83       	std	Z+1, r25	; 0x01
    14ea:	80 83       	st	Z, r24
    _delay_ms(2000);
    LED_OFF(DIO_PORTC,PIN2);
    14ec:	82 e0       	ldi	r24, 0x02	; 2
    14ee:	62 e0       	ldi	r22, 0x02	; 2
    14f0:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>

    DIO_SetPinValue(DIO_PORTA,PIN3,OUTPUT_HIGH);
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	63 e0       	ldi	r22, 0x03	; 3
    14f8:	41 e0       	ldi	r20, 0x01	; 1
    14fa:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
    LED_ON(DIO_PORTC , PIN7);
    14fe:	82 e0       	ldi	r24, 0x02	; 2
    1500:	67 e0       	ldi	r22, 0x07	; 7
    1502:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    1506:	fe 01       	movw	r30, r28
    1508:	ef 5c       	subi	r30, 0xCF	; 207
    150a:	fe 4f       	sbci	r31, 0xFE	; 254
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	aa ef       	ldi	r26, 0xFA	; 250
    1512:	b3 e4       	ldi	r27, 0x43	; 67
    1514:	80 83       	st	Z, r24
    1516:	91 83       	std	Z+1, r25	; 0x01
    1518:	a2 83       	std	Z+2, r26	; 0x02
    151a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    151c:	8e 01       	movw	r16, r28
    151e:	03 5d       	subi	r16, 0xD3	; 211
    1520:	1e 4f       	sbci	r17, 0xFE	; 254
    1522:	fe 01       	movw	r30, r28
    1524:	ef 5c       	subi	r30, 0xCF	; 207
    1526:	fe 4f       	sbci	r31, 0xFE	; 254
    1528:	60 81       	ld	r22, Z
    152a:	71 81       	ldd	r23, Z+1	; 0x01
    152c:	82 81       	ldd	r24, Z+2	; 0x02
    152e:	93 81       	ldd	r25, Z+3	; 0x03
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	4a e7       	ldi	r20, 0x7A	; 122
    1536:	55 e4       	ldi	r21, 0x45	; 69
    1538:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    153c:	dc 01       	movw	r26, r24
    153e:	cb 01       	movw	r24, r22
    1540:	f8 01       	movw	r30, r16
    1542:	80 83       	st	Z, r24
    1544:	91 83       	std	Z+1, r25	; 0x01
    1546:	a2 83       	std	Z+2, r26	; 0x02
    1548:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    154a:	fe 01       	movw	r30, r28
    154c:	e3 5d       	subi	r30, 0xD3	; 211
    154e:	fe 4f       	sbci	r31, 0xFE	; 254
    1550:	60 81       	ld	r22, Z
    1552:	71 81       	ldd	r23, Z+1	; 0x01
    1554:	82 81       	ldd	r24, Z+2	; 0x02
    1556:	93 81       	ldd	r25, Z+3	; 0x03
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	40 e8       	ldi	r20, 0x80	; 128
    155e:	5f e3       	ldi	r21, 0x3F	; 63
    1560:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1564:	88 23       	and	r24, r24
    1566:	44 f4       	brge	.+16     	; 0x1578 <main+0x3d6>
		__ticks = 1;
    1568:	fe 01       	movw	r30, r28
    156a:	e5 5d       	subi	r30, 0xD5	; 213
    156c:	fe 4f       	sbci	r31, 0xFE	; 254
    156e:	81 e0       	ldi	r24, 0x01	; 1
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	91 83       	std	Z+1, r25	; 0x01
    1574:	80 83       	st	Z, r24
    1576:	64 c0       	rjmp	.+200    	; 0x1640 <main+0x49e>
	else if (__tmp > 65535)
    1578:	fe 01       	movw	r30, r28
    157a:	e3 5d       	subi	r30, 0xD3	; 211
    157c:	fe 4f       	sbci	r31, 0xFE	; 254
    157e:	60 81       	ld	r22, Z
    1580:	71 81       	ldd	r23, Z+1	; 0x01
    1582:	82 81       	ldd	r24, Z+2	; 0x02
    1584:	93 81       	ldd	r25, Z+3	; 0x03
    1586:	20 e0       	ldi	r18, 0x00	; 0
    1588:	3f ef       	ldi	r19, 0xFF	; 255
    158a:	4f e7       	ldi	r20, 0x7F	; 127
    158c:	57 e4       	ldi	r21, 0x47	; 71
    158e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1592:	18 16       	cp	r1, r24
    1594:	0c f0       	brlt	.+2      	; 0x1598 <main+0x3f6>
    1596:	43 c0       	rjmp	.+134    	; 0x161e <main+0x47c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1598:	fe 01       	movw	r30, r28
    159a:	ef 5c       	subi	r30, 0xCF	; 207
    159c:	fe 4f       	sbci	r31, 0xFE	; 254
    159e:	60 81       	ld	r22, Z
    15a0:	71 81       	ldd	r23, Z+1	; 0x01
    15a2:	82 81       	ldd	r24, Z+2	; 0x02
    15a4:	93 81       	ldd	r25, Z+3	; 0x03
    15a6:	20 e0       	ldi	r18, 0x00	; 0
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	40 e2       	ldi	r20, 0x20	; 32
    15ac:	51 e4       	ldi	r21, 0x41	; 65
    15ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15b2:	dc 01       	movw	r26, r24
    15b4:	cb 01       	movw	r24, r22
    15b6:	8e 01       	movw	r16, r28
    15b8:	05 5d       	subi	r16, 0xD5	; 213
    15ba:	1e 4f       	sbci	r17, 0xFE	; 254
    15bc:	bc 01       	movw	r22, r24
    15be:	cd 01       	movw	r24, r26
    15c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15c4:	dc 01       	movw	r26, r24
    15c6:	cb 01       	movw	r24, r22
    15c8:	f8 01       	movw	r30, r16
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	80 83       	st	Z, r24
    15ce:	1f c0       	rjmp	.+62     	; 0x160e <main+0x46c>
    15d0:	fe 01       	movw	r30, r28
    15d2:	e7 5d       	subi	r30, 0xD7	; 215
    15d4:	fe 4f       	sbci	r31, 0xFE	; 254
    15d6:	80 e9       	ldi	r24, 0x90	; 144
    15d8:	91 e0       	ldi	r25, 0x01	; 1
    15da:	91 83       	std	Z+1, r25	; 0x01
    15dc:	80 83       	st	Z, r24
    15de:	fe 01       	movw	r30, r28
    15e0:	e7 5d       	subi	r30, 0xD7	; 215
    15e2:	fe 4f       	sbci	r31, 0xFE	; 254
    15e4:	80 81       	ld	r24, Z
    15e6:	91 81       	ldd	r25, Z+1	; 0x01
    15e8:	01 97       	sbiw	r24, 0x01	; 1
    15ea:	f1 f7       	brne	.-4      	; 0x15e8 <main+0x446>
    15ec:	fe 01       	movw	r30, r28
    15ee:	e7 5d       	subi	r30, 0xD7	; 215
    15f0:	fe 4f       	sbci	r31, 0xFE	; 254
    15f2:	91 83       	std	Z+1, r25	; 0x01
    15f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15f6:	de 01       	movw	r26, r28
    15f8:	a5 5d       	subi	r26, 0xD5	; 213
    15fa:	be 4f       	sbci	r27, 0xFE	; 254
    15fc:	fe 01       	movw	r30, r28
    15fe:	e5 5d       	subi	r30, 0xD5	; 213
    1600:	fe 4f       	sbci	r31, 0xFE	; 254
    1602:	80 81       	ld	r24, Z
    1604:	91 81       	ldd	r25, Z+1	; 0x01
    1606:	01 97       	sbiw	r24, 0x01	; 1
    1608:	11 96       	adiw	r26, 0x01	; 1
    160a:	9c 93       	st	X, r25
    160c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    160e:	fe 01       	movw	r30, r28
    1610:	e5 5d       	subi	r30, 0xD5	; 213
    1612:	fe 4f       	sbci	r31, 0xFE	; 254
    1614:	80 81       	ld	r24, Z
    1616:	91 81       	ldd	r25, Z+1	; 0x01
    1618:	00 97       	sbiw	r24, 0x00	; 0
    161a:	d1 f6       	brne	.-76     	; 0x15d0 <main+0x42e>
    161c:	27 c0       	rjmp	.+78     	; 0x166c <main+0x4ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    161e:	8e 01       	movw	r16, r28
    1620:	05 5d       	subi	r16, 0xD5	; 213
    1622:	1e 4f       	sbci	r17, 0xFE	; 254
    1624:	fe 01       	movw	r30, r28
    1626:	e3 5d       	subi	r30, 0xD3	; 211
    1628:	fe 4f       	sbci	r31, 0xFE	; 254
    162a:	60 81       	ld	r22, Z
    162c:	71 81       	ldd	r23, Z+1	; 0x01
    162e:	82 81       	ldd	r24, Z+2	; 0x02
    1630:	93 81       	ldd	r25, Z+3	; 0x03
    1632:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1636:	dc 01       	movw	r26, r24
    1638:	cb 01       	movw	r24, r22
    163a:	f8 01       	movw	r30, r16
    163c:	91 83       	std	Z+1, r25	; 0x01
    163e:	80 83       	st	Z, r24
    1640:	de 01       	movw	r26, r28
    1642:	a9 5d       	subi	r26, 0xD9	; 217
    1644:	be 4f       	sbci	r27, 0xFE	; 254
    1646:	fe 01       	movw	r30, r28
    1648:	e5 5d       	subi	r30, 0xD5	; 213
    164a:	fe 4f       	sbci	r31, 0xFE	; 254
    164c:	80 81       	ld	r24, Z
    164e:	91 81       	ldd	r25, Z+1	; 0x01
    1650:	8d 93       	st	X+, r24
    1652:	9c 93       	st	X, r25
    1654:	fe 01       	movw	r30, r28
    1656:	e9 5d       	subi	r30, 0xD9	; 217
    1658:	fe 4f       	sbci	r31, 0xFE	; 254
    165a:	80 81       	ld	r24, Z
    165c:	91 81       	ldd	r25, Z+1	; 0x01
    165e:	01 97       	sbiw	r24, 0x01	; 1
    1660:	f1 f7       	brne	.-4      	; 0x165e <main+0x4bc>
    1662:	fe 01       	movw	r30, r28
    1664:	e9 5d       	subi	r30, 0xD9	; 217
    1666:	fe 4f       	sbci	r31, 0xFE	; 254
    1668:	91 83       	std	Z+1, r25	; 0x01
    166a:	80 83       	st	Z, r24
    _delay_ms(500);
    DIO_SetPinValue(DIO_PORTA,PIN3,OUTPUT_LOW);
    166c:	80 e0       	ldi	r24, 0x00	; 0
    166e:	63 e0       	ldi	r22, 0x03	; 3
    1670:	40 e0       	ldi	r20, 0x00	; 0
    1672:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
    1676:	fe 01       	movw	r30, r28
    1678:	ed 5d       	subi	r30, 0xDD	; 221
    167a:	fe 4f       	sbci	r31, 0xFE	; 254
    167c:	80 e0       	ldi	r24, 0x00	; 0
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	aa ef       	ldi	r26, 0xFA	; 250
    1682:	b4 e4       	ldi	r27, 0x44	; 68
    1684:	80 83       	st	Z, r24
    1686:	91 83       	std	Z+1, r25	; 0x01
    1688:	a2 83       	std	Z+2, r26	; 0x02
    168a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    168c:	8e 01       	movw	r16, r28
    168e:	01 5e       	subi	r16, 0xE1	; 225
    1690:	1e 4f       	sbci	r17, 0xFE	; 254
    1692:	fe 01       	movw	r30, r28
    1694:	ed 5d       	subi	r30, 0xDD	; 221
    1696:	fe 4f       	sbci	r31, 0xFE	; 254
    1698:	60 81       	ld	r22, Z
    169a:	71 81       	ldd	r23, Z+1	; 0x01
    169c:	82 81       	ldd	r24, Z+2	; 0x02
    169e:	93 81       	ldd	r25, Z+3	; 0x03
    16a0:	20 e0       	ldi	r18, 0x00	; 0
    16a2:	30 e0       	ldi	r19, 0x00	; 0
    16a4:	4a e7       	ldi	r20, 0x7A	; 122
    16a6:	55 e4       	ldi	r21, 0x45	; 69
    16a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16ac:	dc 01       	movw	r26, r24
    16ae:	cb 01       	movw	r24, r22
    16b0:	f8 01       	movw	r30, r16
    16b2:	80 83       	st	Z, r24
    16b4:	91 83       	std	Z+1, r25	; 0x01
    16b6:	a2 83       	std	Z+2, r26	; 0x02
    16b8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    16ba:	fe 01       	movw	r30, r28
    16bc:	e1 5e       	subi	r30, 0xE1	; 225
    16be:	fe 4f       	sbci	r31, 0xFE	; 254
    16c0:	60 81       	ld	r22, Z
    16c2:	71 81       	ldd	r23, Z+1	; 0x01
    16c4:	82 81       	ldd	r24, Z+2	; 0x02
    16c6:	93 81       	ldd	r25, Z+3	; 0x03
    16c8:	20 e0       	ldi	r18, 0x00	; 0
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	40 e8       	ldi	r20, 0x80	; 128
    16ce:	5f e3       	ldi	r21, 0x3F	; 63
    16d0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16d4:	88 23       	and	r24, r24
    16d6:	44 f4       	brge	.+16     	; 0x16e8 <main+0x546>
		__ticks = 1;
    16d8:	fe 01       	movw	r30, r28
    16da:	e3 5e       	subi	r30, 0xE3	; 227
    16dc:	fe 4f       	sbci	r31, 0xFE	; 254
    16de:	81 e0       	ldi	r24, 0x01	; 1
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	91 83       	std	Z+1, r25	; 0x01
    16e4:	80 83       	st	Z, r24
    16e6:	64 c0       	rjmp	.+200    	; 0x17b0 <main+0x60e>
	else if (__tmp > 65535)
    16e8:	fe 01       	movw	r30, r28
    16ea:	e1 5e       	subi	r30, 0xE1	; 225
    16ec:	fe 4f       	sbci	r31, 0xFE	; 254
    16ee:	60 81       	ld	r22, Z
    16f0:	71 81       	ldd	r23, Z+1	; 0x01
    16f2:	82 81       	ldd	r24, Z+2	; 0x02
    16f4:	93 81       	ldd	r25, Z+3	; 0x03
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	3f ef       	ldi	r19, 0xFF	; 255
    16fa:	4f e7       	ldi	r20, 0x7F	; 127
    16fc:	57 e4       	ldi	r21, 0x47	; 71
    16fe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1702:	18 16       	cp	r1, r24
    1704:	0c f0       	brlt	.+2      	; 0x1708 <main+0x566>
    1706:	43 c0       	rjmp	.+134    	; 0x178e <main+0x5ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1708:	fe 01       	movw	r30, r28
    170a:	ed 5d       	subi	r30, 0xDD	; 221
    170c:	fe 4f       	sbci	r31, 0xFE	; 254
    170e:	60 81       	ld	r22, Z
    1710:	71 81       	ldd	r23, Z+1	; 0x01
    1712:	82 81       	ldd	r24, Z+2	; 0x02
    1714:	93 81       	ldd	r25, Z+3	; 0x03
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	40 e2       	ldi	r20, 0x20	; 32
    171c:	51 e4       	ldi	r21, 0x41	; 65
    171e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1722:	dc 01       	movw	r26, r24
    1724:	cb 01       	movw	r24, r22
    1726:	8e 01       	movw	r16, r28
    1728:	03 5e       	subi	r16, 0xE3	; 227
    172a:	1e 4f       	sbci	r17, 0xFE	; 254
    172c:	bc 01       	movw	r22, r24
    172e:	cd 01       	movw	r24, r26
    1730:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1734:	dc 01       	movw	r26, r24
    1736:	cb 01       	movw	r24, r22
    1738:	f8 01       	movw	r30, r16
    173a:	91 83       	std	Z+1, r25	; 0x01
    173c:	80 83       	st	Z, r24
    173e:	1f c0       	rjmp	.+62     	; 0x177e <main+0x5dc>
    1740:	fe 01       	movw	r30, r28
    1742:	e5 5e       	subi	r30, 0xE5	; 229
    1744:	fe 4f       	sbci	r31, 0xFE	; 254
    1746:	80 e9       	ldi	r24, 0x90	; 144
    1748:	91 e0       	ldi	r25, 0x01	; 1
    174a:	91 83       	std	Z+1, r25	; 0x01
    174c:	80 83       	st	Z, r24
    174e:	fe 01       	movw	r30, r28
    1750:	e5 5e       	subi	r30, 0xE5	; 229
    1752:	fe 4f       	sbci	r31, 0xFE	; 254
    1754:	80 81       	ld	r24, Z
    1756:	91 81       	ldd	r25, Z+1	; 0x01
    1758:	01 97       	sbiw	r24, 0x01	; 1
    175a:	f1 f7       	brne	.-4      	; 0x1758 <main+0x5b6>
    175c:	fe 01       	movw	r30, r28
    175e:	e5 5e       	subi	r30, 0xE5	; 229
    1760:	fe 4f       	sbci	r31, 0xFE	; 254
    1762:	91 83       	std	Z+1, r25	; 0x01
    1764:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1766:	de 01       	movw	r26, r28
    1768:	a3 5e       	subi	r26, 0xE3	; 227
    176a:	be 4f       	sbci	r27, 0xFE	; 254
    176c:	fe 01       	movw	r30, r28
    176e:	e3 5e       	subi	r30, 0xE3	; 227
    1770:	fe 4f       	sbci	r31, 0xFE	; 254
    1772:	80 81       	ld	r24, Z
    1774:	91 81       	ldd	r25, Z+1	; 0x01
    1776:	01 97       	sbiw	r24, 0x01	; 1
    1778:	11 96       	adiw	r26, 0x01	; 1
    177a:	9c 93       	st	X, r25
    177c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    177e:	fe 01       	movw	r30, r28
    1780:	e3 5e       	subi	r30, 0xE3	; 227
    1782:	fe 4f       	sbci	r31, 0xFE	; 254
    1784:	80 81       	ld	r24, Z
    1786:	91 81       	ldd	r25, Z+1	; 0x01
    1788:	00 97       	sbiw	r24, 0x00	; 0
    178a:	d1 f6       	brne	.-76     	; 0x1740 <main+0x59e>
    178c:	27 c0       	rjmp	.+78     	; 0x17dc <main+0x63a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    178e:	8e 01       	movw	r16, r28
    1790:	03 5e       	subi	r16, 0xE3	; 227
    1792:	1e 4f       	sbci	r17, 0xFE	; 254
    1794:	fe 01       	movw	r30, r28
    1796:	e1 5e       	subi	r30, 0xE1	; 225
    1798:	fe 4f       	sbci	r31, 0xFE	; 254
    179a:	60 81       	ld	r22, Z
    179c:	71 81       	ldd	r23, Z+1	; 0x01
    179e:	82 81       	ldd	r24, Z+2	; 0x02
    17a0:	93 81       	ldd	r25, Z+3	; 0x03
    17a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17a6:	dc 01       	movw	r26, r24
    17a8:	cb 01       	movw	r24, r22
    17aa:	f8 01       	movw	r30, r16
    17ac:	91 83       	std	Z+1, r25	; 0x01
    17ae:	80 83       	st	Z, r24
    17b0:	de 01       	movw	r26, r28
    17b2:	a7 5e       	subi	r26, 0xE7	; 231
    17b4:	be 4f       	sbci	r27, 0xFE	; 254
    17b6:	fe 01       	movw	r30, r28
    17b8:	e3 5e       	subi	r30, 0xE3	; 227
    17ba:	fe 4f       	sbci	r31, 0xFE	; 254
    17bc:	80 81       	ld	r24, Z
    17be:	91 81       	ldd	r25, Z+1	; 0x01
    17c0:	8d 93       	st	X+, r24
    17c2:	9c 93       	st	X, r25
    17c4:	fe 01       	movw	r30, r28
    17c6:	e7 5e       	subi	r30, 0xE7	; 231
    17c8:	fe 4f       	sbci	r31, 0xFE	; 254
    17ca:	80 81       	ld	r24, Z
    17cc:	91 81       	ldd	r25, Z+1	; 0x01
    17ce:	01 97       	sbiw	r24, 0x01	; 1
    17d0:	f1 f7       	brne	.-4      	; 0x17ce <main+0x62c>
    17d2:	fe 01       	movw	r30, r28
    17d4:	e7 5e       	subi	r30, 0xE7	; 231
    17d6:	fe 4f       	sbci	r31, 0xFE	; 254
    17d8:	91 83       	std	Z+1, r25	; 0x01
    17da:	80 83       	st	Z, r24
    _delay_ms(2000);
    LED_OFF(DIO_PORTC,PIN7);
    17dc:	82 e0       	ldi	r24, 0x02	; 2
    17de:	67 e0       	ldi	r22, 0x07	; 7
    17e0:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>

    DIO_SetPinValue(DIO_PORTA,PIN3,OUTPUT_HIGH);
    17e4:	80 e0       	ldi	r24, 0x00	; 0
    17e6:	63 e0       	ldi	r22, 0x03	; 3
    17e8:	41 e0       	ldi	r20, 0x01	; 1
    17ea:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
    LED_ON(DIO_PORTD,PIN3);
    17ee:	83 e0       	ldi	r24, 0x03	; 3
    17f0:	63 e0       	ldi	r22, 0x03	; 3
    17f2:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    17f6:	fe 01       	movw	r30, r28
    17f8:	eb 5e       	subi	r30, 0xEB	; 235
    17fa:	fe 4f       	sbci	r31, 0xFE	; 254
    17fc:	80 e0       	ldi	r24, 0x00	; 0
    17fe:	90 e0       	ldi	r25, 0x00	; 0
    1800:	aa ef       	ldi	r26, 0xFA	; 250
    1802:	b3 e4       	ldi	r27, 0x43	; 67
    1804:	80 83       	st	Z, r24
    1806:	91 83       	std	Z+1, r25	; 0x01
    1808:	a2 83       	std	Z+2, r26	; 0x02
    180a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    180c:	8e 01       	movw	r16, r28
    180e:	0f 5e       	subi	r16, 0xEF	; 239
    1810:	1e 4f       	sbci	r17, 0xFE	; 254
    1812:	fe 01       	movw	r30, r28
    1814:	eb 5e       	subi	r30, 0xEB	; 235
    1816:	fe 4f       	sbci	r31, 0xFE	; 254
    1818:	60 81       	ld	r22, Z
    181a:	71 81       	ldd	r23, Z+1	; 0x01
    181c:	82 81       	ldd	r24, Z+2	; 0x02
    181e:	93 81       	ldd	r25, Z+3	; 0x03
    1820:	20 e0       	ldi	r18, 0x00	; 0
    1822:	30 e0       	ldi	r19, 0x00	; 0
    1824:	4a e7       	ldi	r20, 0x7A	; 122
    1826:	55 e4       	ldi	r21, 0x45	; 69
    1828:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    182c:	dc 01       	movw	r26, r24
    182e:	cb 01       	movw	r24, r22
    1830:	f8 01       	movw	r30, r16
    1832:	80 83       	st	Z, r24
    1834:	91 83       	std	Z+1, r25	; 0x01
    1836:	a2 83       	std	Z+2, r26	; 0x02
    1838:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    183a:	fe 01       	movw	r30, r28
    183c:	ef 5e       	subi	r30, 0xEF	; 239
    183e:	fe 4f       	sbci	r31, 0xFE	; 254
    1840:	60 81       	ld	r22, Z
    1842:	71 81       	ldd	r23, Z+1	; 0x01
    1844:	82 81       	ldd	r24, Z+2	; 0x02
    1846:	93 81       	ldd	r25, Z+3	; 0x03
    1848:	20 e0       	ldi	r18, 0x00	; 0
    184a:	30 e0       	ldi	r19, 0x00	; 0
    184c:	40 e8       	ldi	r20, 0x80	; 128
    184e:	5f e3       	ldi	r21, 0x3F	; 63
    1850:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1854:	88 23       	and	r24, r24
    1856:	44 f4       	brge	.+16     	; 0x1868 <main+0x6c6>
		__ticks = 1;
    1858:	fe 01       	movw	r30, r28
    185a:	e1 5f       	subi	r30, 0xF1	; 241
    185c:	fe 4f       	sbci	r31, 0xFE	; 254
    185e:	81 e0       	ldi	r24, 0x01	; 1
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	91 83       	std	Z+1, r25	; 0x01
    1864:	80 83       	st	Z, r24
    1866:	64 c0       	rjmp	.+200    	; 0x1930 <main+0x78e>
	else if (__tmp > 65535)
    1868:	fe 01       	movw	r30, r28
    186a:	ef 5e       	subi	r30, 0xEF	; 239
    186c:	fe 4f       	sbci	r31, 0xFE	; 254
    186e:	60 81       	ld	r22, Z
    1870:	71 81       	ldd	r23, Z+1	; 0x01
    1872:	82 81       	ldd	r24, Z+2	; 0x02
    1874:	93 81       	ldd	r25, Z+3	; 0x03
    1876:	20 e0       	ldi	r18, 0x00	; 0
    1878:	3f ef       	ldi	r19, 0xFF	; 255
    187a:	4f e7       	ldi	r20, 0x7F	; 127
    187c:	57 e4       	ldi	r21, 0x47	; 71
    187e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1882:	18 16       	cp	r1, r24
    1884:	0c f0       	brlt	.+2      	; 0x1888 <main+0x6e6>
    1886:	43 c0       	rjmp	.+134    	; 0x190e <main+0x76c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1888:	fe 01       	movw	r30, r28
    188a:	eb 5e       	subi	r30, 0xEB	; 235
    188c:	fe 4f       	sbci	r31, 0xFE	; 254
    188e:	60 81       	ld	r22, Z
    1890:	71 81       	ldd	r23, Z+1	; 0x01
    1892:	82 81       	ldd	r24, Z+2	; 0x02
    1894:	93 81       	ldd	r25, Z+3	; 0x03
    1896:	20 e0       	ldi	r18, 0x00	; 0
    1898:	30 e0       	ldi	r19, 0x00	; 0
    189a:	40 e2       	ldi	r20, 0x20	; 32
    189c:	51 e4       	ldi	r21, 0x41	; 65
    189e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18a2:	dc 01       	movw	r26, r24
    18a4:	cb 01       	movw	r24, r22
    18a6:	8e 01       	movw	r16, r28
    18a8:	01 5f       	subi	r16, 0xF1	; 241
    18aa:	1e 4f       	sbci	r17, 0xFE	; 254
    18ac:	bc 01       	movw	r22, r24
    18ae:	cd 01       	movw	r24, r26
    18b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18b4:	dc 01       	movw	r26, r24
    18b6:	cb 01       	movw	r24, r22
    18b8:	f8 01       	movw	r30, r16
    18ba:	91 83       	std	Z+1, r25	; 0x01
    18bc:	80 83       	st	Z, r24
    18be:	1f c0       	rjmp	.+62     	; 0x18fe <main+0x75c>
    18c0:	fe 01       	movw	r30, r28
    18c2:	e3 5f       	subi	r30, 0xF3	; 243
    18c4:	fe 4f       	sbci	r31, 0xFE	; 254
    18c6:	80 e9       	ldi	r24, 0x90	; 144
    18c8:	91 e0       	ldi	r25, 0x01	; 1
    18ca:	91 83       	std	Z+1, r25	; 0x01
    18cc:	80 83       	st	Z, r24
    18ce:	fe 01       	movw	r30, r28
    18d0:	e3 5f       	subi	r30, 0xF3	; 243
    18d2:	fe 4f       	sbci	r31, 0xFE	; 254
    18d4:	80 81       	ld	r24, Z
    18d6:	91 81       	ldd	r25, Z+1	; 0x01
    18d8:	01 97       	sbiw	r24, 0x01	; 1
    18da:	f1 f7       	brne	.-4      	; 0x18d8 <main+0x736>
    18dc:	fe 01       	movw	r30, r28
    18de:	e3 5f       	subi	r30, 0xF3	; 243
    18e0:	fe 4f       	sbci	r31, 0xFE	; 254
    18e2:	91 83       	std	Z+1, r25	; 0x01
    18e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18e6:	de 01       	movw	r26, r28
    18e8:	a1 5f       	subi	r26, 0xF1	; 241
    18ea:	be 4f       	sbci	r27, 0xFE	; 254
    18ec:	fe 01       	movw	r30, r28
    18ee:	e1 5f       	subi	r30, 0xF1	; 241
    18f0:	fe 4f       	sbci	r31, 0xFE	; 254
    18f2:	80 81       	ld	r24, Z
    18f4:	91 81       	ldd	r25, Z+1	; 0x01
    18f6:	01 97       	sbiw	r24, 0x01	; 1
    18f8:	11 96       	adiw	r26, 0x01	; 1
    18fa:	9c 93       	st	X, r25
    18fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18fe:	fe 01       	movw	r30, r28
    1900:	e1 5f       	subi	r30, 0xF1	; 241
    1902:	fe 4f       	sbci	r31, 0xFE	; 254
    1904:	80 81       	ld	r24, Z
    1906:	91 81       	ldd	r25, Z+1	; 0x01
    1908:	00 97       	sbiw	r24, 0x00	; 0
    190a:	d1 f6       	brne	.-76     	; 0x18c0 <main+0x71e>
    190c:	27 c0       	rjmp	.+78     	; 0x195c <main+0x7ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    190e:	8e 01       	movw	r16, r28
    1910:	01 5f       	subi	r16, 0xF1	; 241
    1912:	1e 4f       	sbci	r17, 0xFE	; 254
    1914:	fe 01       	movw	r30, r28
    1916:	ef 5e       	subi	r30, 0xEF	; 239
    1918:	fe 4f       	sbci	r31, 0xFE	; 254
    191a:	60 81       	ld	r22, Z
    191c:	71 81       	ldd	r23, Z+1	; 0x01
    191e:	82 81       	ldd	r24, Z+2	; 0x02
    1920:	93 81       	ldd	r25, Z+3	; 0x03
    1922:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1926:	dc 01       	movw	r26, r24
    1928:	cb 01       	movw	r24, r22
    192a:	f8 01       	movw	r30, r16
    192c:	91 83       	std	Z+1, r25	; 0x01
    192e:	80 83       	st	Z, r24
    1930:	de 01       	movw	r26, r28
    1932:	a5 5f       	subi	r26, 0xF5	; 245
    1934:	be 4f       	sbci	r27, 0xFE	; 254
    1936:	fe 01       	movw	r30, r28
    1938:	e1 5f       	subi	r30, 0xF1	; 241
    193a:	fe 4f       	sbci	r31, 0xFE	; 254
    193c:	80 81       	ld	r24, Z
    193e:	91 81       	ldd	r25, Z+1	; 0x01
    1940:	8d 93       	st	X+, r24
    1942:	9c 93       	st	X, r25
    1944:	fe 01       	movw	r30, r28
    1946:	e5 5f       	subi	r30, 0xF5	; 245
    1948:	fe 4f       	sbci	r31, 0xFE	; 254
    194a:	80 81       	ld	r24, Z
    194c:	91 81       	ldd	r25, Z+1	; 0x01
    194e:	01 97       	sbiw	r24, 0x01	; 1
    1950:	f1 f7       	brne	.-4      	; 0x194e <main+0x7ac>
    1952:	fe 01       	movw	r30, r28
    1954:	e5 5f       	subi	r30, 0xF5	; 245
    1956:	fe 4f       	sbci	r31, 0xFE	; 254
    1958:	91 83       	std	Z+1, r25	; 0x01
    195a:	80 83       	st	Z, r24
    _delay_ms(500);
    DIO_SetPinValue(DIO_PORTA,PIN3,OUTPUT_LOW);
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	63 e0       	ldi	r22, 0x03	; 3
    1960:	40 e0       	ldi	r20, 0x00	; 0
    1962:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>
    1966:	fe 01       	movw	r30, r28
    1968:	e9 5f       	subi	r30, 0xF9	; 249
    196a:	fe 4f       	sbci	r31, 0xFE	; 254
    196c:	80 e0       	ldi	r24, 0x00	; 0
    196e:	90 e0       	ldi	r25, 0x00	; 0
    1970:	aa ef       	ldi	r26, 0xFA	; 250
    1972:	b4 e4       	ldi	r27, 0x44	; 68
    1974:	80 83       	st	Z, r24
    1976:	91 83       	std	Z+1, r25	; 0x01
    1978:	a2 83       	std	Z+2, r26	; 0x02
    197a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    197c:	8e 01       	movw	r16, r28
    197e:	0d 5f       	subi	r16, 0xFD	; 253
    1980:	1e 4f       	sbci	r17, 0xFE	; 254
    1982:	fe 01       	movw	r30, r28
    1984:	e9 5f       	subi	r30, 0xF9	; 249
    1986:	fe 4f       	sbci	r31, 0xFE	; 254
    1988:	60 81       	ld	r22, Z
    198a:	71 81       	ldd	r23, Z+1	; 0x01
    198c:	82 81       	ldd	r24, Z+2	; 0x02
    198e:	93 81       	ldd	r25, Z+3	; 0x03
    1990:	20 e0       	ldi	r18, 0x00	; 0
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	4a e7       	ldi	r20, 0x7A	; 122
    1996:	55 e4       	ldi	r21, 0x45	; 69
    1998:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	f8 01       	movw	r30, r16
    19a2:	80 83       	st	Z, r24
    19a4:	91 83       	std	Z+1, r25	; 0x01
    19a6:	a2 83       	std	Z+2, r26	; 0x02
    19a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19aa:	fe 01       	movw	r30, r28
    19ac:	ed 5f       	subi	r30, 0xFD	; 253
    19ae:	fe 4f       	sbci	r31, 0xFE	; 254
    19b0:	60 81       	ld	r22, Z
    19b2:	71 81       	ldd	r23, Z+1	; 0x01
    19b4:	82 81       	ldd	r24, Z+2	; 0x02
    19b6:	93 81       	ldd	r25, Z+3	; 0x03
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e8       	ldi	r20, 0x80	; 128
    19be:	5f e3       	ldi	r21, 0x3F	; 63
    19c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19c4:	88 23       	and	r24, r24
    19c6:	44 f4       	brge	.+16     	; 0x19d8 <main+0x836>
		__ticks = 1;
    19c8:	fe 01       	movw	r30, r28
    19ca:	ef 5f       	subi	r30, 0xFF	; 255
    19cc:	fe 4f       	sbci	r31, 0xFE	; 254
    19ce:	81 e0       	ldi	r24, 0x01	; 1
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	91 83       	std	Z+1, r25	; 0x01
    19d4:	80 83       	st	Z, r24
    19d6:	64 c0       	rjmp	.+200    	; 0x1aa0 <main+0x8fe>
	else if (__tmp > 65535)
    19d8:	fe 01       	movw	r30, r28
    19da:	ed 5f       	subi	r30, 0xFD	; 253
    19dc:	fe 4f       	sbci	r31, 0xFE	; 254
    19de:	60 81       	ld	r22, Z
    19e0:	71 81       	ldd	r23, Z+1	; 0x01
    19e2:	82 81       	ldd	r24, Z+2	; 0x02
    19e4:	93 81       	ldd	r25, Z+3	; 0x03
    19e6:	20 e0       	ldi	r18, 0x00	; 0
    19e8:	3f ef       	ldi	r19, 0xFF	; 255
    19ea:	4f e7       	ldi	r20, 0x7F	; 127
    19ec:	57 e4       	ldi	r21, 0x47	; 71
    19ee:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19f2:	18 16       	cp	r1, r24
    19f4:	0c f0       	brlt	.+2      	; 0x19f8 <main+0x856>
    19f6:	43 c0       	rjmp	.+134    	; 0x1a7e <main+0x8dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19f8:	fe 01       	movw	r30, r28
    19fa:	e9 5f       	subi	r30, 0xF9	; 249
    19fc:	fe 4f       	sbci	r31, 0xFE	; 254
    19fe:	60 81       	ld	r22, Z
    1a00:	71 81       	ldd	r23, Z+1	; 0x01
    1a02:	82 81       	ldd	r24, Z+2	; 0x02
    1a04:	93 81       	ldd	r25, Z+3	; 0x03
    1a06:	20 e0       	ldi	r18, 0x00	; 0
    1a08:	30 e0       	ldi	r19, 0x00	; 0
    1a0a:	40 e2       	ldi	r20, 0x20	; 32
    1a0c:	51 e4       	ldi	r21, 0x41	; 65
    1a0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	8e 01       	movw	r16, r28
    1a18:	0f 5f       	subi	r16, 0xFF	; 255
    1a1a:	1e 4f       	sbci	r17, 0xFE	; 254
    1a1c:	bc 01       	movw	r22, r24
    1a1e:	cd 01       	movw	r24, r26
    1a20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a24:	dc 01       	movw	r26, r24
    1a26:	cb 01       	movw	r24, r22
    1a28:	f8 01       	movw	r30, r16
    1a2a:	91 83       	std	Z+1, r25	; 0x01
    1a2c:	80 83       	st	Z, r24
    1a2e:	1f c0       	rjmp	.+62     	; 0x1a6e <main+0x8cc>
    1a30:	fe 01       	movw	r30, r28
    1a32:	e1 50       	subi	r30, 0x01	; 1
    1a34:	ff 4f       	sbci	r31, 0xFF	; 255
    1a36:	80 e9       	ldi	r24, 0x90	; 144
    1a38:	91 e0       	ldi	r25, 0x01	; 1
    1a3a:	91 83       	std	Z+1, r25	; 0x01
    1a3c:	80 83       	st	Z, r24
    1a3e:	fe 01       	movw	r30, r28
    1a40:	e1 50       	subi	r30, 0x01	; 1
    1a42:	ff 4f       	sbci	r31, 0xFF	; 255
    1a44:	80 81       	ld	r24, Z
    1a46:	91 81       	ldd	r25, Z+1	; 0x01
    1a48:	01 97       	sbiw	r24, 0x01	; 1
    1a4a:	f1 f7       	brne	.-4      	; 0x1a48 <main+0x8a6>
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	e1 50       	subi	r30, 0x01	; 1
    1a50:	ff 4f       	sbci	r31, 0xFF	; 255
    1a52:	91 83       	std	Z+1, r25	; 0x01
    1a54:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a56:	de 01       	movw	r26, r28
    1a58:	af 5f       	subi	r26, 0xFF	; 255
    1a5a:	be 4f       	sbci	r27, 0xFE	; 254
    1a5c:	fe 01       	movw	r30, r28
    1a5e:	ef 5f       	subi	r30, 0xFF	; 255
    1a60:	fe 4f       	sbci	r31, 0xFE	; 254
    1a62:	80 81       	ld	r24, Z
    1a64:	91 81       	ldd	r25, Z+1	; 0x01
    1a66:	01 97       	sbiw	r24, 0x01	; 1
    1a68:	11 96       	adiw	r26, 0x01	; 1
    1a6a:	9c 93       	st	X, r25
    1a6c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a6e:	fe 01       	movw	r30, r28
    1a70:	ef 5f       	subi	r30, 0xFF	; 255
    1a72:	fe 4f       	sbci	r31, 0xFE	; 254
    1a74:	80 81       	ld	r24, Z
    1a76:	91 81       	ldd	r25, Z+1	; 0x01
    1a78:	00 97       	sbiw	r24, 0x00	; 0
    1a7a:	d1 f6       	brne	.-76     	; 0x1a30 <main+0x88e>
    1a7c:	27 c0       	rjmp	.+78     	; 0x1acc <main+0x92a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a7e:	8e 01       	movw	r16, r28
    1a80:	0f 5f       	subi	r16, 0xFF	; 255
    1a82:	1e 4f       	sbci	r17, 0xFE	; 254
    1a84:	fe 01       	movw	r30, r28
    1a86:	ed 5f       	subi	r30, 0xFD	; 253
    1a88:	fe 4f       	sbci	r31, 0xFE	; 254
    1a8a:	60 81       	ld	r22, Z
    1a8c:	71 81       	ldd	r23, Z+1	; 0x01
    1a8e:	82 81       	ldd	r24, Z+2	; 0x02
    1a90:	93 81       	ldd	r25, Z+3	; 0x03
    1a92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a96:	dc 01       	movw	r26, r24
    1a98:	cb 01       	movw	r24, r22
    1a9a:	f8 01       	movw	r30, r16
    1a9c:	91 83       	std	Z+1, r25	; 0x01
    1a9e:	80 83       	st	Z, r24
    1aa0:	de 01       	movw	r26, r28
    1aa2:	a3 50       	subi	r26, 0x03	; 3
    1aa4:	bf 4f       	sbci	r27, 0xFF	; 255
    1aa6:	fe 01       	movw	r30, r28
    1aa8:	ef 5f       	subi	r30, 0xFF	; 255
    1aaa:	fe 4f       	sbci	r31, 0xFE	; 254
    1aac:	80 81       	ld	r24, Z
    1aae:	91 81       	ldd	r25, Z+1	; 0x01
    1ab0:	8d 93       	st	X+, r24
    1ab2:	9c 93       	st	X, r25
    1ab4:	fe 01       	movw	r30, r28
    1ab6:	e3 50       	subi	r30, 0x03	; 3
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	80 81       	ld	r24, Z
    1abc:	91 81       	ldd	r25, Z+1	; 0x01
    1abe:	01 97       	sbiw	r24, 0x01	; 1
    1ac0:	f1 f7       	brne	.-4      	; 0x1abe <main+0x91c>
    1ac2:	fe 01       	movw	r30, r28
    1ac4:	e3 50       	subi	r30, 0x03	; 3
    1ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac8:	91 83       	std	Z+1, r25	; 0x01
    1aca:	80 83       	st	Z, r24
    _delay_ms(2000);
    LED_OFF(DIO_PORTC,PIN7);
    1acc:	82 e0       	ldi	r24, 0x02	; 2
    1ace:	67 e0       	ldi	r22, 0x07	; 7
    1ad0:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    1ad4:	78 cb       	rjmp	.-2320   	; 0x11c6 <main+0x24>




}
else if(button1== OUTPUT_HIGH)
    1ad6:	fe 01       	movw	r30, r28
    1ad8:	ee 5a       	subi	r30, 0xAE	; 174
    1ada:	fe 4f       	sbci	r31, 0xFE	; 254
    1adc:	80 81       	ld	r24, Z
    1ade:	81 30       	cpi	r24, 0x01	; 1
    1ae0:	09 f0       	breq	.+2      	; 0x1ae4 <main+0x942>
    1ae2:	47 c5       	rjmp	.+2702   	; 0x2572 <main+0x13d0>
{
	// 001
	LED_ON(DIO_PORTC ,PIN2);
    1ae4:	82 e0       	ldi	r24, 0x02	; 2
    1ae6:	62 e0       	ldi	r22, 0x02	; 2
    1ae8:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    1aec:	fe 01       	movw	r30, r28
    1aee:	e7 50       	subi	r30, 0x07	; 7
    1af0:	ff 4f       	sbci	r31, 0xFF	; 255
    1af2:	80 e0       	ldi	r24, 0x00	; 0
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	aa ef       	ldi	r26, 0xFA	; 250
    1af8:	b3 e4       	ldi	r27, 0x43	; 67
    1afa:	80 83       	st	Z, r24
    1afc:	91 83       	std	Z+1, r25	; 0x01
    1afe:	a2 83       	std	Z+2, r26	; 0x02
    1b00:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b02:	8e 01       	movw	r16, r28
    1b04:	0b 50       	subi	r16, 0x0B	; 11
    1b06:	1f 4f       	sbci	r17, 0xFF	; 255
    1b08:	fe 01       	movw	r30, r28
    1b0a:	e7 50       	subi	r30, 0x07	; 7
    1b0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0e:	60 81       	ld	r22, Z
    1b10:	71 81       	ldd	r23, Z+1	; 0x01
    1b12:	82 81       	ldd	r24, Z+2	; 0x02
    1b14:	93 81       	ldd	r25, Z+3	; 0x03
    1b16:	20 e0       	ldi	r18, 0x00	; 0
    1b18:	30 e0       	ldi	r19, 0x00	; 0
    1b1a:	4a e7       	ldi	r20, 0x7A	; 122
    1b1c:	55 e4       	ldi	r21, 0x45	; 69
    1b1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b22:	dc 01       	movw	r26, r24
    1b24:	cb 01       	movw	r24, r22
    1b26:	f8 01       	movw	r30, r16
    1b28:	80 83       	st	Z, r24
    1b2a:	91 83       	std	Z+1, r25	; 0x01
    1b2c:	a2 83       	std	Z+2, r26	; 0x02
    1b2e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b30:	fe 01       	movw	r30, r28
    1b32:	eb 50       	subi	r30, 0x0B	; 11
    1b34:	ff 4f       	sbci	r31, 0xFF	; 255
    1b36:	60 81       	ld	r22, Z
    1b38:	71 81       	ldd	r23, Z+1	; 0x01
    1b3a:	82 81       	ldd	r24, Z+2	; 0x02
    1b3c:	93 81       	ldd	r25, Z+3	; 0x03
    1b3e:	20 e0       	ldi	r18, 0x00	; 0
    1b40:	30 e0       	ldi	r19, 0x00	; 0
    1b42:	40 e8       	ldi	r20, 0x80	; 128
    1b44:	5f e3       	ldi	r21, 0x3F	; 63
    1b46:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b4a:	88 23       	and	r24, r24
    1b4c:	44 f4       	brge	.+16     	; 0x1b5e <main+0x9bc>
		__ticks = 1;
    1b4e:	fe 01       	movw	r30, r28
    1b50:	ed 50       	subi	r30, 0x0D	; 13
    1b52:	ff 4f       	sbci	r31, 0xFF	; 255
    1b54:	81 e0       	ldi	r24, 0x01	; 1
    1b56:	90 e0       	ldi	r25, 0x00	; 0
    1b58:	91 83       	std	Z+1, r25	; 0x01
    1b5a:	80 83       	st	Z, r24
    1b5c:	64 c0       	rjmp	.+200    	; 0x1c26 <main+0xa84>
	else if (__tmp > 65535)
    1b5e:	fe 01       	movw	r30, r28
    1b60:	eb 50       	subi	r30, 0x0B	; 11
    1b62:	ff 4f       	sbci	r31, 0xFF	; 255
    1b64:	60 81       	ld	r22, Z
    1b66:	71 81       	ldd	r23, Z+1	; 0x01
    1b68:	82 81       	ldd	r24, Z+2	; 0x02
    1b6a:	93 81       	ldd	r25, Z+3	; 0x03
    1b6c:	20 e0       	ldi	r18, 0x00	; 0
    1b6e:	3f ef       	ldi	r19, 0xFF	; 255
    1b70:	4f e7       	ldi	r20, 0x7F	; 127
    1b72:	57 e4       	ldi	r21, 0x47	; 71
    1b74:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b78:	18 16       	cp	r1, r24
    1b7a:	0c f0       	brlt	.+2      	; 0x1b7e <main+0x9dc>
    1b7c:	43 c0       	rjmp	.+134    	; 0x1c04 <main+0xa62>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b7e:	fe 01       	movw	r30, r28
    1b80:	e7 50       	subi	r30, 0x07	; 7
    1b82:	ff 4f       	sbci	r31, 0xFF	; 255
    1b84:	60 81       	ld	r22, Z
    1b86:	71 81       	ldd	r23, Z+1	; 0x01
    1b88:	82 81       	ldd	r24, Z+2	; 0x02
    1b8a:	93 81       	ldd	r25, Z+3	; 0x03
    1b8c:	20 e0       	ldi	r18, 0x00	; 0
    1b8e:	30 e0       	ldi	r19, 0x00	; 0
    1b90:	40 e2       	ldi	r20, 0x20	; 32
    1b92:	51 e4       	ldi	r21, 0x41	; 65
    1b94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b98:	dc 01       	movw	r26, r24
    1b9a:	cb 01       	movw	r24, r22
    1b9c:	8e 01       	movw	r16, r28
    1b9e:	0d 50       	subi	r16, 0x0D	; 13
    1ba0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ba2:	bc 01       	movw	r22, r24
    1ba4:	cd 01       	movw	r24, r26
    1ba6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1baa:	dc 01       	movw	r26, r24
    1bac:	cb 01       	movw	r24, r22
    1bae:	f8 01       	movw	r30, r16
    1bb0:	91 83       	std	Z+1, r25	; 0x01
    1bb2:	80 83       	st	Z, r24
    1bb4:	1f c0       	rjmp	.+62     	; 0x1bf4 <main+0xa52>
    1bb6:	fe 01       	movw	r30, r28
    1bb8:	ef 50       	subi	r30, 0x0F	; 15
    1bba:	ff 4f       	sbci	r31, 0xFF	; 255
    1bbc:	80 e9       	ldi	r24, 0x90	; 144
    1bbe:	91 e0       	ldi	r25, 0x01	; 1
    1bc0:	91 83       	std	Z+1, r25	; 0x01
    1bc2:	80 83       	st	Z, r24
    1bc4:	fe 01       	movw	r30, r28
    1bc6:	ef 50       	subi	r30, 0x0F	; 15
    1bc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bca:	80 81       	ld	r24, Z
    1bcc:	91 81       	ldd	r25, Z+1	; 0x01
    1bce:	01 97       	sbiw	r24, 0x01	; 1
    1bd0:	f1 f7       	brne	.-4      	; 0x1bce <main+0xa2c>
    1bd2:	fe 01       	movw	r30, r28
    1bd4:	ef 50       	subi	r30, 0x0F	; 15
    1bd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd8:	91 83       	std	Z+1, r25	; 0x01
    1bda:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bdc:	de 01       	movw	r26, r28
    1bde:	ad 50       	subi	r26, 0x0D	; 13
    1be0:	bf 4f       	sbci	r27, 0xFF	; 255
    1be2:	fe 01       	movw	r30, r28
    1be4:	ed 50       	subi	r30, 0x0D	; 13
    1be6:	ff 4f       	sbci	r31, 0xFF	; 255
    1be8:	80 81       	ld	r24, Z
    1bea:	91 81       	ldd	r25, Z+1	; 0x01
    1bec:	01 97       	sbiw	r24, 0x01	; 1
    1bee:	11 96       	adiw	r26, 0x01	; 1
    1bf0:	9c 93       	st	X, r25
    1bf2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bf4:	fe 01       	movw	r30, r28
    1bf6:	ed 50       	subi	r30, 0x0D	; 13
    1bf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfa:	80 81       	ld	r24, Z
    1bfc:	91 81       	ldd	r25, Z+1	; 0x01
    1bfe:	00 97       	sbiw	r24, 0x00	; 0
    1c00:	d1 f6       	brne	.-76     	; 0x1bb6 <main+0xa14>
    1c02:	27 c0       	rjmp	.+78     	; 0x1c52 <main+0xab0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c04:	8e 01       	movw	r16, r28
    1c06:	0d 50       	subi	r16, 0x0D	; 13
    1c08:	1f 4f       	sbci	r17, 0xFF	; 255
    1c0a:	fe 01       	movw	r30, r28
    1c0c:	eb 50       	subi	r30, 0x0B	; 11
    1c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c10:	60 81       	ld	r22, Z
    1c12:	71 81       	ldd	r23, Z+1	; 0x01
    1c14:	82 81       	ldd	r24, Z+2	; 0x02
    1c16:	93 81       	ldd	r25, Z+3	; 0x03
    1c18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c1c:	dc 01       	movw	r26, r24
    1c1e:	cb 01       	movw	r24, r22
    1c20:	f8 01       	movw	r30, r16
    1c22:	91 83       	std	Z+1, r25	; 0x01
    1c24:	80 83       	st	Z, r24
    1c26:	de 01       	movw	r26, r28
    1c28:	a1 51       	subi	r26, 0x11	; 17
    1c2a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c2c:	fe 01       	movw	r30, r28
    1c2e:	ed 50       	subi	r30, 0x0D	; 13
    1c30:	ff 4f       	sbci	r31, 0xFF	; 255
    1c32:	80 81       	ld	r24, Z
    1c34:	91 81       	ldd	r25, Z+1	; 0x01
    1c36:	8d 93       	st	X+, r24
    1c38:	9c 93       	st	X, r25
    1c3a:	fe 01       	movw	r30, r28
    1c3c:	e1 51       	subi	r30, 0x11	; 17
    1c3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c40:	80 81       	ld	r24, Z
    1c42:	91 81       	ldd	r25, Z+1	; 0x01
    1c44:	01 97       	sbiw	r24, 0x01	; 1
    1c46:	f1 f7       	brne	.-4      	; 0x1c44 <main+0xaa2>
    1c48:	fe 01       	movw	r30, r28
    1c4a:	e1 51       	subi	r30, 0x11	; 17
    1c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4e:	91 83       	std	Z+1, r25	; 0x01
    1c50:	80 83       	st	Z, r24
	_delay_ms(500);
	LED_OFF(DIO_PORTC,PIN2);
    1c52:	82 e0       	ldi	r24, 0x02	; 2
    1c54:	62 e0       	ldi	r22, 0x02	; 2
    1c56:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>

	//010
	LED_ON(DIO_PORTC , PIN7);
    1c5a:	82 e0       	ldi	r24, 0x02	; 2
    1c5c:	67 e0       	ldi	r22, 0x07	; 7
    1c5e:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    1c62:	fe 01       	movw	r30, r28
    1c64:	e5 51       	subi	r30, 0x15	; 21
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	80 e0       	ldi	r24, 0x00	; 0
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	aa ef       	ldi	r26, 0xFA	; 250
    1c6e:	b3 e4       	ldi	r27, 0x43	; 67
    1c70:	80 83       	st	Z, r24
    1c72:	91 83       	std	Z+1, r25	; 0x01
    1c74:	a2 83       	std	Z+2, r26	; 0x02
    1c76:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c78:	8e 01       	movw	r16, r28
    1c7a:	09 51       	subi	r16, 0x19	; 25
    1c7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c7e:	fe 01       	movw	r30, r28
    1c80:	e5 51       	subi	r30, 0x15	; 21
    1c82:	ff 4f       	sbci	r31, 0xFF	; 255
    1c84:	60 81       	ld	r22, Z
    1c86:	71 81       	ldd	r23, Z+1	; 0x01
    1c88:	82 81       	ldd	r24, Z+2	; 0x02
    1c8a:	93 81       	ldd	r25, Z+3	; 0x03
    1c8c:	20 e0       	ldi	r18, 0x00	; 0
    1c8e:	30 e0       	ldi	r19, 0x00	; 0
    1c90:	4a e7       	ldi	r20, 0x7A	; 122
    1c92:	55 e4       	ldi	r21, 0x45	; 69
    1c94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c98:	dc 01       	movw	r26, r24
    1c9a:	cb 01       	movw	r24, r22
    1c9c:	f8 01       	movw	r30, r16
    1c9e:	80 83       	st	Z, r24
    1ca0:	91 83       	std	Z+1, r25	; 0x01
    1ca2:	a2 83       	std	Z+2, r26	; 0x02
    1ca4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ca6:	fe 01       	movw	r30, r28
    1ca8:	e9 51       	subi	r30, 0x19	; 25
    1caa:	ff 4f       	sbci	r31, 0xFF	; 255
    1cac:	60 81       	ld	r22, Z
    1cae:	71 81       	ldd	r23, Z+1	; 0x01
    1cb0:	82 81       	ldd	r24, Z+2	; 0x02
    1cb2:	93 81       	ldd	r25, Z+3	; 0x03
    1cb4:	20 e0       	ldi	r18, 0x00	; 0
    1cb6:	30 e0       	ldi	r19, 0x00	; 0
    1cb8:	40 e8       	ldi	r20, 0x80	; 128
    1cba:	5f e3       	ldi	r21, 0x3F	; 63
    1cbc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1cc0:	88 23       	and	r24, r24
    1cc2:	44 f4       	brge	.+16     	; 0x1cd4 <main+0xb32>
		__ticks = 1;
    1cc4:	fe 01       	movw	r30, r28
    1cc6:	eb 51       	subi	r30, 0x1B	; 27
    1cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cca:	81 e0       	ldi	r24, 0x01	; 1
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	91 83       	std	Z+1, r25	; 0x01
    1cd0:	80 83       	st	Z, r24
    1cd2:	64 c0       	rjmp	.+200    	; 0x1d9c <main+0xbfa>
	else if (__tmp > 65535)
    1cd4:	fe 01       	movw	r30, r28
    1cd6:	e9 51       	subi	r30, 0x19	; 25
    1cd8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cda:	60 81       	ld	r22, Z
    1cdc:	71 81       	ldd	r23, Z+1	; 0x01
    1cde:	82 81       	ldd	r24, Z+2	; 0x02
    1ce0:	93 81       	ldd	r25, Z+3	; 0x03
    1ce2:	20 e0       	ldi	r18, 0x00	; 0
    1ce4:	3f ef       	ldi	r19, 0xFF	; 255
    1ce6:	4f e7       	ldi	r20, 0x7F	; 127
    1ce8:	57 e4       	ldi	r21, 0x47	; 71
    1cea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1cee:	18 16       	cp	r1, r24
    1cf0:	0c f0       	brlt	.+2      	; 0x1cf4 <main+0xb52>
    1cf2:	43 c0       	rjmp	.+134    	; 0x1d7a <main+0xbd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cf4:	fe 01       	movw	r30, r28
    1cf6:	e5 51       	subi	r30, 0x15	; 21
    1cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfa:	60 81       	ld	r22, Z
    1cfc:	71 81       	ldd	r23, Z+1	; 0x01
    1cfe:	82 81       	ldd	r24, Z+2	; 0x02
    1d00:	93 81       	ldd	r25, Z+3	; 0x03
    1d02:	20 e0       	ldi	r18, 0x00	; 0
    1d04:	30 e0       	ldi	r19, 0x00	; 0
    1d06:	40 e2       	ldi	r20, 0x20	; 32
    1d08:	51 e4       	ldi	r21, 0x41	; 65
    1d0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d0e:	dc 01       	movw	r26, r24
    1d10:	cb 01       	movw	r24, r22
    1d12:	8e 01       	movw	r16, r28
    1d14:	0b 51       	subi	r16, 0x1B	; 27
    1d16:	1f 4f       	sbci	r17, 0xFF	; 255
    1d18:	bc 01       	movw	r22, r24
    1d1a:	cd 01       	movw	r24, r26
    1d1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d20:	dc 01       	movw	r26, r24
    1d22:	cb 01       	movw	r24, r22
    1d24:	f8 01       	movw	r30, r16
    1d26:	91 83       	std	Z+1, r25	; 0x01
    1d28:	80 83       	st	Z, r24
    1d2a:	1f c0       	rjmp	.+62     	; 0x1d6a <main+0xbc8>
    1d2c:	fe 01       	movw	r30, r28
    1d2e:	ed 51       	subi	r30, 0x1D	; 29
    1d30:	ff 4f       	sbci	r31, 0xFF	; 255
    1d32:	80 e9       	ldi	r24, 0x90	; 144
    1d34:	91 e0       	ldi	r25, 0x01	; 1
    1d36:	91 83       	std	Z+1, r25	; 0x01
    1d38:	80 83       	st	Z, r24
    1d3a:	fe 01       	movw	r30, r28
    1d3c:	ed 51       	subi	r30, 0x1D	; 29
    1d3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d40:	80 81       	ld	r24, Z
    1d42:	91 81       	ldd	r25, Z+1	; 0x01
    1d44:	01 97       	sbiw	r24, 0x01	; 1
    1d46:	f1 f7       	brne	.-4      	; 0x1d44 <main+0xba2>
    1d48:	fe 01       	movw	r30, r28
    1d4a:	ed 51       	subi	r30, 0x1D	; 29
    1d4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4e:	91 83       	std	Z+1, r25	; 0x01
    1d50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d52:	de 01       	movw	r26, r28
    1d54:	ab 51       	subi	r26, 0x1B	; 27
    1d56:	bf 4f       	sbci	r27, 0xFF	; 255
    1d58:	fe 01       	movw	r30, r28
    1d5a:	eb 51       	subi	r30, 0x1B	; 27
    1d5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5e:	80 81       	ld	r24, Z
    1d60:	91 81       	ldd	r25, Z+1	; 0x01
    1d62:	01 97       	sbiw	r24, 0x01	; 1
    1d64:	11 96       	adiw	r26, 0x01	; 1
    1d66:	9c 93       	st	X, r25
    1d68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	eb 51       	subi	r30, 0x1B	; 27
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	80 81       	ld	r24, Z
    1d72:	91 81       	ldd	r25, Z+1	; 0x01
    1d74:	00 97       	sbiw	r24, 0x00	; 0
    1d76:	d1 f6       	brne	.-76     	; 0x1d2c <main+0xb8a>
    1d78:	27 c0       	rjmp	.+78     	; 0x1dc8 <main+0xc26>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d7a:	8e 01       	movw	r16, r28
    1d7c:	0b 51       	subi	r16, 0x1B	; 27
    1d7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d80:	fe 01       	movw	r30, r28
    1d82:	e9 51       	subi	r30, 0x19	; 25
    1d84:	ff 4f       	sbci	r31, 0xFF	; 255
    1d86:	60 81       	ld	r22, Z
    1d88:	71 81       	ldd	r23, Z+1	; 0x01
    1d8a:	82 81       	ldd	r24, Z+2	; 0x02
    1d8c:	93 81       	ldd	r25, Z+3	; 0x03
    1d8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d92:	dc 01       	movw	r26, r24
    1d94:	cb 01       	movw	r24, r22
    1d96:	f8 01       	movw	r30, r16
    1d98:	91 83       	std	Z+1, r25	; 0x01
    1d9a:	80 83       	st	Z, r24
    1d9c:	de 01       	movw	r26, r28
    1d9e:	af 51       	subi	r26, 0x1F	; 31
    1da0:	bf 4f       	sbci	r27, 0xFF	; 255
    1da2:	fe 01       	movw	r30, r28
    1da4:	eb 51       	subi	r30, 0x1B	; 27
    1da6:	ff 4f       	sbci	r31, 0xFF	; 255
    1da8:	80 81       	ld	r24, Z
    1daa:	91 81       	ldd	r25, Z+1	; 0x01
    1dac:	8d 93       	st	X+, r24
    1dae:	9c 93       	st	X, r25
    1db0:	fe 01       	movw	r30, r28
    1db2:	ef 51       	subi	r30, 0x1F	; 31
    1db4:	ff 4f       	sbci	r31, 0xFF	; 255
    1db6:	80 81       	ld	r24, Z
    1db8:	91 81       	ldd	r25, Z+1	; 0x01
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	f1 f7       	brne	.-4      	; 0x1dba <main+0xc18>
    1dbe:	fe 01       	movw	r30, r28
    1dc0:	ef 51       	subi	r30, 0x1F	; 31
    1dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc4:	91 83       	std	Z+1, r25	; 0x01
    1dc6:	80 83       	st	Z, r24
	_delay_ms(500);
	LED_OFF(DIO_PORTC,PIN7);
    1dc8:	82 e0       	ldi	r24, 0x02	; 2
    1dca:	67 e0       	ldi	r22, 0x07	; 7
    1dcc:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>

	//011
	LED_ON(DIO_PORTC ,PIN2);
    1dd0:	82 e0       	ldi	r24, 0x02	; 2
    1dd2:	62 e0       	ldi	r22, 0x02	; 2
    1dd4:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
	LED_ON(DIO_PORTC , PIN7);
    1dd8:	82 e0       	ldi	r24, 0x02	; 2
    1dda:	67 e0       	ldi	r22, 0x07	; 7
    1ddc:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    1de0:	fe 01       	movw	r30, r28
    1de2:	e3 52       	subi	r30, 0x23	; 35
    1de4:	ff 4f       	sbci	r31, 0xFF	; 255
    1de6:	80 e0       	ldi	r24, 0x00	; 0
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	aa ef       	ldi	r26, 0xFA	; 250
    1dec:	b3 e4       	ldi	r27, 0x43	; 67
    1dee:	80 83       	st	Z, r24
    1df0:	91 83       	std	Z+1, r25	; 0x01
    1df2:	a2 83       	std	Z+2, r26	; 0x02
    1df4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1df6:	8e 01       	movw	r16, r28
    1df8:	07 52       	subi	r16, 0x27	; 39
    1dfa:	1f 4f       	sbci	r17, 0xFF	; 255
    1dfc:	fe 01       	movw	r30, r28
    1dfe:	e3 52       	subi	r30, 0x23	; 35
    1e00:	ff 4f       	sbci	r31, 0xFF	; 255
    1e02:	60 81       	ld	r22, Z
    1e04:	71 81       	ldd	r23, Z+1	; 0x01
    1e06:	82 81       	ldd	r24, Z+2	; 0x02
    1e08:	93 81       	ldd	r25, Z+3	; 0x03
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	30 e0       	ldi	r19, 0x00	; 0
    1e0e:	4a e7       	ldi	r20, 0x7A	; 122
    1e10:	55 e4       	ldi	r21, 0x45	; 69
    1e12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e16:	dc 01       	movw	r26, r24
    1e18:	cb 01       	movw	r24, r22
    1e1a:	f8 01       	movw	r30, r16
    1e1c:	80 83       	st	Z, r24
    1e1e:	91 83       	std	Z+1, r25	; 0x01
    1e20:	a2 83       	std	Z+2, r26	; 0x02
    1e22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e24:	fe 01       	movw	r30, r28
    1e26:	e7 52       	subi	r30, 0x27	; 39
    1e28:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2a:	60 81       	ld	r22, Z
    1e2c:	71 81       	ldd	r23, Z+1	; 0x01
    1e2e:	82 81       	ldd	r24, Z+2	; 0x02
    1e30:	93 81       	ldd	r25, Z+3	; 0x03
    1e32:	20 e0       	ldi	r18, 0x00	; 0
    1e34:	30 e0       	ldi	r19, 0x00	; 0
    1e36:	40 e8       	ldi	r20, 0x80	; 128
    1e38:	5f e3       	ldi	r21, 0x3F	; 63
    1e3a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e3e:	88 23       	and	r24, r24
    1e40:	44 f4       	brge	.+16     	; 0x1e52 <main+0xcb0>
		__ticks = 1;
    1e42:	fe 01       	movw	r30, r28
    1e44:	e9 52       	subi	r30, 0x29	; 41
    1e46:	ff 4f       	sbci	r31, 0xFF	; 255
    1e48:	81 e0       	ldi	r24, 0x01	; 1
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	91 83       	std	Z+1, r25	; 0x01
    1e4e:	80 83       	st	Z, r24
    1e50:	64 c0       	rjmp	.+200    	; 0x1f1a <main+0xd78>
	else if (__tmp > 65535)
    1e52:	fe 01       	movw	r30, r28
    1e54:	e7 52       	subi	r30, 0x27	; 39
    1e56:	ff 4f       	sbci	r31, 0xFF	; 255
    1e58:	60 81       	ld	r22, Z
    1e5a:	71 81       	ldd	r23, Z+1	; 0x01
    1e5c:	82 81       	ldd	r24, Z+2	; 0x02
    1e5e:	93 81       	ldd	r25, Z+3	; 0x03
    1e60:	20 e0       	ldi	r18, 0x00	; 0
    1e62:	3f ef       	ldi	r19, 0xFF	; 255
    1e64:	4f e7       	ldi	r20, 0x7F	; 127
    1e66:	57 e4       	ldi	r21, 0x47	; 71
    1e68:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e6c:	18 16       	cp	r1, r24
    1e6e:	0c f0       	brlt	.+2      	; 0x1e72 <main+0xcd0>
    1e70:	43 c0       	rjmp	.+134    	; 0x1ef8 <main+0xd56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e72:	fe 01       	movw	r30, r28
    1e74:	e3 52       	subi	r30, 0x23	; 35
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	60 81       	ld	r22, Z
    1e7a:	71 81       	ldd	r23, Z+1	; 0x01
    1e7c:	82 81       	ldd	r24, Z+2	; 0x02
    1e7e:	93 81       	ldd	r25, Z+3	; 0x03
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 e2       	ldi	r20, 0x20	; 32
    1e86:	51 e4       	ldi	r21, 0x41	; 65
    1e88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e8c:	dc 01       	movw	r26, r24
    1e8e:	cb 01       	movw	r24, r22
    1e90:	8e 01       	movw	r16, r28
    1e92:	09 52       	subi	r16, 0x29	; 41
    1e94:	1f 4f       	sbci	r17, 0xFF	; 255
    1e96:	bc 01       	movw	r22, r24
    1e98:	cd 01       	movw	r24, r26
    1e9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e9e:	dc 01       	movw	r26, r24
    1ea0:	cb 01       	movw	r24, r22
    1ea2:	f8 01       	movw	r30, r16
    1ea4:	91 83       	std	Z+1, r25	; 0x01
    1ea6:	80 83       	st	Z, r24
    1ea8:	1f c0       	rjmp	.+62     	; 0x1ee8 <main+0xd46>
    1eaa:	fe 01       	movw	r30, r28
    1eac:	eb 52       	subi	r30, 0x2B	; 43
    1eae:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb0:	80 e9       	ldi	r24, 0x90	; 144
    1eb2:	91 e0       	ldi	r25, 0x01	; 1
    1eb4:	91 83       	std	Z+1, r25	; 0x01
    1eb6:	80 83       	st	Z, r24
    1eb8:	fe 01       	movw	r30, r28
    1eba:	eb 52       	subi	r30, 0x2B	; 43
    1ebc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebe:	80 81       	ld	r24, Z
    1ec0:	91 81       	ldd	r25, Z+1	; 0x01
    1ec2:	01 97       	sbiw	r24, 0x01	; 1
    1ec4:	f1 f7       	brne	.-4      	; 0x1ec2 <main+0xd20>
    1ec6:	fe 01       	movw	r30, r28
    1ec8:	eb 52       	subi	r30, 0x2B	; 43
    1eca:	ff 4f       	sbci	r31, 0xFF	; 255
    1ecc:	91 83       	std	Z+1, r25	; 0x01
    1ece:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ed0:	de 01       	movw	r26, r28
    1ed2:	a9 52       	subi	r26, 0x29	; 41
    1ed4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ed6:	fe 01       	movw	r30, r28
    1ed8:	e9 52       	subi	r30, 0x29	; 41
    1eda:	ff 4f       	sbci	r31, 0xFF	; 255
    1edc:	80 81       	ld	r24, Z
    1ede:	91 81       	ldd	r25, Z+1	; 0x01
    1ee0:	01 97       	sbiw	r24, 0x01	; 1
    1ee2:	11 96       	adiw	r26, 0x01	; 1
    1ee4:	9c 93       	st	X, r25
    1ee6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ee8:	fe 01       	movw	r30, r28
    1eea:	e9 52       	subi	r30, 0x29	; 41
    1eec:	ff 4f       	sbci	r31, 0xFF	; 255
    1eee:	80 81       	ld	r24, Z
    1ef0:	91 81       	ldd	r25, Z+1	; 0x01
    1ef2:	00 97       	sbiw	r24, 0x00	; 0
    1ef4:	d1 f6       	brne	.-76     	; 0x1eaa <main+0xd08>
    1ef6:	27 c0       	rjmp	.+78     	; 0x1f46 <main+0xda4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ef8:	8e 01       	movw	r16, r28
    1efa:	09 52       	subi	r16, 0x29	; 41
    1efc:	1f 4f       	sbci	r17, 0xFF	; 255
    1efe:	fe 01       	movw	r30, r28
    1f00:	e7 52       	subi	r30, 0x27	; 39
    1f02:	ff 4f       	sbci	r31, 0xFF	; 255
    1f04:	60 81       	ld	r22, Z
    1f06:	71 81       	ldd	r23, Z+1	; 0x01
    1f08:	82 81       	ldd	r24, Z+2	; 0x02
    1f0a:	93 81       	ldd	r25, Z+3	; 0x03
    1f0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f10:	dc 01       	movw	r26, r24
    1f12:	cb 01       	movw	r24, r22
    1f14:	f8 01       	movw	r30, r16
    1f16:	91 83       	std	Z+1, r25	; 0x01
    1f18:	80 83       	st	Z, r24
    1f1a:	de 01       	movw	r26, r28
    1f1c:	ad 52       	subi	r26, 0x2D	; 45
    1f1e:	bf 4f       	sbci	r27, 0xFF	; 255
    1f20:	fe 01       	movw	r30, r28
    1f22:	e9 52       	subi	r30, 0x29	; 41
    1f24:	ff 4f       	sbci	r31, 0xFF	; 255
    1f26:	80 81       	ld	r24, Z
    1f28:	91 81       	ldd	r25, Z+1	; 0x01
    1f2a:	8d 93       	st	X+, r24
    1f2c:	9c 93       	st	X, r25
    1f2e:	fe 01       	movw	r30, r28
    1f30:	ed 52       	subi	r30, 0x2D	; 45
    1f32:	ff 4f       	sbci	r31, 0xFF	; 255
    1f34:	80 81       	ld	r24, Z
    1f36:	91 81       	ldd	r25, Z+1	; 0x01
    1f38:	01 97       	sbiw	r24, 0x01	; 1
    1f3a:	f1 f7       	brne	.-4      	; 0x1f38 <main+0xd96>
    1f3c:	fe 01       	movw	r30, r28
    1f3e:	ed 52       	subi	r30, 0x2D	; 45
    1f40:	ff 4f       	sbci	r31, 0xFF	; 255
    1f42:	91 83       	std	Z+1, r25	; 0x01
    1f44:	80 83       	st	Z, r24
	_delay_ms(500);
	LED_OFF(DIO_PORTC,PIN7);
    1f46:	82 e0       	ldi	r24, 0x02	; 2
    1f48:	67 e0       	ldi	r22, 0x07	; 7
    1f4a:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
	LED_OFF(DIO_PORTC,PIN2);
    1f4e:	82 e0       	ldi	r24, 0x02	; 2
    1f50:	62 e0       	ldi	r22, 0x02	; 2
    1f52:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>

	//100
	LED_ON(DIO_PORTD,PIN3);
    1f56:	83 e0       	ldi	r24, 0x03	; 3
    1f58:	63 e0       	ldi	r22, 0x03	; 3
    1f5a:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    1f5e:	fe 01       	movw	r30, r28
    1f60:	e1 53       	subi	r30, 0x31	; 49
    1f62:	ff 4f       	sbci	r31, 0xFF	; 255
    1f64:	80 e0       	ldi	r24, 0x00	; 0
    1f66:	90 e0       	ldi	r25, 0x00	; 0
    1f68:	aa ef       	ldi	r26, 0xFA	; 250
    1f6a:	b3 e4       	ldi	r27, 0x43	; 67
    1f6c:	80 83       	st	Z, r24
    1f6e:	91 83       	std	Z+1, r25	; 0x01
    1f70:	a2 83       	std	Z+2, r26	; 0x02
    1f72:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f74:	8e 01       	movw	r16, r28
    1f76:	05 53       	subi	r16, 0x35	; 53
    1f78:	1f 4f       	sbci	r17, 0xFF	; 255
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	e1 53       	subi	r30, 0x31	; 49
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	60 81       	ld	r22, Z
    1f82:	71 81       	ldd	r23, Z+1	; 0x01
    1f84:	82 81       	ldd	r24, Z+2	; 0x02
    1f86:	93 81       	ldd	r25, Z+3	; 0x03
    1f88:	20 e0       	ldi	r18, 0x00	; 0
    1f8a:	30 e0       	ldi	r19, 0x00	; 0
    1f8c:	4a e7       	ldi	r20, 0x7A	; 122
    1f8e:	55 e4       	ldi	r21, 0x45	; 69
    1f90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f94:	dc 01       	movw	r26, r24
    1f96:	cb 01       	movw	r24, r22
    1f98:	f8 01       	movw	r30, r16
    1f9a:	80 83       	st	Z, r24
    1f9c:	91 83       	std	Z+1, r25	; 0x01
    1f9e:	a2 83       	std	Z+2, r26	; 0x02
    1fa0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1fa2:	fe 01       	movw	r30, r28
    1fa4:	e5 53       	subi	r30, 0x35	; 53
    1fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa8:	60 81       	ld	r22, Z
    1faa:	71 81       	ldd	r23, Z+1	; 0x01
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	20 e0       	ldi	r18, 0x00	; 0
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	40 e8       	ldi	r20, 0x80	; 128
    1fb6:	5f e3       	ldi	r21, 0x3F	; 63
    1fb8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fbc:	88 23       	and	r24, r24
    1fbe:	44 f4       	brge	.+16     	; 0x1fd0 <main+0xe2e>
		__ticks = 1;
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	e7 53       	subi	r30, 0x37	; 55
    1fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc6:	81 e0       	ldi	r24, 0x01	; 1
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	91 83       	std	Z+1, r25	; 0x01
    1fcc:	80 83       	st	Z, r24
    1fce:	64 c0       	rjmp	.+200    	; 0x2098 <main+0xef6>
	else if (__tmp > 65535)
    1fd0:	fe 01       	movw	r30, r28
    1fd2:	e5 53       	subi	r30, 0x35	; 53
    1fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd6:	60 81       	ld	r22, Z
    1fd8:	71 81       	ldd	r23, Z+1	; 0x01
    1fda:	82 81       	ldd	r24, Z+2	; 0x02
    1fdc:	93 81       	ldd	r25, Z+3	; 0x03
    1fde:	20 e0       	ldi	r18, 0x00	; 0
    1fe0:	3f ef       	ldi	r19, 0xFF	; 255
    1fe2:	4f e7       	ldi	r20, 0x7F	; 127
    1fe4:	57 e4       	ldi	r21, 0x47	; 71
    1fe6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fea:	18 16       	cp	r1, r24
    1fec:	0c f0       	brlt	.+2      	; 0x1ff0 <main+0xe4e>
    1fee:	43 c0       	rjmp	.+134    	; 0x2076 <main+0xed4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ff0:	fe 01       	movw	r30, r28
    1ff2:	e1 53       	subi	r30, 0x31	; 49
    1ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff6:	60 81       	ld	r22, Z
    1ff8:	71 81       	ldd	r23, Z+1	; 0x01
    1ffa:	82 81       	ldd	r24, Z+2	; 0x02
    1ffc:	93 81       	ldd	r25, Z+3	; 0x03
    1ffe:	20 e0       	ldi	r18, 0x00	; 0
    2000:	30 e0       	ldi	r19, 0x00	; 0
    2002:	40 e2       	ldi	r20, 0x20	; 32
    2004:	51 e4       	ldi	r21, 0x41	; 65
    2006:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    200a:	dc 01       	movw	r26, r24
    200c:	cb 01       	movw	r24, r22
    200e:	8e 01       	movw	r16, r28
    2010:	07 53       	subi	r16, 0x37	; 55
    2012:	1f 4f       	sbci	r17, 0xFF	; 255
    2014:	bc 01       	movw	r22, r24
    2016:	cd 01       	movw	r24, r26
    2018:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    201c:	dc 01       	movw	r26, r24
    201e:	cb 01       	movw	r24, r22
    2020:	f8 01       	movw	r30, r16
    2022:	91 83       	std	Z+1, r25	; 0x01
    2024:	80 83       	st	Z, r24
    2026:	1f c0       	rjmp	.+62     	; 0x2066 <main+0xec4>
    2028:	fe 01       	movw	r30, r28
    202a:	e9 53       	subi	r30, 0x39	; 57
    202c:	ff 4f       	sbci	r31, 0xFF	; 255
    202e:	80 e9       	ldi	r24, 0x90	; 144
    2030:	91 e0       	ldi	r25, 0x01	; 1
    2032:	91 83       	std	Z+1, r25	; 0x01
    2034:	80 83       	st	Z, r24
    2036:	fe 01       	movw	r30, r28
    2038:	e9 53       	subi	r30, 0x39	; 57
    203a:	ff 4f       	sbci	r31, 0xFF	; 255
    203c:	80 81       	ld	r24, Z
    203e:	91 81       	ldd	r25, Z+1	; 0x01
    2040:	01 97       	sbiw	r24, 0x01	; 1
    2042:	f1 f7       	brne	.-4      	; 0x2040 <main+0xe9e>
    2044:	fe 01       	movw	r30, r28
    2046:	e9 53       	subi	r30, 0x39	; 57
    2048:	ff 4f       	sbci	r31, 0xFF	; 255
    204a:	91 83       	std	Z+1, r25	; 0x01
    204c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    204e:	de 01       	movw	r26, r28
    2050:	a7 53       	subi	r26, 0x37	; 55
    2052:	bf 4f       	sbci	r27, 0xFF	; 255
    2054:	fe 01       	movw	r30, r28
    2056:	e7 53       	subi	r30, 0x37	; 55
    2058:	ff 4f       	sbci	r31, 0xFF	; 255
    205a:	80 81       	ld	r24, Z
    205c:	91 81       	ldd	r25, Z+1	; 0x01
    205e:	01 97       	sbiw	r24, 0x01	; 1
    2060:	11 96       	adiw	r26, 0x01	; 1
    2062:	9c 93       	st	X, r25
    2064:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2066:	fe 01       	movw	r30, r28
    2068:	e7 53       	subi	r30, 0x37	; 55
    206a:	ff 4f       	sbci	r31, 0xFF	; 255
    206c:	80 81       	ld	r24, Z
    206e:	91 81       	ldd	r25, Z+1	; 0x01
    2070:	00 97       	sbiw	r24, 0x00	; 0
    2072:	d1 f6       	brne	.-76     	; 0x2028 <main+0xe86>
    2074:	27 c0       	rjmp	.+78     	; 0x20c4 <main+0xf22>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2076:	8e 01       	movw	r16, r28
    2078:	07 53       	subi	r16, 0x37	; 55
    207a:	1f 4f       	sbci	r17, 0xFF	; 255
    207c:	fe 01       	movw	r30, r28
    207e:	e5 53       	subi	r30, 0x35	; 53
    2080:	ff 4f       	sbci	r31, 0xFF	; 255
    2082:	60 81       	ld	r22, Z
    2084:	71 81       	ldd	r23, Z+1	; 0x01
    2086:	82 81       	ldd	r24, Z+2	; 0x02
    2088:	93 81       	ldd	r25, Z+3	; 0x03
    208a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    208e:	dc 01       	movw	r26, r24
    2090:	cb 01       	movw	r24, r22
    2092:	f8 01       	movw	r30, r16
    2094:	91 83       	std	Z+1, r25	; 0x01
    2096:	80 83       	st	Z, r24
    2098:	de 01       	movw	r26, r28
    209a:	ab 53       	subi	r26, 0x3B	; 59
    209c:	bf 4f       	sbci	r27, 0xFF	; 255
    209e:	fe 01       	movw	r30, r28
    20a0:	e7 53       	subi	r30, 0x37	; 55
    20a2:	ff 4f       	sbci	r31, 0xFF	; 255
    20a4:	80 81       	ld	r24, Z
    20a6:	91 81       	ldd	r25, Z+1	; 0x01
    20a8:	8d 93       	st	X+, r24
    20aa:	9c 93       	st	X, r25
    20ac:	fe 01       	movw	r30, r28
    20ae:	eb 53       	subi	r30, 0x3B	; 59
    20b0:	ff 4f       	sbci	r31, 0xFF	; 255
    20b2:	80 81       	ld	r24, Z
    20b4:	91 81       	ldd	r25, Z+1	; 0x01
    20b6:	01 97       	sbiw	r24, 0x01	; 1
    20b8:	f1 f7       	brne	.-4      	; 0x20b6 <main+0xf14>
    20ba:	fe 01       	movw	r30, r28
    20bc:	eb 53       	subi	r30, 0x3B	; 59
    20be:	ff 4f       	sbci	r31, 0xFF	; 255
    20c0:	91 83       	std	Z+1, r25	; 0x01
    20c2:	80 83       	st	Z, r24
    _delay_ms(500);
    LED_OFF(DIO_PORTD,PIN3);
    20c4:	83 e0       	ldi	r24, 0x03	; 3
    20c6:	63 e0       	ldi	r22, 0x03	; 3
    20c8:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>


    //101
    LED_ON(DIO_PORTC ,PIN2);
    20cc:	82 e0       	ldi	r24, 0x02	; 2
    20ce:	62 e0       	ldi	r22, 0x02	; 2
    20d0:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    LED_ON(DIO_PORTD,PIN3);
    20d4:	83 e0       	ldi	r24, 0x03	; 3
    20d6:	63 e0       	ldi	r22, 0x03	; 3
    20d8:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    20dc:	fe 01       	movw	r30, r28
    20de:	ef 53       	subi	r30, 0x3F	; 63
    20e0:	ff 4f       	sbci	r31, 0xFF	; 255
    20e2:	80 e0       	ldi	r24, 0x00	; 0
    20e4:	90 e0       	ldi	r25, 0x00	; 0
    20e6:	aa ef       	ldi	r26, 0xFA	; 250
    20e8:	b3 e4       	ldi	r27, 0x43	; 67
    20ea:	80 83       	st	Z, r24
    20ec:	91 83       	std	Z+1, r25	; 0x01
    20ee:	a2 83       	std	Z+2, r26	; 0x02
    20f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20f2:	8e 01       	movw	r16, r28
    20f4:	03 54       	subi	r16, 0x43	; 67
    20f6:	1f 4f       	sbci	r17, 0xFF	; 255
    20f8:	fe 01       	movw	r30, r28
    20fa:	ef 53       	subi	r30, 0x3F	; 63
    20fc:	ff 4f       	sbci	r31, 0xFF	; 255
    20fe:	60 81       	ld	r22, Z
    2100:	71 81       	ldd	r23, Z+1	; 0x01
    2102:	82 81       	ldd	r24, Z+2	; 0x02
    2104:	93 81       	ldd	r25, Z+3	; 0x03
    2106:	20 e0       	ldi	r18, 0x00	; 0
    2108:	30 e0       	ldi	r19, 0x00	; 0
    210a:	4a e7       	ldi	r20, 0x7A	; 122
    210c:	55 e4       	ldi	r21, 0x45	; 69
    210e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2112:	dc 01       	movw	r26, r24
    2114:	cb 01       	movw	r24, r22
    2116:	f8 01       	movw	r30, r16
    2118:	80 83       	st	Z, r24
    211a:	91 83       	std	Z+1, r25	; 0x01
    211c:	a2 83       	std	Z+2, r26	; 0x02
    211e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2120:	fe 01       	movw	r30, r28
    2122:	e3 54       	subi	r30, 0x43	; 67
    2124:	ff 4f       	sbci	r31, 0xFF	; 255
    2126:	60 81       	ld	r22, Z
    2128:	71 81       	ldd	r23, Z+1	; 0x01
    212a:	82 81       	ldd	r24, Z+2	; 0x02
    212c:	93 81       	ldd	r25, Z+3	; 0x03
    212e:	20 e0       	ldi	r18, 0x00	; 0
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	40 e8       	ldi	r20, 0x80	; 128
    2134:	5f e3       	ldi	r21, 0x3F	; 63
    2136:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    213a:	88 23       	and	r24, r24
    213c:	44 f4       	brge	.+16     	; 0x214e <main+0xfac>
		__ticks = 1;
    213e:	fe 01       	movw	r30, r28
    2140:	e5 54       	subi	r30, 0x45	; 69
    2142:	ff 4f       	sbci	r31, 0xFF	; 255
    2144:	81 e0       	ldi	r24, 0x01	; 1
    2146:	90 e0       	ldi	r25, 0x00	; 0
    2148:	91 83       	std	Z+1, r25	; 0x01
    214a:	80 83       	st	Z, r24
    214c:	64 c0       	rjmp	.+200    	; 0x2216 <main+0x1074>
	else if (__tmp > 65535)
    214e:	fe 01       	movw	r30, r28
    2150:	e3 54       	subi	r30, 0x43	; 67
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	60 81       	ld	r22, Z
    2156:	71 81       	ldd	r23, Z+1	; 0x01
    2158:	82 81       	ldd	r24, Z+2	; 0x02
    215a:	93 81       	ldd	r25, Z+3	; 0x03
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	3f ef       	ldi	r19, 0xFF	; 255
    2160:	4f e7       	ldi	r20, 0x7F	; 127
    2162:	57 e4       	ldi	r21, 0x47	; 71
    2164:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2168:	18 16       	cp	r1, r24
    216a:	0c f0       	brlt	.+2      	; 0x216e <main+0xfcc>
    216c:	43 c0       	rjmp	.+134    	; 0x21f4 <main+0x1052>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    216e:	fe 01       	movw	r30, r28
    2170:	ef 53       	subi	r30, 0x3F	; 63
    2172:	ff 4f       	sbci	r31, 0xFF	; 255
    2174:	60 81       	ld	r22, Z
    2176:	71 81       	ldd	r23, Z+1	; 0x01
    2178:	82 81       	ldd	r24, Z+2	; 0x02
    217a:	93 81       	ldd	r25, Z+3	; 0x03
    217c:	20 e0       	ldi	r18, 0x00	; 0
    217e:	30 e0       	ldi	r19, 0x00	; 0
    2180:	40 e2       	ldi	r20, 0x20	; 32
    2182:	51 e4       	ldi	r21, 0x41	; 65
    2184:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2188:	dc 01       	movw	r26, r24
    218a:	cb 01       	movw	r24, r22
    218c:	8e 01       	movw	r16, r28
    218e:	05 54       	subi	r16, 0x45	; 69
    2190:	1f 4f       	sbci	r17, 0xFF	; 255
    2192:	bc 01       	movw	r22, r24
    2194:	cd 01       	movw	r24, r26
    2196:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    219a:	dc 01       	movw	r26, r24
    219c:	cb 01       	movw	r24, r22
    219e:	f8 01       	movw	r30, r16
    21a0:	91 83       	std	Z+1, r25	; 0x01
    21a2:	80 83       	st	Z, r24
    21a4:	1f c0       	rjmp	.+62     	; 0x21e4 <main+0x1042>
    21a6:	fe 01       	movw	r30, r28
    21a8:	e7 54       	subi	r30, 0x47	; 71
    21aa:	ff 4f       	sbci	r31, 0xFF	; 255
    21ac:	80 e9       	ldi	r24, 0x90	; 144
    21ae:	91 e0       	ldi	r25, 0x01	; 1
    21b0:	91 83       	std	Z+1, r25	; 0x01
    21b2:	80 83       	st	Z, r24
    21b4:	fe 01       	movw	r30, r28
    21b6:	e7 54       	subi	r30, 0x47	; 71
    21b8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ba:	80 81       	ld	r24, Z
    21bc:	91 81       	ldd	r25, Z+1	; 0x01
    21be:	01 97       	sbiw	r24, 0x01	; 1
    21c0:	f1 f7       	brne	.-4      	; 0x21be <main+0x101c>
    21c2:	fe 01       	movw	r30, r28
    21c4:	e7 54       	subi	r30, 0x47	; 71
    21c6:	ff 4f       	sbci	r31, 0xFF	; 255
    21c8:	91 83       	std	Z+1, r25	; 0x01
    21ca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21cc:	de 01       	movw	r26, r28
    21ce:	a5 54       	subi	r26, 0x45	; 69
    21d0:	bf 4f       	sbci	r27, 0xFF	; 255
    21d2:	fe 01       	movw	r30, r28
    21d4:	e5 54       	subi	r30, 0x45	; 69
    21d6:	ff 4f       	sbci	r31, 0xFF	; 255
    21d8:	80 81       	ld	r24, Z
    21da:	91 81       	ldd	r25, Z+1	; 0x01
    21dc:	01 97       	sbiw	r24, 0x01	; 1
    21de:	11 96       	adiw	r26, 0x01	; 1
    21e0:	9c 93       	st	X, r25
    21e2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21e4:	fe 01       	movw	r30, r28
    21e6:	e5 54       	subi	r30, 0x45	; 69
    21e8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ea:	80 81       	ld	r24, Z
    21ec:	91 81       	ldd	r25, Z+1	; 0x01
    21ee:	00 97       	sbiw	r24, 0x00	; 0
    21f0:	d1 f6       	brne	.-76     	; 0x21a6 <main+0x1004>
    21f2:	27 c0       	rjmp	.+78     	; 0x2242 <main+0x10a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21f4:	8e 01       	movw	r16, r28
    21f6:	05 54       	subi	r16, 0x45	; 69
    21f8:	1f 4f       	sbci	r17, 0xFF	; 255
    21fa:	fe 01       	movw	r30, r28
    21fc:	e3 54       	subi	r30, 0x43	; 67
    21fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2200:	60 81       	ld	r22, Z
    2202:	71 81       	ldd	r23, Z+1	; 0x01
    2204:	82 81       	ldd	r24, Z+2	; 0x02
    2206:	93 81       	ldd	r25, Z+3	; 0x03
    2208:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    220c:	dc 01       	movw	r26, r24
    220e:	cb 01       	movw	r24, r22
    2210:	f8 01       	movw	r30, r16
    2212:	91 83       	std	Z+1, r25	; 0x01
    2214:	80 83       	st	Z, r24
    2216:	de 01       	movw	r26, r28
    2218:	a9 54       	subi	r26, 0x49	; 73
    221a:	bf 4f       	sbci	r27, 0xFF	; 255
    221c:	fe 01       	movw	r30, r28
    221e:	e5 54       	subi	r30, 0x45	; 69
    2220:	ff 4f       	sbci	r31, 0xFF	; 255
    2222:	80 81       	ld	r24, Z
    2224:	91 81       	ldd	r25, Z+1	; 0x01
    2226:	8d 93       	st	X+, r24
    2228:	9c 93       	st	X, r25
    222a:	fe 01       	movw	r30, r28
    222c:	e9 54       	subi	r30, 0x49	; 73
    222e:	ff 4f       	sbci	r31, 0xFF	; 255
    2230:	80 81       	ld	r24, Z
    2232:	91 81       	ldd	r25, Z+1	; 0x01
    2234:	01 97       	sbiw	r24, 0x01	; 1
    2236:	f1 f7       	brne	.-4      	; 0x2234 <main+0x1092>
    2238:	fe 01       	movw	r30, r28
    223a:	e9 54       	subi	r30, 0x49	; 73
    223c:	ff 4f       	sbci	r31, 0xFF	; 255
    223e:	91 83       	std	Z+1, r25	; 0x01
    2240:	80 83       	st	Z, r24
  	_delay_ms(500);
  	LED_OFF(DIO_PORTC,PIN2);
    2242:	82 e0       	ldi	r24, 0x02	; 2
    2244:	62 e0       	ldi	r22, 0x02	; 2
    2246:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
   	LED_OFF(DIO_PORTD,PIN3);
    224a:	83 e0       	ldi	r24, 0x03	; 3
    224c:	63 e0       	ldi	r22, 0x03	; 3
    224e:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>




	//110
   	LED_ON(DIO_PORTC,PIN7);
    2252:	82 e0       	ldi	r24, 0x02	; 2
    2254:	67 e0       	ldi	r22, 0x07	; 7
    2256:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
   	LED_ON(DIO_PORTD,PIN3);
    225a:	83 e0       	ldi	r24, 0x03	; 3
    225c:	63 e0       	ldi	r22, 0x03	; 3
    225e:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    2262:	fe 01       	movw	r30, r28
    2264:	ed 54       	subi	r30, 0x4D	; 77
    2266:	ff 4f       	sbci	r31, 0xFF	; 255
    2268:	80 e0       	ldi	r24, 0x00	; 0
    226a:	90 e0       	ldi	r25, 0x00	; 0
    226c:	aa ef       	ldi	r26, 0xFA	; 250
    226e:	b3 e4       	ldi	r27, 0x43	; 67
    2270:	80 83       	st	Z, r24
    2272:	91 83       	std	Z+1, r25	; 0x01
    2274:	a2 83       	std	Z+2, r26	; 0x02
    2276:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2278:	8e 01       	movw	r16, r28
    227a:	01 55       	subi	r16, 0x51	; 81
    227c:	1f 4f       	sbci	r17, 0xFF	; 255
    227e:	fe 01       	movw	r30, r28
    2280:	ed 54       	subi	r30, 0x4D	; 77
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	60 81       	ld	r22, Z
    2286:	71 81       	ldd	r23, Z+1	; 0x01
    2288:	82 81       	ldd	r24, Z+2	; 0x02
    228a:	93 81       	ldd	r25, Z+3	; 0x03
    228c:	20 e0       	ldi	r18, 0x00	; 0
    228e:	30 e0       	ldi	r19, 0x00	; 0
    2290:	4a e7       	ldi	r20, 0x7A	; 122
    2292:	55 e4       	ldi	r21, 0x45	; 69
    2294:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2298:	dc 01       	movw	r26, r24
    229a:	cb 01       	movw	r24, r22
    229c:	f8 01       	movw	r30, r16
    229e:	80 83       	st	Z, r24
    22a0:	91 83       	std	Z+1, r25	; 0x01
    22a2:	a2 83       	std	Z+2, r26	; 0x02
    22a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22a6:	fe 01       	movw	r30, r28
    22a8:	e1 55       	subi	r30, 0x51	; 81
    22aa:	ff 4f       	sbci	r31, 0xFF	; 255
    22ac:	60 81       	ld	r22, Z
    22ae:	71 81       	ldd	r23, Z+1	; 0x01
    22b0:	82 81       	ldd	r24, Z+2	; 0x02
    22b2:	93 81       	ldd	r25, Z+3	; 0x03
    22b4:	20 e0       	ldi	r18, 0x00	; 0
    22b6:	30 e0       	ldi	r19, 0x00	; 0
    22b8:	40 e8       	ldi	r20, 0x80	; 128
    22ba:	5f e3       	ldi	r21, 0x3F	; 63
    22bc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22c0:	88 23       	and	r24, r24
    22c2:	44 f4       	brge	.+16     	; 0x22d4 <main+0x1132>
		__ticks = 1;
    22c4:	fe 01       	movw	r30, r28
    22c6:	e3 55       	subi	r30, 0x53	; 83
    22c8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ca:	81 e0       	ldi	r24, 0x01	; 1
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	80 83       	st	Z, r24
    22d2:	64 c0       	rjmp	.+200    	; 0x239c <main+0x11fa>
	else if (__tmp > 65535)
    22d4:	fe 01       	movw	r30, r28
    22d6:	e1 55       	subi	r30, 0x51	; 81
    22d8:	ff 4f       	sbci	r31, 0xFF	; 255
    22da:	60 81       	ld	r22, Z
    22dc:	71 81       	ldd	r23, Z+1	; 0x01
    22de:	82 81       	ldd	r24, Z+2	; 0x02
    22e0:	93 81       	ldd	r25, Z+3	; 0x03
    22e2:	20 e0       	ldi	r18, 0x00	; 0
    22e4:	3f ef       	ldi	r19, 0xFF	; 255
    22e6:	4f e7       	ldi	r20, 0x7F	; 127
    22e8:	57 e4       	ldi	r21, 0x47	; 71
    22ea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22ee:	18 16       	cp	r1, r24
    22f0:	0c f0       	brlt	.+2      	; 0x22f4 <main+0x1152>
    22f2:	43 c0       	rjmp	.+134    	; 0x237a <main+0x11d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22f4:	fe 01       	movw	r30, r28
    22f6:	ed 54       	subi	r30, 0x4D	; 77
    22f8:	ff 4f       	sbci	r31, 0xFF	; 255
    22fa:	60 81       	ld	r22, Z
    22fc:	71 81       	ldd	r23, Z+1	; 0x01
    22fe:	82 81       	ldd	r24, Z+2	; 0x02
    2300:	93 81       	ldd	r25, Z+3	; 0x03
    2302:	20 e0       	ldi	r18, 0x00	; 0
    2304:	30 e0       	ldi	r19, 0x00	; 0
    2306:	40 e2       	ldi	r20, 0x20	; 32
    2308:	51 e4       	ldi	r21, 0x41	; 65
    230a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    230e:	dc 01       	movw	r26, r24
    2310:	cb 01       	movw	r24, r22
    2312:	8e 01       	movw	r16, r28
    2314:	03 55       	subi	r16, 0x53	; 83
    2316:	1f 4f       	sbci	r17, 0xFF	; 255
    2318:	bc 01       	movw	r22, r24
    231a:	cd 01       	movw	r24, r26
    231c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2320:	dc 01       	movw	r26, r24
    2322:	cb 01       	movw	r24, r22
    2324:	f8 01       	movw	r30, r16
    2326:	91 83       	std	Z+1, r25	; 0x01
    2328:	80 83       	st	Z, r24
    232a:	1f c0       	rjmp	.+62     	; 0x236a <main+0x11c8>
    232c:	fe 01       	movw	r30, r28
    232e:	e5 55       	subi	r30, 0x55	; 85
    2330:	ff 4f       	sbci	r31, 0xFF	; 255
    2332:	80 e9       	ldi	r24, 0x90	; 144
    2334:	91 e0       	ldi	r25, 0x01	; 1
    2336:	91 83       	std	Z+1, r25	; 0x01
    2338:	80 83       	st	Z, r24
    233a:	fe 01       	movw	r30, r28
    233c:	e5 55       	subi	r30, 0x55	; 85
    233e:	ff 4f       	sbci	r31, 0xFF	; 255
    2340:	80 81       	ld	r24, Z
    2342:	91 81       	ldd	r25, Z+1	; 0x01
    2344:	01 97       	sbiw	r24, 0x01	; 1
    2346:	f1 f7       	brne	.-4      	; 0x2344 <main+0x11a2>
    2348:	fe 01       	movw	r30, r28
    234a:	e5 55       	subi	r30, 0x55	; 85
    234c:	ff 4f       	sbci	r31, 0xFF	; 255
    234e:	91 83       	std	Z+1, r25	; 0x01
    2350:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2352:	de 01       	movw	r26, r28
    2354:	a3 55       	subi	r26, 0x53	; 83
    2356:	bf 4f       	sbci	r27, 0xFF	; 255
    2358:	fe 01       	movw	r30, r28
    235a:	e3 55       	subi	r30, 0x53	; 83
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	80 81       	ld	r24, Z
    2360:	91 81       	ldd	r25, Z+1	; 0x01
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	11 96       	adiw	r26, 0x01	; 1
    2366:	9c 93       	st	X, r25
    2368:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    236a:	fe 01       	movw	r30, r28
    236c:	e3 55       	subi	r30, 0x53	; 83
    236e:	ff 4f       	sbci	r31, 0xFF	; 255
    2370:	80 81       	ld	r24, Z
    2372:	91 81       	ldd	r25, Z+1	; 0x01
    2374:	00 97       	sbiw	r24, 0x00	; 0
    2376:	d1 f6       	brne	.-76     	; 0x232c <main+0x118a>
    2378:	27 c0       	rjmp	.+78     	; 0x23c8 <main+0x1226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    237a:	8e 01       	movw	r16, r28
    237c:	03 55       	subi	r16, 0x53	; 83
    237e:	1f 4f       	sbci	r17, 0xFF	; 255
    2380:	fe 01       	movw	r30, r28
    2382:	e1 55       	subi	r30, 0x51	; 81
    2384:	ff 4f       	sbci	r31, 0xFF	; 255
    2386:	60 81       	ld	r22, Z
    2388:	71 81       	ldd	r23, Z+1	; 0x01
    238a:	82 81       	ldd	r24, Z+2	; 0x02
    238c:	93 81       	ldd	r25, Z+3	; 0x03
    238e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2392:	dc 01       	movw	r26, r24
    2394:	cb 01       	movw	r24, r22
    2396:	f8 01       	movw	r30, r16
    2398:	91 83       	std	Z+1, r25	; 0x01
    239a:	80 83       	st	Z, r24
    239c:	de 01       	movw	r26, r28
    239e:	a7 55       	subi	r26, 0x57	; 87
    23a0:	bf 4f       	sbci	r27, 0xFF	; 255
    23a2:	fe 01       	movw	r30, r28
    23a4:	e3 55       	subi	r30, 0x53	; 83
    23a6:	ff 4f       	sbci	r31, 0xFF	; 255
    23a8:	80 81       	ld	r24, Z
    23aa:	91 81       	ldd	r25, Z+1	; 0x01
    23ac:	8d 93       	st	X+, r24
    23ae:	9c 93       	st	X, r25
    23b0:	fe 01       	movw	r30, r28
    23b2:	e7 55       	subi	r30, 0x57	; 87
    23b4:	ff 4f       	sbci	r31, 0xFF	; 255
    23b6:	80 81       	ld	r24, Z
    23b8:	91 81       	ldd	r25, Z+1	; 0x01
    23ba:	01 97       	sbiw	r24, 0x01	; 1
    23bc:	f1 f7       	brne	.-4      	; 0x23ba <main+0x1218>
    23be:	fe 01       	movw	r30, r28
    23c0:	e7 55       	subi	r30, 0x57	; 87
    23c2:	ff 4f       	sbci	r31, 0xFF	; 255
    23c4:	91 83       	std	Z+1, r25	; 0x01
    23c6:	80 83       	st	Z, r24
  	_delay_ms(500);
   	LED_OFF(DIO_PORTC,PIN7);
    23c8:	82 e0       	ldi	r24, 0x02	; 2
    23ca:	67 e0       	ldi	r22, 0x07	; 7
    23cc:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
   	LED_OFF(DIO_PORTD,PIN3);
    23d0:	83 e0       	ldi	r24, 0x03	; 3
    23d2:	63 e0       	ldi	r22, 0x03	; 3
    23d4:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>


   	//111
   	LED_ON(DIO_PORTC,PIN7);
    23d8:	82 e0       	ldi	r24, 0x02	; 2
    23da:	67 e0       	ldi	r22, 0x07	; 7
    23dc:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
   	LED_ON(DIO_PORTD,PIN3);
    23e0:	83 e0       	ldi	r24, 0x03	; 3
    23e2:	63 e0       	ldi	r22, 0x03	; 3
    23e4:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
   	LED_ON(DIO_PORTC ,PIN2);
    23e8:	82 e0       	ldi	r24, 0x02	; 2
    23ea:	62 e0       	ldi	r22, 0x02	; 2
    23ec:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    23f0:	fe 01       	movw	r30, r28
    23f2:	eb 55       	subi	r30, 0x5B	; 91
    23f4:	ff 4f       	sbci	r31, 0xFF	; 255
    23f6:	80 e0       	ldi	r24, 0x00	; 0
    23f8:	90 e0       	ldi	r25, 0x00	; 0
    23fa:	aa ef       	ldi	r26, 0xFA	; 250
    23fc:	b3 e4       	ldi	r27, 0x43	; 67
    23fe:	80 83       	st	Z, r24
    2400:	91 83       	std	Z+1, r25	; 0x01
    2402:	a2 83       	std	Z+2, r26	; 0x02
    2404:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2406:	8e 01       	movw	r16, r28
    2408:	0f 55       	subi	r16, 0x5F	; 95
    240a:	1f 4f       	sbci	r17, 0xFF	; 255
    240c:	fe 01       	movw	r30, r28
    240e:	eb 55       	subi	r30, 0x5B	; 91
    2410:	ff 4f       	sbci	r31, 0xFF	; 255
    2412:	60 81       	ld	r22, Z
    2414:	71 81       	ldd	r23, Z+1	; 0x01
    2416:	82 81       	ldd	r24, Z+2	; 0x02
    2418:	93 81       	ldd	r25, Z+3	; 0x03
    241a:	20 e0       	ldi	r18, 0x00	; 0
    241c:	30 e0       	ldi	r19, 0x00	; 0
    241e:	4a e7       	ldi	r20, 0x7A	; 122
    2420:	55 e4       	ldi	r21, 0x45	; 69
    2422:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2426:	dc 01       	movw	r26, r24
    2428:	cb 01       	movw	r24, r22
    242a:	f8 01       	movw	r30, r16
    242c:	80 83       	st	Z, r24
    242e:	91 83       	std	Z+1, r25	; 0x01
    2430:	a2 83       	std	Z+2, r26	; 0x02
    2432:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2434:	fe 01       	movw	r30, r28
    2436:	ef 55       	subi	r30, 0x5F	; 95
    2438:	ff 4f       	sbci	r31, 0xFF	; 255
    243a:	60 81       	ld	r22, Z
    243c:	71 81       	ldd	r23, Z+1	; 0x01
    243e:	82 81       	ldd	r24, Z+2	; 0x02
    2440:	93 81       	ldd	r25, Z+3	; 0x03
    2442:	20 e0       	ldi	r18, 0x00	; 0
    2444:	30 e0       	ldi	r19, 0x00	; 0
    2446:	40 e8       	ldi	r20, 0x80	; 128
    2448:	5f e3       	ldi	r21, 0x3F	; 63
    244a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    244e:	88 23       	and	r24, r24
    2450:	44 f4       	brge	.+16     	; 0x2462 <main+0x12c0>
		__ticks = 1;
    2452:	fe 01       	movw	r30, r28
    2454:	e1 56       	subi	r30, 0x61	; 97
    2456:	ff 4f       	sbci	r31, 0xFF	; 255
    2458:	81 e0       	ldi	r24, 0x01	; 1
    245a:	90 e0       	ldi	r25, 0x00	; 0
    245c:	91 83       	std	Z+1, r25	; 0x01
    245e:	80 83       	st	Z, r24
    2460:	64 c0       	rjmp	.+200    	; 0x252a <main+0x1388>
	else if (__tmp > 65535)
    2462:	fe 01       	movw	r30, r28
    2464:	ef 55       	subi	r30, 0x5F	; 95
    2466:	ff 4f       	sbci	r31, 0xFF	; 255
    2468:	60 81       	ld	r22, Z
    246a:	71 81       	ldd	r23, Z+1	; 0x01
    246c:	82 81       	ldd	r24, Z+2	; 0x02
    246e:	93 81       	ldd	r25, Z+3	; 0x03
    2470:	20 e0       	ldi	r18, 0x00	; 0
    2472:	3f ef       	ldi	r19, 0xFF	; 255
    2474:	4f e7       	ldi	r20, 0x7F	; 127
    2476:	57 e4       	ldi	r21, 0x47	; 71
    2478:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    247c:	18 16       	cp	r1, r24
    247e:	0c f0       	brlt	.+2      	; 0x2482 <main+0x12e0>
    2480:	43 c0       	rjmp	.+134    	; 0x2508 <main+0x1366>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2482:	fe 01       	movw	r30, r28
    2484:	eb 55       	subi	r30, 0x5B	; 91
    2486:	ff 4f       	sbci	r31, 0xFF	; 255
    2488:	60 81       	ld	r22, Z
    248a:	71 81       	ldd	r23, Z+1	; 0x01
    248c:	82 81       	ldd	r24, Z+2	; 0x02
    248e:	93 81       	ldd	r25, Z+3	; 0x03
    2490:	20 e0       	ldi	r18, 0x00	; 0
    2492:	30 e0       	ldi	r19, 0x00	; 0
    2494:	40 e2       	ldi	r20, 0x20	; 32
    2496:	51 e4       	ldi	r21, 0x41	; 65
    2498:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    249c:	dc 01       	movw	r26, r24
    249e:	cb 01       	movw	r24, r22
    24a0:	8e 01       	movw	r16, r28
    24a2:	01 56       	subi	r16, 0x61	; 97
    24a4:	1f 4f       	sbci	r17, 0xFF	; 255
    24a6:	bc 01       	movw	r22, r24
    24a8:	cd 01       	movw	r24, r26
    24aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24ae:	dc 01       	movw	r26, r24
    24b0:	cb 01       	movw	r24, r22
    24b2:	f8 01       	movw	r30, r16
    24b4:	91 83       	std	Z+1, r25	; 0x01
    24b6:	80 83       	st	Z, r24
    24b8:	1f c0       	rjmp	.+62     	; 0x24f8 <main+0x1356>
    24ba:	fe 01       	movw	r30, r28
    24bc:	e3 56       	subi	r30, 0x63	; 99
    24be:	ff 4f       	sbci	r31, 0xFF	; 255
    24c0:	80 e9       	ldi	r24, 0x90	; 144
    24c2:	91 e0       	ldi	r25, 0x01	; 1
    24c4:	91 83       	std	Z+1, r25	; 0x01
    24c6:	80 83       	st	Z, r24
    24c8:	fe 01       	movw	r30, r28
    24ca:	e3 56       	subi	r30, 0x63	; 99
    24cc:	ff 4f       	sbci	r31, 0xFF	; 255
    24ce:	80 81       	ld	r24, Z
    24d0:	91 81       	ldd	r25, Z+1	; 0x01
    24d2:	01 97       	sbiw	r24, 0x01	; 1
    24d4:	f1 f7       	brne	.-4      	; 0x24d2 <main+0x1330>
    24d6:	fe 01       	movw	r30, r28
    24d8:	e3 56       	subi	r30, 0x63	; 99
    24da:	ff 4f       	sbci	r31, 0xFF	; 255
    24dc:	91 83       	std	Z+1, r25	; 0x01
    24de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24e0:	de 01       	movw	r26, r28
    24e2:	a1 56       	subi	r26, 0x61	; 97
    24e4:	bf 4f       	sbci	r27, 0xFF	; 255
    24e6:	fe 01       	movw	r30, r28
    24e8:	e1 56       	subi	r30, 0x61	; 97
    24ea:	ff 4f       	sbci	r31, 0xFF	; 255
    24ec:	80 81       	ld	r24, Z
    24ee:	91 81       	ldd	r25, Z+1	; 0x01
    24f0:	01 97       	sbiw	r24, 0x01	; 1
    24f2:	11 96       	adiw	r26, 0x01	; 1
    24f4:	9c 93       	st	X, r25
    24f6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24f8:	fe 01       	movw	r30, r28
    24fa:	e1 56       	subi	r30, 0x61	; 97
    24fc:	ff 4f       	sbci	r31, 0xFF	; 255
    24fe:	80 81       	ld	r24, Z
    2500:	91 81       	ldd	r25, Z+1	; 0x01
    2502:	00 97       	sbiw	r24, 0x00	; 0
    2504:	d1 f6       	brne	.-76     	; 0x24ba <main+0x1318>
    2506:	27 c0       	rjmp	.+78     	; 0x2556 <main+0x13b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2508:	8e 01       	movw	r16, r28
    250a:	01 56       	subi	r16, 0x61	; 97
    250c:	1f 4f       	sbci	r17, 0xFF	; 255
    250e:	fe 01       	movw	r30, r28
    2510:	ef 55       	subi	r30, 0x5F	; 95
    2512:	ff 4f       	sbci	r31, 0xFF	; 255
    2514:	60 81       	ld	r22, Z
    2516:	71 81       	ldd	r23, Z+1	; 0x01
    2518:	82 81       	ldd	r24, Z+2	; 0x02
    251a:	93 81       	ldd	r25, Z+3	; 0x03
    251c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2520:	dc 01       	movw	r26, r24
    2522:	cb 01       	movw	r24, r22
    2524:	f8 01       	movw	r30, r16
    2526:	91 83       	std	Z+1, r25	; 0x01
    2528:	80 83       	st	Z, r24
    252a:	de 01       	movw	r26, r28
    252c:	a5 56       	subi	r26, 0x65	; 101
    252e:	bf 4f       	sbci	r27, 0xFF	; 255
    2530:	fe 01       	movw	r30, r28
    2532:	e1 56       	subi	r30, 0x61	; 97
    2534:	ff 4f       	sbci	r31, 0xFF	; 255
    2536:	80 81       	ld	r24, Z
    2538:	91 81       	ldd	r25, Z+1	; 0x01
    253a:	8d 93       	st	X+, r24
    253c:	9c 93       	st	X, r25
    253e:	fe 01       	movw	r30, r28
    2540:	e5 56       	subi	r30, 0x65	; 101
    2542:	ff 4f       	sbci	r31, 0xFF	; 255
    2544:	80 81       	ld	r24, Z
    2546:	91 81       	ldd	r25, Z+1	; 0x01
    2548:	01 97       	sbiw	r24, 0x01	; 1
    254a:	f1 f7       	brne	.-4      	; 0x2548 <main+0x13a6>
    254c:	fe 01       	movw	r30, r28
    254e:	e5 56       	subi	r30, 0x65	; 101
    2550:	ff 4f       	sbci	r31, 0xFF	; 255
    2552:	91 83       	std	Z+1, r25	; 0x01
    2554:	80 83       	st	Z, r24
   	_delay_ms(500);
   	LED_OFF(DIO_PORTC,PIN2);
    2556:	82 e0       	ldi	r24, 0x02	; 2
    2558:	62 e0       	ldi	r22, 0x02	; 2
    255a:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
   	LED_OFF(DIO_PORTC,PIN7);
    255e:	82 e0       	ldi	r24, 0x02	; 2
    2560:	67 e0       	ldi	r22, 0x07	; 7
    2562:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
   	LED_OFF(DIO_PORTD,PIN3);
    2566:	83 e0       	ldi	r24, 0x03	; 3
    2568:	63 e0       	ldi	r22, 0x03	; 3
    256a:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    256e:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <main+0x24>



}
else if (button == OUTPUT_HIGH)
    2572:	fe 01       	movw	r30, r28
    2574:	ed 5a       	subi	r30, 0xAD	; 173
    2576:	fe 4f       	sbci	r31, 0xFE	; 254
    2578:	80 81       	ld	r24, Z
    257a:	81 30       	cpi	r24, 0x01	; 1
    257c:	09 f0       	breq	.+2      	; 0x2580 <main+0x13de>
    257e:	b1 c6       	rjmp	.+3426   	; 0x32e2 <main+0x2140>
{

	LED_ON(DIO_PORTC ,PIN2);
    2580:	82 e0       	ldi	r24, 0x02	; 2
    2582:	62 e0       	ldi	r22, 0x02	; 2
    2584:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    2588:	fe 01       	movw	r30, r28
    258a:	e9 56       	subi	r30, 0x69	; 105
    258c:	ff 4f       	sbci	r31, 0xFF	; 255
    258e:	80 e0       	ldi	r24, 0x00	; 0
    2590:	90 e0       	ldi	r25, 0x00	; 0
    2592:	aa ef       	ldi	r26, 0xFA	; 250
    2594:	b3 e4       	ldi	r27, 0x43	; 67
    2596:	80 83       	st	Z, r24
    2598:	91 83       	std	Z+1, r25	; 0x01
    259a:	a2 83       	std	Z+2, r26	; 0x02
    259c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    259e:	8e 01       	movw	r16, r28
    25a0:	0d 56       	subi	r16, 0x6D	; 109
    25a2:	1f 4f       	sbci	r17, 0xFF	; 255
    25a4:	fe 01       	movw	r30, r28
    25a6:	e9 56       	subi	r30, 0x69	; 105
    25a8:	ff 4f       	sbci	r31, 0xFF	; 255
    25aa:	60 81       	ld	r22, Z
    25ac:	71 81       	ldd	r23, Z+1	; 0x01
    25ae:	82 81       	ldd	r24, Z+2	; 0x02
    25b0:	93 81       	ldd	r25, Z+3	; 0x03
    25b2:	20 e0       	ldi	r18, 0x00	; 0
    25b4:	30 e0       	ldi	r19, 0x00	; 0
    25b6:	4a e7       	ldi	r20, 0x7A	; 122
    25b8:	55 e4       	ldi	r21, 0x45	; 69
    25ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25be:	dc 01       	movw	r26, r24
    25c0:	cb 01       	movw	r24, r22
    25c2:	f8 01       	movw	r30, r16
    25c4:	80 83       	st	Z, r24
    25c6:	91 83       	std	Z+1, r25	; 0x01
    25c8:	a2 83       	std	Z+2, r26	; 0x02
    25ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25cc:	fe 01       	movw	r30, r28
    25ce:	ed 56       	subi	r30, 0x6D	; 109
    25d0:	ff 4f       	sbci	r31, 0xFF	; 255
    25d2:	60 81       	ld	r22, Z
    25d4:	71 81       	ldd	r23, Z+1	; 0x01
    25d6:	82 81       	ldd	r24, Z+2	; 0x02
    25d8:	93 81       	ldd	r25, Z+3	; 0x03
    25da:	20 e0       	ldi	r18, 0x00	; 0
    25dc:	30 e0       	ldi	r19, 0x00	; 0
    25de:	40 e8       	ldi	r20, 0x80	; 128
    25e0:	5f e3       	ldi	r21, 0x3F	; 63
    25e2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25e6:	88 23       	and	r24, r24
    25e8:	44 f4       	brge	.+16     	; 0x25fa <main+0x1458>
		__ticks = 1;
    25ea:	fe 01       	movw	r30, r28
    25ec:	ef 56       	subi	r30, 0x6F	; 111
    25ee:	ff 4f       	sbci	r31, 0xFF	; 255
    25f0:	81 e0       	ldi	r24, 0x01	; 1
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	91 83       	std	Z+1, r25	; 0x01
    25f6:	80 83       	st	Z, r24
    25f8:	64 c0       	rjmp	.+200    	; 0x26c2 <main+0x1520>
	else if (__tmp > 65535)
    25fa:	fe 01       	movw	r30, r28
    25fc:	ed 56       	subi	r30, 0x6D	; 109
    25fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2600:	60 81       	ld	r22, Z
    2602:	71 81       	ldd	r23, Z+1	; 0x01
    2604:	82 81       	ldd	r24, Z+2	; 0x02
    2606:	93 81       	ldd	r25, Z+3	; 0x03
    2608:	20 e0       	ldi	r18, 0x00	; 0
    260a:	3f ef       	ldi	r19, 0xFF	; 255
    260c:	4f e7       	ldi	r20, 0x7F	; 127
    260e:	57 e4       	ldi	r21, 0x47	; 71
    2610:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2614:	18 16       	cp	r1, r24
    2616:	0c f0       	brlt	.+2      	; 0x261a <main+0x1478>
    2618:	43 c0       	rjmp	.+134    	; 0x26a0 <main+0x14fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    261a:	fe 01       	movw	r30, r28
    261c:	e9 56       	subi	r30, 0x69	; 105
    261e:	ff 4f       	sbci	r31, 0xFF	; 255
    2620:	60 81       	ld	r22, Z
    2622:	71 81       	ldd	r23, Z+1	; 0x01
    2624:	82 81       	ldd	r24, Z+2	; 0x02
    2626:	93 81       	ldd	r25, Z+3	; 0x03
    2628:	20 e0       	ldi	r18, 0x00	; 0
    262a:	30 e0       	ldi	r19, 0x00	; 0
    262c:	40 e2       	ldi	r20, 0x20	; 32
    262e:	51 e4       	ldi	r21, 0x41	; 65
    2630:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2634:	dc 01       	movw	r26, r24
    2636:	cb 01       	movw	r24, r22
    2638:	8e 01       	movw	r16, r28
    263a:	0f 56       	subi	r16, 0x6F	; 111
    263c:	1f 4f       	sbci	r17, 0xFF	; 255
    263e:	bc 01       	movw	r22, r24
    2640:	cd 01       	movw	r24, r26
    2642:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2646:	dc 01       	movw	r26, r24
    2648:	cb 01       	movw	r24, r22
    264a:	f8 01       	movw	r30, r16
    264c:	91 83       	std	Z+1, r25	; 0x01
    264e:	80 83       	st	Z, r24
    2650:	1f c0       	rjmp	.+62     	; 0x2690 <main+0x14ee>
    2652:	fe 01       	movw	r30, r28
    2654:	e1 57       	subi	r30, 0x71	; 113
    2656:	ff 4f       	sbci	r31, 0xFF	; 255
    2658:	80 e9       	ldi	r24, 0x90	; 144
    265a:	91 e0       	ldi	r25, 0x01	; 1
    265c:	91 83       	std	Z+1, r25	; 0x01
    265e:	80 83       	st	Z, r24
    2660:	fe 01       	movw	r30, r28
    2662:	e1 57       	subi	r30, 0x71	; 113
    2664:	ff 4f       	sbci	r31, 0xFF	; 255
    2666:	80 81       	ld	r24, Z
    2668:	91 81       	ldd	r25, Z+1	; 0x01
    266a:	01 97       	sbiw	r24, 0x01	; 1
    266c:	f1 f7       	brne	.-4      	; 0x266a <main+0x14c8>
    266e:	fe 01       	movw	r30, r28
    2670:	e1 57       	subi	r30, 0x71	; 113
    2672:	ff 4f       	sbci	r31, 0xFF	; 255
    2674:	91 83       	std	Z+1, r25	; 0x01
    2676:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2678:	de 01       	movw	r26, r28
    267a:	af 56       	subi	r26, 0x6F	; 111
    267c:	bf 4f       	sbci	r27, 0xFF	; 255
    267e:	fe 01       	movw	r30, r28
    2680:	ef 56       	subi	r30, 0x6F	; 111
    2682:	ff 4f       	sbci	r31, 0xFF	; 255
    2684:	80 81       	ld	r24, Z
    2686:	91 81       	ldd	r25, Z+1	; 0x01
    2688:	01 97       	sbiw	r24, 0x01	; 1
    268a:	11 96       	adiw	r26, 0x01	; 1
    268c:	9c 93       	st	X, r25
    268e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2690:	fe 01       	movw	r30, r28
    2692:	ef 56       	subi	r30, 0x6F	; 111
    2694:	ff 4f       	sbci	r31, 0xFF	; 255
    2696:	80 81       	ld	r24, Z
    2698:	91 81       	ldd	r25, Z+1	; 0x01
    269a:	00 97       	sbiw	r24, 0x00	; 0
    269c:	d1 f6       	brne	.-76     	; 0x2652 <main+0x14b0>
    269e:	27 c0       	rjmp	.+78     	; 0x26ee <main+0x154c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26a0:	8e 01       	movw	r16, r28
    26a2:	0f 56       	subi	r16, 0x6F	; 111
    26a4:	1f 4f       	sbci	r17, 0xFF	; 255
    26a6:	fe 01       	movw	r30, r28
    26a8:	ed 56       	subi	r30, 0x6D	; 109
    26aa:	ff 4f       	sbci	r31, 0xFF	; 255
    26ac:	60 81       	ld	r22, Z
    26ae:	71 81       	ldd	r23, Z+1	; 0x01
    26b0:	82 81       	ldd	r24, Z+2	; 0x02
    26b2:	93 81       	ldd	r25, Z+3	; 0x03
    26b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26b8:	dc 01       	movw	r26, r24
    26ba:	cb 01       	movw	r24, r22
    26bc:	f8 01       	movw	r30, r16
    26be:	91 83       	std	Z+1, r25	; 0x01
    26c0:	80 83       	st	Z, r24
    26c2:	de 01       	movw	r26, r28
    26c4:	a3 57       	subi	r26, 0x73	; 115
    26c6:	bf 4f       	sbci	r27, 0xFF	; 255
    26c8:	fe 01       	movw	r30, r28
    26ca:	ef 56       	subi	r30, 0x6F	; 111
    26cc:	ff 4f       	sbci	r31, 0xFF	; 255
    26ce:	80 81       	ld	r24, Z
    26d0:	91 81       	ldd	r25, Z+1	; 0x01
    26d2:	8d 93       	st	X+, r24
    26d4:	9c 93       	st	X, r25
    26d6:	fe 01       	movw	r30, r28
    26d8:	e3 57       	subi	r30, 0x73	; 115
    26da:	ff 4f       	sbci	r31, 0xFF	; 255
    26dc:	80 81       	ld	r24, Z
    26de:	91 81       	ldd	r25, Z+1	; 0x01
    26e0:	01 97       	sbiw	r24, 0x01	; 1
    26e2:	f1 f7       	brne	.-4      	; 0x26e0 <main+0x153e>
    26e4:	fe 01       	movw	r30, r28
    26e6:	e3 57       	subi	r30, 0x73	; 115
    26e8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ea:	91 83       	std	Z+1, r25	; 0x01
    26ec:	80 83       	st	Z, r24
	_delay_ms(500);
	LED_ON(DIO_PORTC,PIN7);
    26ee:	82 e0       	ldi	r24, 0x02	; 2
    26f0:	67 e0       	ldi	r22, 0x07	; 7
    26f2:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    26f6:	fe 01       	movw	r30, r28
    26f8:	e7 57       	subi	r30, 0x77	; 119
    26fa:	ff 4f       	sbci	r31, 0xFF	; 255
    26fc:	80 e0       	ldi	r24, 0x00	; 0
    26fe:	90 e0       	ldi	r25, 0x00	; 0
    2700:	aa ef       	ldi	r26, 0xFA	; 250
    2702:	b3 e4       	ldi	r27, 0x43	; 67
    2704:	80 83       	st	Z, r24
    2706:	91 83       	std	Z+1, r25	; 0x01
    2708:	a2 83       	std	Z+2, r26	; 0x02
    270a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    270c:	8e 01       	movw	r16, r28
    270e:	0b 57       	subi	r16, 0x7B	; 123
    2710:	1f 4f       	sbci	r17, 0xFF	; 255
    2712:	fe 01       	movw	r30, r28
    2714:	e7 57       	subi	r30, 0x77	; 119
    2716:	ff 4f       	sbci	r31, 0xFF	; 255
    2718:	60 81       	ld	r22, Z
    271a:	71 81       	ldd	r23, Z+1	; 0x01
    271c:	82 81       	ldd	r24, Z+2	; 0x02
    271e:	93 81       	ldd	r25, Z+3	; 0x03
    2720:	20 e0       	ldi	r18, 0x00	; 0
    2722:	30 e0       	ldi	r19, 0x00	; 0
    2724:	4a e7       	ldi	r20, 0x7A	; 122
    2726:	55 e4       	ldi	r21, 0x45	; 69
    2728:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    272c:	dc 01       	movw	r26, r24
    272e:	cb 01       	movw	r24, r22
    2730:	f8 01       	movw	r30, r16
    2732:	80 83       	st	Z, r24
    2734:	91 83       	std	Z+1, r25	; 0x01
    2736:	a2 83       	std	Z+2, r26	; 0x02
    2738:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    273a:	fe 01       	movw	r30, r28
    273c:	eb 57       	subi	r30, 0x7B	; 123
    273e:	ff 4f       	sbci	r31, 0xFF	; 255
    2740:	60 81       	ld	r22, Z
    2742:	71 81       	ldd	r23, Z+1	; 0x01
    2744:	82 81       	ldd	r24, Z+2	; 0x02
    2746:	93 81       	ldd	r25, Z+3	; 0x03
    2748:	20 e0       	ldi	r18, 0x00	; 0
    274a:	30 e0       	ldi	r19, 0x00	; 0
    274c:	40 e8       	ldi	r20, 0x80	; 128
    274e:	5f e3       	ldi	r21, 0x3F	; 63
    2750:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2754:	88 23       	and	r24, r24
    2756:	44 f4       	brge	.+16     	; 0x2768 <main+0x15c6>
		__ticks = 1;
    2758:	fe 01       	movw	r30, r28
    275a:	ed 57       	subi	r30, 0x7D	; 125
    275c:	ff 4f       	sbci	r31, 0xFF	; 255
    275e:	81 e0       	ldi	r24, 0x01	; 1
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	91 83       	std	Z+1, r25	; 0x01
    2764:	80 83       	st	Z, r24
    2766:	64 c0       	rjmp	.+200    	; 0x2830 <main+0x168e>
	else if (__tmp > 65535)
    2768:	fe 01       	movw	r30, r28
    276a:	eb 57       	subi	r30, 0x7B	; 123
    276c:	ff 4f       	sbci	r31, 0xFF	; 255
    276e:	60 81       	ld	r22, Z
    2770:	71 81       	ldd	r23, Z+1	; 0x01
    2772:	82 81       	ldd	r24, Z+2	; 0x02
    2774:	93 81       	ldd	r25, Z+3	; 0x03
    2776:	20 e0       	ldi	r18, 0x00	; 0
    2778:	3f ef       	ldi	r19, 0xFF	; 255
    277a:	4f e7       	ldi	r20, 0x7F	; 127
    277c:	57 e4       	ldi	r21, 0x47	; 71
    277e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2782:	18 16       	cp	r1, r24
    2784:	0c f0       	brlt	.+2      	; 0x2788 <main+0x15e6>
    2786:	43 c0       	rjmp	.+134    	; 0x280e <main+0x166c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2788:	fe 01       	movw	r30, r28
    278a:	e7 57       	subi	r30, 0x77	; 119
    278c:	ff 4f       	sbci	r31, 0xFF	; 255
    278e:	60 81       	ld	r22, Z
    2790:	71 81       	ldd	r23, Z+1	; 0x01
    2792:	82 81       	ldd	r24, Z+2	; 0x02
    2794:	93 81       	ldd	r25, Z+3	; 0x03
    2796:	20 e0       	ldi	r18, 0x00	; 0
    2798:	30 e0       	ldi	r19, 0x00	; 0
    279a:	40 e2       	ldi	r20, 0x20	; 32
    279c:	51 e4       	ldi	r21, 0x41	; 65
    279e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27a2:	dc 01       	movw	r26, r24
    27a4:	cb 01       	movw	r24, r22
    27a6:	8e 01       	movw	r16, r28
    27a8:	0d 57       	subi	r16, 0x7D	; 125
    27aa:	1f 4f       	sbci	r17, 0xFF	; 255
    27ac:	bc 01       	movw	r22, r24
    27ae:	cd 01       	movw	r24, r26
    27b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27b4:	dc 01       	movw	r26, r24
    27b6:	cb 01       	movw	r24, r22
    27b8:	f8 01       	movw	r30, r16
    27ba:	91 83       	std	Z+1, r25	; 0x01
    27bc:	80 83       	st	Z, r24
    27be:	1f c0       	rjmp	.+62     	; 0x27fe <main+0x165c>
    27c0:	fe 01       	movw	r30, r28
    27c2:	ef 57       	subi	r30, 0x7F	; 127
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	80 e9       	ldi	r24, 0x90	; 144
    27c8:	91 e0       	ldi	r25, 0x01	; 1
    27ca:	91 83       	std	Z+1, r25	; 0x01
    27cc:	80 83       	st	Z, r24
    27ce:	fe 01       	movw	r30, r28
    27d0:	ef 57       	subi	r30, 0x7F	; 127
    27d2:	ff 4f       	sbci	r31, 0xFF	; 255
    27d4:	80 81       	ld	r24, Z
    27d6:	91 81       	ldd	r25, Z+1	; 0x01
    27d8:	01 97       	sbiw	r24, 0x01	; 1
    27da:	f1 f7       	brne	.-4      	; 0x27d8 <main+0x1636>
    27dc:	fe 01       	movw	r30, r28
    27de:	ef 57       	subi	r30, 0x7F	; 127
    27e0:	ff 4f       	sbci	r31, 0xFF	; 255
    27e2:	91 83       	std	Z+1, r25	; 0x01
    27e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27e6:	de 01       	movw	r26, r28
    27e8:	ad 57       	subi	r26, 0x7D	; 125
    27ea:	bf 4f       	sbci	r27, 0xFF	; 255
    27ec:	fe 01       	movw	r30, r28
    27ee:	ed 57       	subi	r30, 0x7D	; 125
    27f0:	ff 4f       	sbci	r31, 0xFF	; 255
    27f2:	80 81       	ld	r24, Z
    27f4:	91 81       	ldd	r25, Z+1	; 0x01
    27f6:	01 97       	sbiw	r24, 0x01	; 1
    27f8:	11 96       	adiw	r26, 0x01	; 1
    27fa:	9c 93       	st	X, r25
    27fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27fe:	fe 01       	movw	r30, r28
    2800:	ed 57       	subi	r30, 0x7D	; 125
    2802:	ff 4f       	sbci	r31, 0xFF	; 255
    2804:	80 81       	ld	r24, Z
    2806:	91 81       	ldd	r25, Z+1	; 0x01
    2808:	00 97       	sbiw	r24, 0x00	; 0
    280a:	d1 f6       	brne	.-76     	; 0x27c0 <main+0x161e>
    280c:	27 c0       	rjmp	.+78     	; 0x285c <main+0x16ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    280e:	8e 01       	movw	r16, r28
    2810:	0d 57       	subi	r16, 0x7D	; 125
    2812:	1f 4f       	sbci	r17, 0xFF	; 255
    2814:	fe 01       	movw	r30, r28
    2816:	eb 57       	subi	r30, 0x7B	; 123
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	60 81       	ld	r22, Z
    281c:	71 81       	ldd	r23, Z+1	; 0x01
    281e:	82 81       	ldd	r24, Z+2	; 0x02
    2820:	93 81       	ldd	r25, Z+3	; 0x03
    2822:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2826:	dc 01       	movw	r26, r24
    2828:	cb 01       	movw	r24, r22
    282a:	f8 01       	movw	r30, r16
    282c:	91 83       	std	Z+1, r25	; 0x01
    282e:	80 83       	st	Z, r24
    2830:	de 01       	movw	r26, r28
    2832:	a1 58       	subi	r26, 0x81	; 129
    2834:	bf 4f       	sbci	r27, 0xFF	; 255
    2836:	fe 01       	movw	r30, r28
    2838:	ed 57       	subi	r30, 0x7D	; 125
    283a:	ff 4f       	sbci	r31, 0xFF	; 255
    283c:	80 81       	ld	r24, Z
    283e:	91 81       	ldd	r25, Z+1	; 0x01
    2840:	8d 93       	st	X+, r24
    2842:	9c 93       	st	X, r25
    2844:	fe 01       	movw	r30, r28
    2846:	e1 58       	subi	r30, 0x81	; 129
    2848:	ff 4f       	sbci	r31, 0xFF	; 255
    284a:	80 81       	ld	r24, Z
    284c:	91 81       	ldd	r25, Z+1	; 0x01
    284e:	01 97       	sbiw	r24, 0x01	; 1
    2850:	f1 f7       	brne	.-4      	; 0x284e <main+0x16ac>
    2852:	fe 01       	movw	r30, r28
    2854:	e1 58       	subi	r30, 0x81	; 129
    2856:	ff 4f       	sbci	r31, 0xFF	; 255
    2858:	91 83       	std	Z+1, r25	; 0x01
    285a:	80 83       	st	Z, r24
	_delay_ms(500);
	LED_ON(DIO_PORTD,PIN3);
    285c:	83 e0       	ldi	r24, 0x03	; 3
    285e:	63 e0       	ldi	r22, 0x03	; 3
    2860:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    2864:	fe 01       	movw	r30, r28
    2866:	e5 58       	subi	r30, 0x85	; 133
    2868:	ff 4f       	sbci	r31, 0xFF	; 255
    286a:	80 e0       	ldi	r24, 0x00	; 0
    286c:	90 e0       	ldi	r25, 0x00	; 0
    286e:	aa ef       	ldi	r26, 0xFA	; 250
    2870:	b3 e4       	ldi	r27, 0x43	; 67
    2872:	80 83       	st	Z, r24
    2874:	91 83       	std	Z+1, r25	; 0x01
    2876:	a2 83       	std	Z+2, r26	; 0x02
    2878:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    287a:	8e 01       	movw	r16, r28
    287c:	09 58       	subi	r16, 0x89	; 137
    287e:	1f 4f       	sbci	r17, 0xFF	; 255
    2880:	fe 01       	movw	r30, r28
    2882:	e5 58       	subi	r30, 0x85	; 133
    2884:	ff 4f       	sbci	r31, 0xFF	; 255
    2886:	60 81       	ld	r22, Z
    2888:	71 81       	ldd	r23, Z+1	; 0x01
    288a:	82 81       	ldd	r24, Z+2	; 0x02
    288c:	93 81       	ldd	r25, Z+3	; 0x03
    288e:	20 e0       	ldi	r18, 0x00	; 0
    2890:	30 e0       	ldi	r19, 0x00	; 0
    2892:	4a e7       	ldi	r20, 0x7A	; 122
    2894:	55 e4       	ldi	r21, 0x45	; 69
    2896:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    289a:	dc 01       	movw	r26, r24
    289c:	cb 01       	movw	r24, r22
    289e:	f8 01       	movw	r30, r16
    28a0:	80 83       	st	Z, r24
    28a2:	91 83       	std	Z+1, r25	; 0x01
    28a4:	a2 83       	std	Z+2, r26	; 0x02
    28a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28a8:	fe 01       	movw	r30, r28
    28aa:	e9 58       	subi	r30, 0x89	; 137
    28ac:	ff 4f       	sbci	r31, 0xFF	; 255
    28ae:	60 81       	ld	r22, Z
    28b0:	71 81       	ldd	r23, Z+1	; 0x01
    28b2:	82 81       	ldd	r24, Z+2	; 0x02
    28b4:	93 81       	ldd	r25, Z+3	; 0x03
    28b6:	20 e0       	ldi	r18, 0x00	; 0
    28b8:	30 e0       	ldi	r19, 0x00	; 0
    28ba:	40 e8       	ldi	r20, 0x80	; 128
    28bc:	5f e3       	ldi	r21, 0x3F	; 63
    28be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    28c2:	88 23       	and	r24, r24
    28c4:	44 f4       	brge	.+16     	; 0x28d6 <main+0x1734>
		__ticks = 1;
    28c6:	fe 01       	movw	r30, r28
    28c8:	eb 58       	subi	r30, 0x8B	; 139
    28ca:	ff 4f       	sbci	r31, 0xFF	; 255
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	90 e0       	ldi	r25, 0x00	; 0
    28d0:	91 83       	std	Z+1, r25	; 0x01
    28d2:	80 83       	st	Z, r24
    28d4:	64 c0       	rjmp	.+200    	; 0x299e <main+0x17fc>
	else if (__tmp > 65535)
    28d6:	fe 01       	movw	r30, r28
    28d8:	e9 58       	subi	r30, 0x89	; 137
    28da:	ff 4f       	sbci	r31, 0xFF	; 255
    28dc:	60 81       	ld	r22, Z
    28de:	71 81       	ldd	r23, Z+1	; 0x01
    28e0:	82 81       	ldd	r24, Z+2	; 0x02
    28e2:	93 81       	ldd	r25, Z+3	; 0x03
    28e4:	20 e0       	ldi	r18, 0x00	; 0
    28e6:	3f ef       	ldi	r19, 0xFF	; 255
    28e8:	4f e7       	ldi	r20, 0x7F	; 127
    28ea:	57 e4       	ldi	r21, 0x47	; 71
    28ec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28f0:	18 16       	cp	r1, r24
    28f2:	0c f0       	brlt	.+2      	; 0x28f6 <main+0x1754>
    28f4:	43 c0       	rjmp	.+134    	; 0x297c <main+0x17da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28f6:	fe 01       	movw	r30, r28
    28f8:	e5 58       	subi	r30, 0x85	; 133
    28fa:	ff 4f       	sbci	r31, 0xFF	; 255
    28fc:	60 81       	ld	r22, Z
    28fe:	71 81       	ldd	r23, Z+1	; 0x01
    2900:	82 81       	ldd	r24, Z+2	; 0x02
    2902:	93 81       	ldd	r25, Z+3	; 0x03
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	30 e0       	ldi	r19, 0x00	; 0
    2908:	40 e2       	ldi	r20, 0x20	; 32
    290a:	51 e4       	ldi	r21, 0x41	; 65
    290c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2910:	dc 01       	movw	r26, r24
    2912:	cb 01       	movw	r24, r22
    2914:	8e 01       	movw	r16, r28
    2916:	0b 58       	subi	r16, 0x8B	; 139
    2918:	1f 4f       	sbci	r17, 0xFF	; 255
    291a:	bc 01       	movw	r22, r24
    291c:	cd 01       	movw	r24, r26
    291e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2922:	dc 01       	movw	r26, r24
    2924:	cb 01       	movw	r24, r22
    2926:	f8 01       	movw	r30, r16
    2928:	91 83       	std	Z+1, r25	; 0x01
    292a:	80 83       	st	Z, r24
    292c:	1f c0       	rjmp	.+62     	; 0x296c <main+0x17ca>
    292e:	fe 01       	movw	r30, r28
    2930:	ed 58       	subi	r30, 0x8D	; 141
    2932:	ff 4f       	sbci	r31, 0xFF	; 255
    2934:	80 e9       	ldi	r24, 0x90	; 144
    2936:	91 e0       	ldi	r25, 0x01	; 1
    2938:	91 83       	std	Z+1, r25	; 0x01
    293a:	80 83       	st	Z, r24
    293c:	fe 01       	movw	r30, r28
    293e:	ed 58       	subi	r30, 0x8D	; 141
    2940:	ff 4f       	sbci	r31, 0xFF	; 255
    2942:	80 81       	ld	r24, Z
    2944:	91 81       	ldd	r25, Z+1	; 0x01
    2946:	01 97       	sbiw	r24, 0x01	; 1
    2948:	f1 f7       	brne	.-4      	; 0x2946 <main+0x17a4>
    294a:	fe 01       	movw	r30, r28
    294c:	ed 58       	subi	r30, 0x8D	; 141
    294e:	ff 4f       	sbci	r31, 0xFF	; 255
    2950:	91 83       	std	Z+1, r25	; 0x01
    2952:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2954:	de 01       	movw	r26, r28
    2956:	ab 58       	subi	r26, 0x8B	; 139
    2958:	bf 4f       	sbci	r27, 0xFF	; 255
    295a:	fe 01       	movw	r30, r28
    295c:	eb 58       	subi	r30, 0x8B	; 139
    295e:	ff 4f       	sbci	r31, 0xFF	; 255
    2960:	80 81       	ld	r24, Z
    2962:	91 81       	ldd	r25, Z+1	; 0x01
    2964:	01 97       	sbiw	r24, 0x01	; 1
    2966:	11 96       	adiw	r26, 0x01	; 1
    2968:	9c 93       	st	X, r25
    296a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    296c:	fe 01       	movw	r30, r28
    296e:	eb 58       	subi	r30, 0x8B	; 139
    2970:	ff 4f       	sbci	r31, 0xFF	; 255
    2972:	80 81       	ld	r24, Z
    2974:	91 81       	ldd	r25, Z+1	; 0x01
    2976:	00 97       	sbiw	r24, 0x00	; 0
    2978:	d1 f6       	brne	.-76     	; 0x292e <main+0x178c>
    297a:	27 c0       	rjmp	.+78     	; 0x29ca <main+0x1828>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    297c:	8e 01       	movw	r16, r28
    297e:	0b 58       	subi	r16, 0x8B	; 139
    2980:	1f 4f       	sbci	r17, 0xFF	; 255
    2982:	fe 01       	movw	r30, r28
    2984:	e9 58       	subi	r30, 0x89	; 137
    2986:	ff 4f       	sbci	r31, 0xFF	; 255
    2988:	60 81       	ld	r22, Z
    298a:	71 81       	ldd	r23, Z+1	; 0x01
    298c:	82 81       	ldd	r24, Z+2	; 0x02
    298e:	93 81       	ldd	r25, Z+3	; 0x03
    2990:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2994:	dc 01       	movw	r26, r24
    2996:	cb 01       	movw	r24, r22
    2998:	f8 01       	movw	r30, r16
    299a:	91 83       	std	Z+1, r25	; 0x01
    299c:	80 83       	st	Z, r24
    299e:	de 01       	movw	r26, r28
    29a0:	af 58       	subi	r26, 0x8F	; 143
    29a2:	bf 4f       	sbci	r27, 0xFF	; 255
    29a4:	fe 01       	movw	r30, r28
    29a6:	eb 58       	subi	r30, 0x8B	; 139
    29a8:	ff 4f       	sbci	r31, 0xFF	; 255
    29aa:	80 81       	ld	r24, Z
    29ac:	91 81       	ldd	r25, Z+1	; 0x01
    29ae:	8d 93       	st	X+, r24
    29b0:	9c 93       	st	X, r25
    29b2:	fe 01       	movw	r30, r28
    29b4:	ef 58       	subi	r30, 0x8F	; 143
    29b6:	ff 4f       	sbci	r31, 0xFF	; 255
    29b8:	80 81       	ld	r24, Z
    29ba:	91 81       	ldd	r25, Z+1	; 0x01
    29bc:	01 97       	sbiw	r24, 0x01	; 1
    29be:	f1 f7       	brne	.-4      	; 0x29bc <main+0x181a>
    29c0:	fe 01       	movw	r30, r28
    29c2:	ef 58       	subi	r30, 0x8F	; 143
    29c4:	ff 4f       	sbci	r31, 0xFF	; 255
    29c6:	91 83       	std	Z+1, r25	; 0x01
    29c8:	80 83       	st	Z, r24
	_delay_ms(500);

	LED_OFF(DIO_PORTC,PIN2);
    29ca:	82 e0       	ldi	r24, 0x02	; 2
    29cc:	62 e0       	ldi	r22, 0x02	; 2
    29ce:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    29d2:	fe 01       	movw	r30, r28
    29d4:	e3 59       	subi	r30, 0x93	; 147
    29d6:	ff 4f       	sbci	r31, 0xFF	; 255
    29d8:	80 e0       	ldi	r24, 0x00	; 0
    29da:	90 e0       	ldi	r25, 0x00	; 0
    29dc:	aa ef       	ldi	r26, 0xFA	; 250
    29de:	b3 e4       	ldi	r27, 0x43	; 67
    29e0:	80 83       	st	Z, r24
    29e2:	91 83       	std	Z+1, r25	; 0x01
    29e4:	a2 83       	std	Z+2, r26	; 0x02
    29e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29e8:	8e 01       	movw	r16, r28
    29ea:	07 59       	subi	r16, 0x97	; 151
    29ec:	1f 4f       	sbci	r17, 0xFF	; 255
    29ee:	fe 01       	movw	r30, r28
    29f0:	e3 59       	subi	r30, 0x93	; 147
    29f2:	ff 4f       	sbci	r31, 0xFF	; 255
    29f4:	60 81       	ld	r22, Z
    29f6:	71 81       	ldd	r23, Z+1	; 0x01
    29f8:	82 81       	ldd	r24, Z+2	; 0x02
    29fa:	93 81       	ldd	r25, Z+3	; 0x03
    29fc:	20 e0       	ldi	r18, 0x00	; 0
    29fe:	30 e0       	ldi	r19, 0x00	; 0
    2a00:	4a e7       	ldi	r20, 0x7A	; 122
    2a02:	55 e4       	ldi	r21, 0x45	; 69
    2a04:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a08:	dc 01       	movw	r26, r24
    2a0a:	cb 01       	movw	r24, r22
    2a0c:	f8 01       	movw	r30, r16
    2a0e:	80 83       	st	Z, r24
    2a10:	91 83       	std	Z+1, r25	; 0x01
    2a12:	a2 83       	std	Z+2, r26	; 0x02
    2a14:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a16:	fe 01       	movw	r30, r28
    2a18:	e7 59       	subi	r30, 0x97	; 151
    2a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1c:	60 81       	ld	r22, Z
    2a1e:	71 81       	ldd	r23, Z+1	; 0x01
    2a20:	82 81       	ldd	r24, Z+2	; 0x02
    2a22:	93 81       	ldd	r25, Z+3	; 0x03
    2a24:	20 e0       	ldi	r18, 0x00	; 0
    2a26:	30 e0       	ldi	r19, 0x00	; 0
    2a28:	40 e8       	ldi	r20, 0x80	; 128
    2a2a:	5f e3       	ldi	r21, 0x3F	; 63
    2a2c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a30:	88 23       	and	r24, r24
    2a32:	44 f4       	brge	.+16     	; 0x2a44 <main+0x18a2>
		__ticks = 1;
    2a34:	fe 01       	movw	r30, r28
    2a36:	e9 59       	subi	r30, 0x99	; 153
    2a38:	ff 4f       	sbci	r31, 0xFF	; 255
    2a3a:	81 e0       	ldi	r24, 0x01	; 1
    2a3c:	90 e0       	ldi	r25, 0x00	; 0
    2a3e:	91 83       	std	Z+1, r25	; 0x01
    2a40:	80 83       	st	Z, r24
    2a42:	64 c0       	rjmp	.+200    	; 0x2b0c <main+0x196a>
	else if (__tmp > 65535)
    2a44:	fe 01       	movw	r30, r28
    2a46:	e7 59       	subi	r30, 0x97	; 151
    2a48:	ff 4f       	sbci	r31, 0xFF	; 255
    2a4a:	60 81       	ld	r22, Z
    2a4c:	71 81       	ldd	r23, Z+1	; 0x01
    2a4e:	82 81       	ldd	r24, Z+2	; 0x02
    2a50:	93 81       	ldd	r25, Z+3	; 0x03
    2a52:	20 e0       	ldi	r18, 0x00	; 0
    2a54:	3f ef       	ldi	r19, 0xFF	; 255
    2a56:	4f e7       	ldi	r20, 0x7F	; 127
    2a58:	57 e4       	ldi	r21, 0x47	; 71
    2a5a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a5e:	18 16       	cp	r1, r24
    2a60:	0c f0       	brlt	.+2      	; 0x2a64 <main+0x18c2>
    2a62:	43 c0       	rjmp	.+134    	; 0x2aea <main+0x1948>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a64:	fe 01       	movw	r30, r28
    2a66:	e3 59       	subi	r30, 0x93	; 147
    2a68:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6a:	60 81       	ld	r22, Z
    2a6c:	71 81       	ldd	r23, Z+1	; 0x01
    2a6e:	82 81       	ldd	r24, Z+2	; 0x02
    2a70:	93 81       	ldd	r25, Z+3	; 0x03
    2a72:	20 e0       	ldi	r18, 0x00	; 0
    2a74:	30 e0       	ldi	r19, 0x00	; 0
    2a76:	40 e2       	ldi	r20, 0x20	; 32
    2a78:	51 e4       	ldi	r21, 0x41	; 65
    2a7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a7e:	dc 01       	movw	r26, r24
    2a80:	cb 01       	movw	r24, r22
    2a82:	8e 01       	movw	r16, r28
    2a84:	09 59       	subi	r16, 0x99	; 153
    2a86:	1f 4f       	sbci	r17, 0xFF	; 255
    2a88:	bc 01       	movw	r22, r24
    2a8a:	cd 01       	movw	r24, r26
    2a8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a90:	dc 01       	movw	r26, r24
    2a92:	cb 01       	movw	r24, r22
    2a94:	f8 01       	movw	r30, r16
    2a96:	91 83       	std	Z+1, r25	; 0x01
    2a98:	80 83       	st	Z, r24
    2a9a:	1f c0       	rjmp	.+62     	; 0x2ada <main+0x1938>
    2a9c:	fe 01       	movw	r30, r28
    2a9e:	eb 59       	subi	r30, 0x9B	; 155
    2aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa2:	80 e9       	ldi	r24, 0x90	; 144
    2aa4:	91 e0       	ldi	r25, 0x01	; 1
    2aa6:	91 83       	std	Z+1, r25	; 0x01
    2aa8:	80 83       	st	Z, r24
    2aaa:	fe 01       	movw	r30, r28
    2aac:	eb 59       	subi	r30, 0x9B	; 155
    2aae:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab0:	80 81       	ld	r24, Z
    2ab2:	91 81       	ldd	r25, Z+1	; 0x01
    2ab4:	01 97       	sbiw	r24, 0x01	; 1
    2ab6:	f1 f7       	brne	.-4      	; 0x2ab4 <main+0x1912>
    2ab8:	fe 01       	movw	r30, r28
    2aba:	eb 59       	subi	r30, 0x9B	; 155
    2abc:	ff 4f       	sbci	r31, 0xFF	; 255
    2abe:	91 83       	std	Z+1, r25	; 0x01
    2ac0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ac2:	de 01       	movw	r26, r28
    2ac4:	a9 59       	subi	r26, 0x99	; 153
    2ac6:	bf 4f       	sbci	r27, 0xFF	; 255
    2ac8:	fe 01       	movw	r30, r28
    2aca:	e9 59       	subi	r30, 0x99	; 153
    2acc:	ff 4f       	sbci	r31, 0xFF	; 255
    2ace:	80 81       	ld	r24, Z
    2ad0:	91 81       	ldd	r25, Z+1	; 0x01
    2ad2:	01 97       	sbiw	r24, 0x01	; 1
    2ad4:	11 96       	adiw	r26, 0x01	; 1
    2ad6:	9c 93       	st	X, r25
    2ad8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ada:	fe 01       	movw	r30, r28
    2adc:	e9 59       	subi	r30, 0x99	; 153
    2ade:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae0:	80 81       	ld	r24, Z
    2ae2:	91 81       	ldd	r25, Z+1	; 0x01
    2ae4:	00 97       	sbiw	r24, 0x00	; 0
    2ae6:	d1 f6       	brne	.-76     	; 0x2a9c <main+0x18fa>
    2ae8:	27 c0       	rjmp	.+78     	; 0x2b38 <main+0x1996>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2aea:	8e 01       	movw	r16, r28
    2aec:	09 59       	subi	r16, 0x99	; 153
    2aee:	1f 4f       	sbci	r17, 0xFF	; 255
    2af0:	fe 01       	movw	r30, r28
    2af2:	e7 59       	subi	r30, 0x97	; 151
    2af4:	ff 4f       	sbci	r31, 0xFF	; 255
    2af6:	60 81       	ld	r22, Z
    2af8:	71 81       	ldd	r23, Z+1	; 0x01
    2afa:	82 81       	ldd	r24, Z+2	; 0x02
    2afc:	93 81       	ldd	r25, Z+3	; 0x03
    2afe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b02:	dc 01       	movw	r26, r24
    2b04:	cb 01       	movw	r24, r22
    2b06:	f8 01       	movw	r30, r16
    2b08:	91 83       	std	Z+1, r25	; 0x01
    2b0a:	80 83       	st	Z, r24
    2b0c:	de 01       	movw	r26, r28
    2b0e:	ad 59       	subi	r26, 0x9D	; 157
    2b10:	bf 4f       	sbci	r27, 0xFF	; 255
    2b12:	fe 01       	movw	r30, r28
    2b14:	e9 59       	subi	r30, 0x99	; 153
    2b16:	ff 4f       	sbci	r31, 0xFF	; 255
    2b18:	80 81       	ld	r24, Z
    2b1a:	91 81       	ldd	r25, Z+1	; 0x01
    2b1c:	8d 93       	st	X+, r24
    2b1e:	9c 93       	st	X, r25
    2b20:	fe 01       	movw	r30, r28
    2b22:	ed 59       	subi	r30, 0x9D	; 157
    2b24:	ff 4f       	sbci	r31, 0xFF	; 255
    2b26:	80 81       	ld	r24, Z
    2b28:	91 81       	ldd	r25, Z+1	; 0x01
    2b2a:	01 97       	sbiw	r24, 0x01	; 1
    2b2c:	f1 f7       	brne	.-4      	; 0x2b2a <main+0x1988>
    2b2e:	fe 01       	movw	r30, r28
    2b30:	ed 59       	subi	r30, 0x9D	; 157
    2b32:	ff 4f       	sbci	r31, 0xFF	; 255
    2b34:	91 83       	std	Z+1, r25	; 0x01
    2b36:	80 83       	st	Z, r24
   	_delay_ms(500);
   	LED_OFF(DIO_PORTC,PIN7);
    2b38:	82 e0       	ldi	r24, 0x02	; 2
    2b3a:	67 e0       	ldi	r22, 0x07	; 7
    2b3c:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    2b40:	fe 01       	movw	r30, r28
    2b42:	e1 5a       	subi	r30, 0xA1	; 161
    2b44:	ff 4f       	sbci	r31, 0xFF	; 255
    2b46:	80 e0       	ldi	r24, 0x00	; 0
    2b48:	90 e0       	ldi	r25, 0x00	; 0
    2b4a:	aa ef       	ldi	r26, 0xFA	; 250
    2b4c:	b3 e4       	ldi	r27, 0x43	; 67
    2b4e:	80 83       	st	Z, r24
    2b50:	91 83       	std	Z+1, r25	; 0x01
    2b52:	a2 83       	std	Z+2, r26	; 0x02
    2b54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b56:	8e 01       	movw	r16, r28
    2b58:	05 5a       	subi	r16, 0xA5	; 165
    2b5a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b5c:	fe 01       	movw	r30, r28
    2b5e:	e1 5a       	subi	r30, 0xA1	; 161
    2b60:	ff 4f       	sbci	r31, 0xFF	; 255
    2b62:	60 81       	ld	r22, Z
    2b64:	71 81       	ldd	r23, Z+1	; 0x01
    2b66:	82 81       	ldd	r24, Z+2	; 0x02
    2b68:	93 81       	ldd	r25, Z+3	; 0x03
    2b6a:	20 e0       	ldi	r18, 0x00	; 0
    2b6c:	30 e0       	ldi	r19, 0x00	; 0
    2b6e:	4a e7       	ldi	r20, 0x7A	; 122
    2b70:	55 e4       	ldi	r21, 0x45	; 69
    2b72:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b76:	dc 01       	movw	r26, r24
    2b78:	cb 01       	movw	r24, r22
    2b7a:	f8 01       	movw	r30, r16
    2b7c:	80 83       	st	Z, r24
    2b7e:	91 83       	std	Z+1, r25	; 0x01
    2b80:	a2 83       	std	Z+2, r26	; 0x02
    2b82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b84:	fe 01       	movw	r30, r28
    2b86:	e5 5a       	subi	r30, 0xA5	; 165
    2b88:	ff 4f       	sbci	r31, 0xFF	; 255
    2b8a:	60 81       	ld	r22, Z
    2b8c:	71 81       	ldd	r23, Z+1	; 0x01
    2b8e:	82 81       	ldd	r24, Z+2	; 0x02
    2b90:	93 81       	ldd	r25, Z+3	; 0x03
    2b92:	20 e0       	ldi	r18, 0x00	; 0
    2b94:	30 e0       	ldi	r19, 0x00	; 0
    2b96:	40 e8       	ldi	r20, 0x80	; 128
    2b98:	5f e3       	ldi	r21, 0x3F	; 63
    2b9a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b9e:	88 23       	and	r24, r24
    2ba0:	44 f4       	brge	.+16     	; 0x2bb2 <main+0x1a10>
		__ticks = 1;
    2ba2:	fe 01       	movw	r30, r28
    2ba4:	e7 5a       	subi	r30, 0xA7	; 167
    2ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba8:	81 e0       	ldi	r24, 0x01	; 1
    2baa:	90 e0       	ldi	r25, 0x00	; 0
    2bac:	91 83       	std	Z+1, r25	; 0x01
    2bae:	80 83       	st	Z, r24
    2bb0:	64 c0       	rjmp	.+200    	; 0x2c7a <main+0x1ad8>
	else if (__tmp > 65535)
    2bb2:	fe 01       	movw	r30, r28
    2bb4:	e5 5a       	subi	r30, 0xA5	; 165
    2bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb8:	60 81       	ld	r22, Z
    2bba:	71 81       	ldd	r23, Z+1	; 0x01
    2bbc:	82 81       	ldd	r24, Z+2	; 0x02
    2bbe:	93 81       	ldd	r25, Z+3	; 0x03
    2bc0:	20 e0       	ldi	r18, 0x00	; 0
    2bc2:	3f ef       	ldi	r19, 0xFF	; 255
    2bc4:	4f e7       	ldi	r20, 0x7F	; 127
    2bc6:	57 e4       	ldi	r21, 0x47	; 71
    2bc8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bcc:	18 16       	cp	r1, r24
    2bce:	0c f0       	brlt	.+2      	; 0x2bd2 <main+0x1a30>
    2bd0:	43 c0       	rjmp	.+134    	; 0x2c58 <main+0x1ab6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bd2:	fe 01       	movw	r30, r28
    2bd4:	e1 5a       	subi	r30, 0xA1	; 161
    2bd6:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd8:	60 81       	ld	r22, Z
    2bda:	71 81       	ldd	r23, Z+1	; 0x01
    2bdc:	82 81       	ldd	r24, Z+2	; 0x02
    2bde:	93 81       	ldd	r25, Z+3	; 0x03
    2be0:	20 e0       	ldi	r18, 0x00	; 0
    2be2:	30 e0       	ldi	r19, 0x00	; 0
    2be4:	40 e2       	ldi	r20, 0x20	; 32
    2be6:	51 e4       	ldi	r21, 0x41	; 65
    2be8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bec:	dc 01       	movw	r26, r24
    2bee:	cb 01       	movw	r24, r22
    2bf0:	8e 01       	movw	r16, r28
    2bf2:	07 5a       	subi	r16, 0xA7	; 167
    2bf4:	1f 4f       	sbci	r17, 0xFF	; 255
    2bf6:	bc 01       	movw	r22, r24
    2bf8:	cd 01       	movw	r24, r26
    2bfa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bfe:	dc 01       	movw	r26, r24
    2c00:	cb 01       	movw	r24, r22
    2c02:	f8 01       	movw	r30, r16
    2c04:	91 83       	std	Z+1, r25	; 0x01
    2c06:	80 83       	st	Z, r24
    2c08:	1f c0       	rjmp	.+62     	; 0x2c48 <main+0x1aa6>
    2c0a:	fe 01       	movw	r30, r28
    2c0c:	e9 5a       	subi	r30, 0xA9	; 169
    2c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c10:	80 e9       	ldi	r24, 0x90	; 144
    2c12:	91 e0       	ldi	r25, 0x01	; 1
    2c14:	91 83       	std	Z+1, r25	; 0x01
    2c16:	80 83       	st	Z, r24
    2c18:	fe 01       	movw	r30, r28
    2c1a:	e9 5a       	subi	r30, 0xA9	; 169
    2c1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c1e:	80 81       	ld	r24, Z
    2c20:	91 81       	ldd	r25, Z+1	; 0x01
    2c22:	01 97       	sbiw	r24, 0x01	; 1
    2c24:	f1 f7       	brne	.-4      	; 0x2c22 <main+0x1a80>
    2c26:	fe 01       	movw	r30, r28
    2c28:	e9 5a       	subi	r30, 0xA9	; 169
    2c2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2c:	91 83       	std	Z+1, r25	; 0x01
    2c2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c30:	de 01       	movw	r26, r28
    2c32:	a7 5a       	subi	r26, 0xA7	; 167
    2c34:	bf 4f       	sbci	r27, 0xFF	; 255
    2c36:	fe 01       	movw	r30, r28
    2c38:	e7 5a       	subi	r30, 0xA7	; 167
    2c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3c:	80 81       	ld	r24, Z
    2c3e:	91 81       	ldd	r25, Z+1	; 0x01
    2c40:	01 97       	sbiw	r24, 0x01	; 1
    2c42:	11 96       	adiw	r26, 0x01	; 1
    2c44:	9c 93       	st	X, r25
    2c46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c48:	fe 01       	movw	r30, r28
    2c4a:	e7 5a       	subi	r30, 0xA7	; 167
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	80 81       	ld	r24, Z
    2c50:	91 81       	ldd	r25, Z+1	; 0x01
    2c52:	00 97       	sbiw	r24, 0x00	; 0
    2c54:	d1 f6       	brne	.-76     	; 0x2c0a <main+0x1a68>
    2c56:	27 c0       	rjmp	.+78     	; 0x2ca6 <main+0x1b04>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c58:	8e 01       	movw	r16, r28
    2c5a:	07 5a       	subi	r16, 0xA7	; 167
    2c5c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c5e:	fe 01       	movw	r30, r28
    2c60:	e5 5a       	subi	r30, 0xA5	; 165
    2c62:	ff 4f       	sbci	r31, 0xFF	; 255
    2c64:	60 81       	ld	r22, Z
    2c66:	71 81       	ldd	r23, Z+1	; 0x01
    2c68:	82 81       	ldd	r24, Z+2	; 0x02
    2c6a:	93 81       	ldd	r25, Z+3	; 0x03
    2c6c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c70:	dc 01       	movw	r26, r24
    2c72:	cb 01       	movw	r24, r22
    2c74:	f8 01       	movw	r30, r16
    2c76:	91 83       	std	Z+1, r25	; 0x01
    2c78:	80 83       	st	Z, r24
    2c7a:	de 01       	movw	r26, r28
    2c7c:	ab 5a       	subi	r26, 0xAB	; 171
    2c7e:	bf 4f       	sbci	r27, 0xFF	; 255
    2c80:	fe 01       	movw	r30, r28
    2c82:	e7 5a       	subi	r30, 0xA7	; 167
    2c84:	ff 4f       	sbci	r31, 0xFF	; 255
    2c86:	80 81       	ld	r24, Z
    2c88:	91 81       	ldd	r25, Z+1	; 0x01
    2c8a:	8d 93       	st	X+, r24
    2c8c:	9c 93       	st	X, r25
    2c8e:	fe 01       	movw	r30, r28
    2c90:	eb 5a       	subi	r30, 0xAB	; 171
    2c92:	ff 4f       	sbci	r31, 0xFF	; 255
    2c94:	80 81       	ld	r24, Z
    2c96:	91 81       	ldd	r25, Z+1	; 0x01
    2c98:	01 97       	sbiw	r24, 0x01	; 1
    2c9a:	f1 f7       	brne	.-4      	; 0x2c98 <main+0x1af6>
    2c9c:	fe 01       	movw	r30, r28
    2c9e:	eb 5a       	subi	r30, 0xAB	; 171
    2ca0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca2:	91 83       	std	Z+1, r25	; 0x01
    2ca4:	80 83       	st	Z, r24
   	_delay_ms(500);
   	LED_OFF(DIO_PORTD,PIN3);
    2ca6:	83 e0       	ldi	r24, 0x03	; 3
    2ca8:	63 e0       	ldi	r22, 0x03	; 3
    2caa:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    2cae:	fe 01       	movw	r30, r28
    2cb0:	ef 5a       	subi	r30, 0xAF	; 175
    2cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb4:	80 e0       	ldi	r24, 0x00	; 0
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	aa ef       	ldi	r26, 0xFA	; 250
    2cba:	b3 e4       	ldi	r27, 0x43	; 67
    2cbc:	80 83       	st	Z, r24
    2cbe:	91 83       	std	Z+1, r25	; 0x01
    2cc0:	a2 83       	std	Z+2, r26	; 0x02
    2cc2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cc4:	8e 01       	movw	r16, r28
    2cc6:	03 5b       	subi	r16, 0xB3	; 179
    2cc8:	1f 4f       	sbci	r17, 0xFF	; 255
    2cca:	fe 01       	movw	r30, r28
    2ccc:	ef 5a       	subi	r30, 0xAF	; 175
    2cce:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd0:	60 81       	ld	r22, Z
    2cd2:	71 81       	ldd	r23, Z+1	; 0x01
    2cd4:	82 81       	ldd	r24, Z+2	; 0x02
    2cd6:	93 81       	ldd	r25, Z+3	; 0x03
    2cd8:	20 e0       	ldi	r18, 0x00	; 0
    2cda:	30 e0       	ldi	r19, 0x00	; 0
    2cdc:	4a e7       	ldi	r20, 0x7A	; 122
    2cde:	55 e4       	ldi	r21, 0x45	; 69
    2ce0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ce4:	dc 01       	movw	r26, r24
    2ce6:	cb 01       	movw	r24, r22
    2ce8:	f8 01       	movw	r30, r16
    2cea:	80 83       	st	Z, r24
    2cec:	91 83       	std	Z+1, r25	; 0x01
    2cee:	a2 83       	std	Z+2, r26	; 0x02
    2cf0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cf2:	fe 01       	movw	r30, r28
    2cf4:	e3 5b       	subi	r30, 0xB3	; 179
    2cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf8:	60 81       	ld	r22, Z
    2cfa:	71 81       	ldd	r23, Z+1	; 0x01
    2cfc:	82 81       	ldd	r24, Z+2	; 0x02
    2cfe:	93 81       	ldd	r25, Z+3	; 0x03
    2d00:	20 e0       	ldi	r18, 0x00	; 0
    2d02:	30 e0       	ldi	r19, 0x00	; 0
    2d04:	40 e8       	ldi	r20, 0x80	; 128
    2d06:	5f e3       	ldi	r21, 0x3F	; 63
    2d08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d0c:	88 23       	and	r24, r24
    2d0e:	44 f4       	brge	.+16     	; 0x2d20 <main+0x1b7e>
		__ticks = 1;
    2d10:	fe 01       	movw	r30, r28
    2d12:	e5 5b       	subi	r30, 0xB5	; 181
    2d14:	ff 4f       	sbci	r31, 0xFF	; 255
    2d16:	81 e0       	ldi	r24, 0x01	; 1
    2d18:	90 e0       	ldi	r25, 0x00	; 0
    2d1a:	91 83       	std	Z+1, r25	; 0x01
    2d1c:	80 83       	st	Z, r24
    2d1e:	64 c0       	rjmp	.+200    	; 0x2de8 <main+0x1c46>
	else if (__tmp > 65535)
    2d20:	fe 01       	movw	r30, r28
    2d22:	e3 5b       	subi	r30, 0xB3	; 179
    2d24:	ff 4f       	sbci	r31, 0xFF	; 255
    2d26:	60 81       	ld	r22, Z
    2d28:	71 81       	ldd	r23, Z+1	; 0x01
    2d2a:	82 81       	ldd	r24, Z+2	; 0x02
    2d2c:	93 81       	ldd	r25, Z+3	; 0x03
    2d2e:	20 e0       	ldi	r18, 0x00	; 0
    2d30:	3f ef       	ldi	r19, 0xFF	; 255
    2d32:	4f e7       	ldi	r20, 0x7F	; 127
    2d34:	57 e4       	ldi	r21, 0x47	; 71
    2d36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d3a:	18 16       	cp	r1, r24
    2d3c:	0c f0       	brlt	.+2      	; 0x2d40 <main+0x1b9e>
    2d3e:	43 c0       	rjmp	.+134    	; 0x2dc6 <main+0x1c24>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d40:	fe 01       	movw	r30, r28
    2d42:	ef 5a       	subi	r30, 0xAF	; 175
    2d44:	ff 4f       	sbci	r31, 0xFF	; 255
    2d46:	60 81       	ld	r22, Z
    2d48:	71 81       	ldd	r23, Z+1	; 0x01
    2d4a:	82 81       	ldd	r24, Z+2	; 0x02
    2d4c:	93 81       	ldd	r25, Z+3	; 0x03
    2d4e:	20 e0       	ldi	r18, 0x00	; 0
    2d50:	30 e0       	ldi	r19, 0x00	; 0
    2d52:	40 e2       	ldi	r20, 0x20	; 32
    2d54:	51 e4       	ldi	r21, 0x41	; 65
    2d56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d5a:	dc 01       	movw	r26, r24
    2d5c:	cb 01       	movw	r24, r22
    2d5e:	8e 01       	movw	r16, r28
    2d60:	05 5b       	subi	r16, 0xB5	; 181
    2d62:	1f 4f       	sbci	r17, 0xFF	; 255
    2d64:	bc 01       	movw	r22, r24
    2d66:	cd 01       	movw	r24, r26
    2d68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d6c:	dc 01       	movw	r26, r24
    2d6e:	cb 01       	movw	r24, r22
    2d70:	f8 01       	movw	r30, r16
    2d72:	91 83       	std	Z+1, r25	; 0x01
    2d74:	80 83       	st	Z, r24
    2d76:	1f c0       	rjmp	.+62     	; 0x2db6 <main+0x1c14>
    2d78:	fe 01       	movw	r30, r28
    2d7a:	e7 5b       	subi	r30, 0xB7	; 183
    2d7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7e:	80 e9       	ldi	r24, 0x90	; 144
    2d80:	91 e0       	ldi	r25, 0x01	; 1
    2d82:	91 83       	std	Z+1, r25	; 0x01
    2d84:	80 83       	st	Z, r24
    2d86:	fe 01       	movw	r30, r28
    2d88:	e7 5b       	subi	r30, 0xB7	; 183
    2d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d8c:	80 81       	ld	r24, Z
    2d8e:	91 81       	ldd	r25, Z+1	; 0x01
    2d90:	01 97       	sbiw	r24, 0x01	; 1
    2d92:	f1 f7       	brne	.-4      	; 0x2d90 <main+0x1bee>
    2d94:	fe 01       	movw	r30, r28
    2d96:	e7 5b       	subi	r30, 0xB7	; 183
    2d98:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9a:	91 83       	std	Z+1, r25	; 0x01
    2d9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d9e:	de 01       	movw	r26, r28
    2da0:	a5 5b       	subi	r26, 0xB5	; 181
    2da2:	bf 4f       	sbci	r27, 0xFF	; 255
    2da4:	fe 01       	movw	r30, r28
    2da6:	e5 5b       	subi	r30, 0xB5	; 181
    2da8:	ff 4f       	sbci	r31, 0xFF	; 255
    2daa:	80 81       	ld	r24, Z
    2dac:	91 81       	ldd	r25, Z+1	; 0x01
    2dae:	01 97       	sbiw	r24, 0x01	; 1
    2db0:	11 96       	adiw	r26, 0x01	; 1
    2db2:	9c 93       	st	X, r25
    2db4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2db6:	fe 01       	movw	r30, r28
    2db8:	e5 5b       	subi	r30, 0xB5	; 181
    2dba:	ff 4f       	sbci	r31, 0xFF	; 255
    2dbc:	80 81       	ld	r24, Z
    2dbe:	91 81       	ldd	r25, Z+1	; 0x01
    2dc0:	00 97       	sbiw	r24, 0x00	; 0
    2dc2:	d1 f6       	brne	.-76     	; 0x2d78 <main+0x1bd6>
    2dc4:	27 c0       	rjmp	.+78     	; 0x2e14 <main+0x1c72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2dc6:	8e 01       	movw	r16, r28
    2dc8:	05 5b       	subi	r16, 0xB5	; 181
    2dca:	1f 4f       	sbci	r17, 0xFF	; 255
    2dcc:	fe 01       	movw	r30, r28
    2dce:	e3 5b       	subi	r30, 0xB3	; 179
    2dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd2:	60 81       	ld	r22, Z
    2dd4:	71 81       	ldd	r23, Z+1	; 0x01
    2dd6:	82 81       	ldd	r24, Z+2	; 0x02
    2dd8:	93 81       	ldd	r25, Z+3	; 0x03
    2dda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dde:	dc 01       	movw	r26, r24
    2de0:	cb 01       	movw	r24, r22
    2de2:	f8 01       	movw	r30, r16
    2de4:	91 83       	std	Z+1, r25	; 0x01
    2de6:	80 83       	st	Z, r24
    2de8:	de 01       	movw	r26, r28
    2dea:	a9 5b       	subi	r26, 0xB9	; 185
    2dec:	bf 4f       	sbci	r27, 0xFF	; 255
    2dee:	fe 01       	movw	r30, r28
    2df0:	e5 5b       	subi	r30, 0xB5	; 181
    2df2:	ff 4f       	sbci	r31, 0xFF	; 255
    2df4:	80 81       	ld	r24, Z
    2df6:	91 81       	ldd	r25, Z+1	; 0x01
    2df8:	8d 93       	st	X+, r24
    2dfa:	9c 93       	st	X, r25
    2dfc:	fe 01       	movw	r30, r28
    2dfe:	e9 5b       	subi	r30, 0xB9	; 185
    2e00:	ff 4f       	sbci	r31, 0xFF	; 255
    2e02:	80 81       	ld	r24, Z
    2e04:	91 81       	ldd	r25, Z+1	; 0x01
    2e06:	01 97       	sbiw	r24, 0x01	; 1
    2e08:	f1 f7       	brne	.-4      	; 0x2e06 <main+0x1c64>
    2e0a:	fe 01       	movw	r30, r28
    2e0c:	e9 5b       	subi	r30, 0xB9	; 185
    2e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e10:	91 83       	std	Z+1, r25	; 0x01
    2e12:	80 83       	st	Z, r24

   	_delay_ms(500);

   	LED_ON(DIO_PORTD,PIN3);
    2e14:	83 e0       	ldi	r24, 0x03	; 3
    2e16:	63 e0       	ldi	r22, 0x03	; 3
    2e18:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    2e1c:	fe 01       	movw	r30, r28
    2e1e:	ed 5b       	subi	r30, 0xBD	; 189
    2e20:	ff 4f       	sbci	r31, 0xFF	; 255
    2e22:	80 e0       	ldi	r24, 0x00	; 0
    2e24:	90 e0       	ldi	r25, 0x00	; 0
    2e26:	aa ef       	ldi	r26, 0xFA	; 250
    2e28:	b3 e4       	ldi	r27, 0x43	; 67
    2e2a:	80 83       	st	Z, r24
    2e2c:	91 83       	std	Z+1, r25	; 0x01
    2e2e:	a2 83       	std	Z+2, r26	; 0x02
    2e30:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e32:	8e 01       	movw	r16, r28
    2e34:	01 5c       	subi	r16, 0xC1	; 193
    2e36:	1f 4f       	sbci	r17, 0xFF	; 255
    2e38:	fe 01       	movw	r30, r28
    2e3a:	ed 5b       	subi	r30, 0xBD	; 189
    2e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3e:	60 81       	ld	r22, Z
    2e40:	71 81       	ldd	r23, Z+1	; 0x01
    2e42:	82 81       	ldd	r24, Z+2	; 0x02
    2e44:	93 81       	ldd	r25, Z+3	; 0x03
    2e46:	20 e0       	ldi	r18, 0x00	; 0
    2e48:	30 e0       	ldi	r19, 0x00	; 0
    2e4a:	4a e7       	ldi	r20, 0x7A	; 122
    2e4c:	55 e4       	ldi	r21, 0x45	; 69
    2e4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e52:	dc 01       	movw	r26, r24
    2e54:	cb 01       	movw	r24, r22
    2e56:	f8 01       	movw	r30, r16
    2e58:	80 83       	st	Z, r24
    2e5a:	91 83       	std	Z+1, r25	; 0x01
    2e5c:	a2 83       	std	Z+2, r26	; 0x02
    2e5e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e60:	fe 01       	movw	r30, r28
    2e62:	ff 96       	adiw	r30, 0x3f	; 63
    2e64:	60 81       	ld	r22, Z
    2e66:	71 81       	ldd	r23, Z+1	; 0x01
    2e68:	82 81       	ldd	r24, Z+2	; 0x02
    2e6a:	93 81       	ldd	r25, Z+3	; 0x03
    2e6c:	20 e0       	ldi	r18, 0x00	; 0
    2e6e:	30 e0       	ldi	r19, 0x00	; 0
    2e70:	40 e8       	ldi	r20, 0x80	; 128
    2e72:	5f e3       	ldi	r21, 0x3F	; 63
    2e74:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e78:	88 23       	and	r24, r24
    2e7a:	2c f4       	brge	.+10     	; 0x2e86 <main+0x1ce4>
		__ticks = 1;
    2e7c:	81 e0       	ldi	r24, 0x01	; 1
    2e7e:	90 e0       	ldi	r25, 0x00	; 0
    2e80:	9e af       	std	Y+62, r25	; 0x3e
    2e82:	8d af       	std	Y+61, r24	; 0x3d
    2e84:	46 c0       	rjmp	.+140    	; 0x2f12 <main+0x1d70>
	else if (__tmp > 65535)
    2e86:	fe 01       	movw	r30, r28
    2e88:	ff 96       	adiw	r30, 0x3f	; 63
    2e8a:	60 81       	ld	r22, Z
    2e8c:	71 81       	ldd	r23, Z+1	; 0x01
    2e8e:	82 81       	ldd	r24, Z+2	; 0x02
    2e90:	93 81       	ldd	r25, Z+3	; 0x03
    2e92:	20 e0       	ldi	r18, 0x00	; 0
    2e94:	3f ef       	ldi	r19, 0xFF	; 255
    2e96:	4f e7       	ldi	r20, 0x7F	; 127
    2e98:	57 e4       	ldi	r21, 0x47	; 71
    2e9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e9e:	18 16       	cp	r1, r24
    2ea0:	64 f5       	brge	.+88     	; 0x2efa <main+0x1d58>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ea2:	fe 01       	movw	r30, r28
    2ea4:	ed 5b       	subi	r30, 0xBD	; 189
    2ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea8:	60 81       	ld	r22, Z
    2eaa:	71 81       	ldd	r23, Z+1	; 0x01
    2eac:	82 81       	ldd	r24, Z+2	; 0x02
    2eae:	93 81       	ldd	r25, Z+3	; 0x03
    2eb0:	20 e0       	ldi	r18, 0x00	; 0
    2eb2:	30 e0       	ldi	r19, 0x00	; 0
    2eb4:	40 e2       	ldi	r20, 0x20	; 32
    2eb6:	51 e4       	ldi	r21, 0x41	; 65
    2eb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ebc:	dc 01       	movw	r26, r24
    2ebe:	cb 01       	movw	r24, r22
    2ec0:	bc 01       	movw	r22, r24
    2ec2:	cd 01       	movw	r24, r26
    2ec4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ec8:	dc 01       	movw	r26, r24
    2eca:	cb 01       	movw	r24, r22
    2ecc:	9e af       	std	Y+62, r25	; 0x3e
    2ece:	8d af       	std	Y+61, r24	; 0x3d
    2ed0:	0f c0       	rjmp	.+30     	; 0x2ef0 <main+0x1d4e>
    2ed2:	80 e9       	ldi	r24, 0x90	; 144
    2ed4:	91 e0       	ldi	r25, 0x01	; 1
    2ed6:	9c af       	std	Y+60, r25	; 0x3c
    2ed8:	8b af       	std	Y+59, r24	; 0x3b
    2eda:	8b ad       	ldd	r24, Y+59	; 0x3b
    2edc:	9c ad       	ldd	r25, Y+60	; 0x3c
    2ede:	01 97       	sbiw	r24, 0x01	; 1
    2ee0:	f1 f7       	brne	.-4      	; 0x2ede <main+0x1d3c>
    2ee2:	9c af       	std	Y+60, r25	; 0x3c
    2ee4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ee6:	8d ad       	ldd	r24, Y+61	; 0x3d
    2ee8:	9e ad       	ldd	r25, Y+62	; 0x3e
    2eea:	01 97       	sbiw	r24, 0x01	; 1
    2eec:	9e af       	std	Y+62, r25	; 0x3e
    2eee:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ef0:	8d ad       	ldd	r24, Y+61	; 0x3d
    2ef2:	9e ad       	ldd	r25, Y+62	; 0x3e
    2ef4:	00 97       	sbiw	r24, 0x00	; 0
    2ef6:	69 f7       	brne	.-38     	; 0x2ed2 <main+0x1d30>
    2ef8:	16 c0       	rjmp	.+44     	; 0x2f26 <main+0x1d84>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2efa:	fe 01       	movw	r30, r28
    2efc:	ff 96       	adiw	r30, 0x3f	; 63
    2efe:	60 81       	ld	r22, Z
    2f00:	71 81       	ldd	r23, Z+1	; 0x01
    2f02:	82 81       	ldd	r24, Z+2	; 0x02
    2f04:	93 81       	ldd	r25, Z+3	; 0x03
    2f06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f0a:	dc 01       	movw	r26, r24
    2f0c:	cb 01       	movw	r24, r22
    2f0e:	9e af       	std	Y+62, r25	; 0x3e
    2f10:	8d af       	std	Y+61, r24	; 0x3d
    2f12:	8d ad       	ldd	r24, Y+61	; 0x3d
    2f14:	9e ad       	ldd	r25, Y+62	; 0x3e
    2f16:	9a af       	std	Y+58, r25	; 0x3a
    2f18:	89 af       	std	Y+57, r24	; 0x39
    2f1a:	89 ad       	ldd	r24, Y+57	; 0x39
    2f1c:	9a ad       	ldd	r25, Y+58	; 0x3a
    2f1e:	01 97       	sbiw	r24, 0x01	; 1
    2f20:	f1 f7       	brne	.-4      	; 0x2f1e <main+0x1d7c>
    2f22:	9a af       	std	Y+58, r25	; 0x3a
    2f24:	89 af       	std	Y+57, r24	; 0x39
   	_delay_ms(500);
   	LED_ON(DIO_PORTC,PIN7);
    2f26:	82 e0       	ldi	r24, 0x02	; 2
    2f28:	67 e0       	ldi	r22, 0x07	; 7
    2f2a:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    2f2e:	80 e0       	ldi	r24, 0x00	; 0
    2f30:	90 e0       	ldi	r25, 0x00	; 0
    2f32:	aa ef       	ldi	r26, 0xFA	; 250
    2f34:	b3 e4       	ldi	r27, 0x43	; 67
    2f36:	8d ab       	std	Y+53, r24	; 0x35
    2f38:	9e ab       	std	Y+54, r25	; 0x36
    2f3a:	af ab       	std	Y+55, r26	; 0x37
    2f3c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f3e:	6d a9       	ldd	r22, Y+53	; 0x35
    2f40:	7e a9       	ldd	r23, Y+54	; 0x36
    2f42:	8f a9       	ldd	r24, Y+55	; 0x37
    2f44:	98 ad       	ldd	r25, Y+56	; 0x38
    2f46:	20 e0       	ldi	r18, 0x00	; 0
    2f48:	30 e0       	ldi	r19, 0x00	; 0
    2f4a:	4a e7       	ldi	r20, 0x7A	; 122
    2f4c:	55 e4       	ldi	r21, 0x45	; 69
    2f4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f52:	dc 01       	movw	r26, r24
    2f54:	cb 01       	movw	r24, r22
    2f56:	89 ab       	std	Y+49, r24	; 0x31
    2f58:	9a ab       	std	Y+50, r25	; 0x32
    2f5a:	ab ab       	std	Y+51, r26	; 0x33
    2f5c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2f5e:	69 a9       	ldd	r22, Y+49	; 0x31
    2f60:	7a a9       	ldd	r23, Y+50	; 0x32
    2f62:	8b a9       	ldd	r24, Y+51	; 0x33
    2f64:	9c a9       	ldd	r25, Y+52	; 0x34
    2f66:	20 e0       	ldi	r18, 0x00	; 0
    2f68:	30 e0       	ldi	r19, 0x00	; 0
    2f6a:	40 e8       	ldi	r20, 0x80	; 128
    2f6c:	5f e3       	ldi	r21, 0x3F	; 63
    2f6e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f72:	88 23       	and	r24, r24
    2f74:	2c f4       	brge	.+10     	; 0x2f80 <main+0x1dde>
		__ticks = 1;
    2f76:	81 e0       	ldi	r24, 0x01	; 1
    2f78:	90 e0       	ldi	r25, 0x00	; 0
    2f7a:	98 ab       	std	Y+48, r25	; 0x30
    2f7c:	8f a7       	std	Y+47, r24	; 0x2f
    2f7e:	3f c0       	rjmp	.+126    	; 0x2ffe <main+0x1e5c>
	else if (__tmp > 65535)
    2f80:	69 a9       	ldd	r22, Y+49	; 0x31
    2f82:	7a a9       	ldd	r23, Y+50	; 0x32
    2f84:	8b a9       	ldd	r24, Y+51	; 0x33
    2f86:	9c a9       	ldd	r25, Y+52	; 0x34
    2f88:	20 e0       	ldi	r18, 0x00	; 0
    2f8a:	3f ef       	ldi	r19, 0xFF	; 255
    2f8c:	4f e7       	ldi	r20, 0x7F	; 127
    2f8e:	57 e4       	ldi	r21, 0x47	; 71
    2f90:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f94:	18 16       	cp	r1, r24
    2f96:	4c f5       	brge	.+82     	; 0x2fea <main+0x1e48>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f98:	6d a9       	ldd	r22, Y+53	; 0x35
    2f9a:	7e a9       	ldd	r23, Y+54	; 0x36
    2f9c:	8f a9       	ldd	r24, Y+55	; 0x37
    2f9e:	98 ad       	ldd	r25, Y+56	; 0x38
    2fa0:	20 e0       	ldi	r18, 0x00	; 0
    2fa2:	30 e0       	ldi	r19, 0x00	; 0
    2fa4:	40 e2       	ldi	r20, 0x20	; 32
    2fa6:	51 e4       	ldi	r21, 0x41	; 65
    2fa8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fac:	dc 01       	movw	r26, r24
    2fae:	cb 01       	movw	r24, r22
    2fb0:	bc 01       	movw	r22, r24
    2fb2:	cd 01       	movw	r24, r26
    2fb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fb8:	dc 01       	movw	r26, r24
    2fba:	cb 01       	movw	r24, r22
    2fbc:	98 ab       	std	Y+48, r25	; 0x30
    2fbe:	8f a7       	std	Y+47, r24	; 0x2f
    2fc0:	0f c0       	rjmp	.+30     	; 0x2fe0 <main+0x1e3e>
    2fc2:	80 e9       	ldi	r24, 0x90	; 144
    2fc4:	91 e0       	ldi	r25, 0x01	; 1
    2fc6:	9e a7       	std	Y+46, r25	; 0x2e
    2fc8:	8d a7       	std	Y+45, r24	; 0x2d
    2fca:	8d a5       	ldd	r24, Y+45	; 0x2d
    2fcc:	9e a5       	ldd	r25, Y+46	; 0x2e
    2fce:	01 97       	sbiw	r24, 0x01	; 1
    2fd0:	f1 f7       	brne	.-4      	; 0x2fce <main+0x1e2c>
    2fd2:	9e a7       	std	Y+46, r25	; 0x2e
    2fd4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fd6:	8f a5       	ldd	r24, Y+47	; 0x2f
    2fd8:	98 a9       	ldd	r25, Y+48	; 0x30
    2fda:	01 97       	sbiw	r24, 0x01	; 1
    2fdc:	98 ab       	std	Y+48, r25	; 0x30
    2fde:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fe0:	8f a5       	ldd	r24, Y+47	; 0x2f
    2fe2:	98 a9       	ldd	r25, Y+48	; 0x30
    2fe4:	00 97       	sbiw	r24, 0x00	; 0
    2fe6:	69 f7       	brne	.-38     	; 0x2fc2 <main+0x1e20>
    2fe8:	14 c0       	rjmp	.+40     	; 0x3012 <main+0x1e70>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fea:	69 a9       	ldd	r22, Y+49	; 0x31
    2fec:	7a a9       	ldd	r23, Y+50	; 0x32
    2fee:	8b a9       	ldd	r24, Y+51	; 0x33
    2ff0:	9c a9       	ldd	r25, Y+52	; 0x34
    2ff2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ff6:	dc 01       	movw	r26, r24
    2ff8:	cb 01       	movw	r24, r22
    2ffa:	98 ab       	std	Y+48, r25	; 0x30
    2ffc:	8f a7       	std	Y+47, r24	; 0x2f
    2ffe:	8f a5       	ldd	r24, Y+47	; 0x2f
    3000:	98 a9       	ldd	r25, Y+48	; 0x30
    3002:	9c a7       	std	Y+44, r25	; 0x2c
    3004:	8b a7       	std	Y+43, r24	; 0x2b
    3006:	8b a5       	ldd	r24, Y+43	; 0x2b
    3008:	9c a5       	ldd	r25, Y+44	; 0x2c
    300a:	01 97       	sbiw	r24, 0x01	; 1
    300c:	f1 f7       	brne	.-4      	; 0x300a <main+0x1e68>
    300e:	9c a7       	std	Y+44, r25	; 0x2c
    3010:	8b a7       	std	Y+43, r24	; 0x2b
   	_delay_ms(500);
   	LED_ON(DIO_PORTC ,PIN2);
    3012:	82 e0       	ldi	r24, 0x02	; 2
    3014:	62 e0       	ldi	r22, 0x02	; 2
    3016:	0e 94 9b 05 	call	0xb36	; 0xb36 <LED_ON>
    301a:	80 e0       	ldi	r24, 0x00	; 0
    301c:	90 e0       	ldi	r25, 0x00	; 0
    301e:	aa ef       	ldi	r26, 0xFA	; 250
    3020:	b3 e4       	ldi	r27, 0x43	; 67
    3022:	8f a3       	std	Y+39, r24	; 0x27
    3024:	98 a7       	std	Y+40, r25	; 0x28
    3026:	a9 a7       	std	Y+41, r26	; 0x29
    3028:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    302a:	6f a1       	ldd	r22, Y+39	; 0x27
    302c:	78 a5       	ldd	r23, Y+40	; 0x28
    302e:	89 a5       	ldd	r24, Y+41	; 0x29
    3030:	9a a5       	ldd	r25, Y+42	; 0x2a
    3032:	20 e0       	ldi	r18, 0x00	; 0
    3034:	30 e0       	ldi	r19, 0x00	; 0
    3036:	4a e7       	ldi	r20, 0x7A	; 122
    3038:	55 e4       	ldi	r21, 0x45	; 69
    303a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    303e:	dc 01       	movw	r26, r24
    3040:	cb 01       	movw	r24, r22
    3042:	8b a3       	std	Y+35, r24	; 0x23
    3044:	9c a3       	std	Y+36, r25	; 0x24
    3046:	ad a3       	std	Y+37, r26	; 0x25
    3048:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    304a:	6b a1       	ldd	r22, Y+35	; 0x23
    304c:	7c a1       	ldd	r23, Y+36	; 0x24
    304e:	8d a1       	ldd	r24, Y+37	; 0x25
    3050:	9e a1       	ldd	r25, Y+38	; 0x26
    3052:	20 e0       	ldi	r18, 0x00	; 0
    3054:	30 e0       	ldi	r19, 0x00	; 0
    3056:	40 e8       	ldi	r20, 0x80	; 128
    3058:	5f e3       	ldi	r21, 0x3F	; 63
    305a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    305e:	88 23       	and	r24, r24
    3060:	2c f4       	brge	.+10     	; 0x306c <main+0x1eca>
		__ticks = 1;
    3062:	81 e0       	ldi	r24, 0x01	; 1
    3064:	90 e0       	ldi	r25, 0x00	; 0
    3066:	9a a3       	std	Y+34, r25	; 0x22
    3068:	89 a3       	std	Y+33, r24	; 0x21
    306a:	3f c0       	rjmp	.+126    	; 0x30ea <main+0x1f48>
	else if (__tmp > 65535)
    306c:	6b a1       	ldd	r22, Y+35	; 0x23
    306e:	7c a1       	ldd	r23, Y+36	; 0x24
    3070:	8d a1       	ldd	r24, Y+37	; 0x25
    3072:	9e a1       	ldd	r25, Y+38	; 0x26
    3074:	20 e0       	ldi	r18, 0x00	; 0
    3076:	3f ef       	ldi	r19, 0xFF	; 255
    3078:	4f e7       	ldi	r20, 0x7F	; 127
    307a:	57 e4       	ldi	r21, 0x47	; 71
    307c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3080:	18 16       	cp	r1, r24
    3082:	4c f5       	brge	.+82     	; 0x30d6 <main+0x1f34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3084:	6f a1       	ldd	r22, Y+39	; 0x27
    3086:	78 a5       	ldd	r23, Y+40	; 0x28
    3088:	89 a5       	ldd	r24, Y+41	; 0x29
    308a:	9a a5       	ldd	r25, Y+42	; 0x2a
    308c:	20 e0       	ldi	r18, 0x00	; 0
    308e:	30 e0       	ldi	r19, 0x00	; 0
    3090:	40 e2       	ldi	r20, 0x20	; 32
    3092:	51 e4       	ldi	r21, 0x41	; 65
    3094:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3098:	dc 01       	movw	r26, r24
    309a:	cb 01       	movw	r24, r22
    309c:	bc 01       	movw	r22, r24
    309e:	cd 01       	movw	r24, r26
    30a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30a4:	dc 01       	movw	r26, r24
    30a6:	cb 01       	movw	r24, r22
    30a8:	9a a3       	std	Y+34, r25	; 0x22
    30aa:	89 a3       	std	Y+33, r24	; 0x21
    30ac:	0f c0       	rjmp	.+30     	; 0x30cc <main+0x1f2a>
    30ae:	80 e9       	ldi	r24, 0x90	; 144
    30b0:	91 e0       	ldi	r25, 0x01	; 1
    30b2:	98 a3       	std	Y+32, r25	; 0x20
    30b4:	8f 8f       	std	Y+31, r24	; 0x1f
    30b6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    30b8:	98 a1       	ldd	r25, Y+32	; 0x20
    30ba:	01 97       	sbiw	r24, 0x01	; 1
    30bc:	f1 f7       	brne	.-4      	; 0x30ba <main+0x1f18>
    30be:	98 a3       	std	Y+32, r25	; 0x20
    30c0:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30c2:	89 a1       	ldd	r24, Y+33	; 0x21
    30c4:	9a a1       	ldd	r25, Y+34	; 0x22
    30c6:	01 97       	sbiw	r24, 0x01	; 1
    30c8:	9a a3       	std	Y+34, r25	; 0x22
    30ca:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30cc:	89 a1       	ldd	r24, Y+33	; 0x21
    30ce:	9a a1       	ldd	r25, Y+34	; 0x22
    30d0:	00 97       	sbiw	r24, 0x00	; 0
    30d2:	69 f7       	brne	.-38     	; 0x30ae <main+0x1f0c>
    30d4:	14 c0       	rjmp	.+40     	; 0x30fe <main+0x1f5c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30d6:	6b a1       	ldd	r22, Y+35	; 0x23
    30d8:	7c a1       	ldd	r23, Y+36	; 0x24
    30da:	8d a1       	ldd	r24, Y+37	; 0x25
    30dc:	9e a1       	ldd	r25, Y+38	; 0x26
    30de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30e2:	dc 01       	movw	r26, r24
    30e4:	cb 01       	movw	r24, r22
    30e6:	9a a3       	std	Y+34, r25	; 0x22
    30e8:	89 a3       	std	Y+33, r24	; 0x21
    30ea:	89 a1       	ldd	r24, Y+33	; 0x21
    30ec:	9a a1       	ldd	r25, Y+34	; 0x22
    30ee:	9e 8f       	std	Y+30, r25	; 0x1e
    30f0:	8d 8f       	std	Y+29, r24	; 0x1d
    30f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    30f4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    30f6:	01 97       	sbiw	r24, 0x01	; 1
    30f8:	f1 f7       	brne	.-4      	; 0x30f6 <main+0x1f54>
    30fa:	9e 8f       	std	Y+30, r25	; 0x1e
    30fc:	8d 8f       	std	Y+29, r24	; 0x1d
   	_delay_ms(500);

   	LED_OFF(DIO_PORTD,PIN3);
    30fe:	83 e0       	ldi	r24, 0x03	; 3
    3100:	63 e0       	ldi	r22, 0x03	; 3
    3102:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    3106:	80 e0       	ldi	r24, 0x00	; 0
    3108:	90 e0       	ldi	r25, 0x00	; 0
    310a:	aa ef       	ldi	r26, 0xFA	; 250
    310c:	b3 e4       	ldi	r27, 0x43	; 67
    310e:	89 8f       	std	Y+25, r24	; 0x19
    3110:	9a 8f       	std	Y+26, r25	; 0x1a
    3112:	ab 8f       	std	Y+27, r26	; 0x1b
    3114:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3116:	69 8d       	ldd	r22, Y+25	; 0x19
    3118:	7a 8d       	ldd	r23, Y+26	; 0x1a
    311a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    311c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    311e:	20 e0       	ldi	r18, 0x00	; 0
    3120:	30 e0       	ldi	r19, 0x00	; 0
    3122:	4a e7       	ldi	r20, 0x7A	; 122
    3124:	55 e4       	ldi	r21, 0x45	; 69
    3126:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    312a:	dc 01       	movw	r26, r24
    312c:	cb 01       	movw	r24, r22
    312e:	8d 8b       	std	Y+21, r24	; 0x15
    3130:	9e 8b       	std	Y+22, r25	; 0x16
    3132:	af 8b       	std	Y+23, r26	; 0x17
    3134:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3136:	6d 89       	ldd	r22, Y+21	; 0x15
    3138:	7e 89       	ldd	r23, Y+22	; 0x16
    313a:	8f 89       	ldd	r24, Y+23	; 0x17
    313c:	98 8d       	ldd	r25, Y+24	; 0x18
    313e:	20 e0       	ldi	r18, 0x00	; 0
    3140:	30 e0       	ldi	r19, 0x00	; 0
    3142:	40 e8       	ldi	r20, 0x80	; 128
    3144:	5f e3       	ldi	r21, 0x3F	; 63
    3146:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    314a:	88 23       	and	r24, r24
    314c:	2c f4       	brge	.+10     	; 0x3158 <main+0x1fb6>
		__ticks = 1;
    314e:	81 e0       	ldi	r24, 0x01	; 1
    3150:	90 e0       	ldi	r25, 0x00	; 0
    3152:	9c 8b       	std	Y+20, r25	; 0x14
    3154:	8b 8b       	std	Y+19, r24	; 0x13
    3156:	3f c0       	rjmp	.+126    	; 0x31d6 <main+0x2034>
	else if (__tmp > 65535)
    3158:	6d 89       	ldd	r22, Y+21	; 0x15
    315a:	7e 89       	ldd	r23, Y+22	; 0x16
    315c:	8f 89       	ldd	r24, Y+23	; 0x17
    315e:	98 8d       	ldd	r25, Y+24	; 0x18
    3160:	20 e0       	ldi	r18, 0x00	; 0
    3162:	3f ef       	ldi	r19, 0xFF	; 255
    3164:	4f e7       	ldi	r20, 0x7F	; 127
    3166:	57 e4       	ldi	r21, 0x47	; 71
    3168:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    316c:	18 16       	cp	r1, r24
    316e:	4c f5       	brge	.+82     	; 0x31c2 <main+0x2020>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3170:	69 8d       	ldd	r22, Y+25	; 0x19
    3172:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3174:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3176:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3178:	20 e0       	ldi	r18, 0x00	; 0
    317a:	30 e0       	ldi	r19, 0x00	; 0
    317c:	40 e2       	ldi	r20, 0x20	; 32
    317e:	51 e4       	ldi	r21, 0x41	; 65
    3180:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3184:	dc 01       	movw	r26, r24
    3186:	cb 01       	movw	r24, r22
    3188:	bc 01       	movw	r22, r24
    318a:	cd 01       	movw	r24, r26
    318c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3190:	dc 01       	movw	r26, r24
    3192:	cb 01       	movw	r24, r22
    3194:	9c 8b       	std	Y+20, r25	; 0x14
    3196:	8b 8b       	std	Y+19, r24	; 0x13
    3198:	0f c0       	rjmp	.+30     	; 0x31b8 <main+0x2016>
    319a:	80 e9       	ldi	r24, 0x90	; 144
    319c:	91 e0       	ldi	r25, 0x01	; 1
    319e:	9a 8b       	std	Y+18, r25	; 0x12
    31a0:	89 8b       	std	Y+17, r24	; 0x11
    31a2:	89 89       	ldd	r24, Y+17	; 0x11
    31a4:	9a 89       	ldd	r25, Y+18	; 0x12
    31a6:	01 97       	sbiw	r24, 0x01	; 1
    31a8:	f1 f7       	brne	.-4      	; 0x31a6 <main+0x2004>
    31aa:	9a 8b       	std	Y+18, r25	; 0x12
    31ac:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ae:	8b 89       	ldd	r24, Y+19	; 0x13
    31b0:	9c 89       	ldd	r25, Y+20	; 0x14
    31b2:	01 97       	sbiw	r24, 0x01	; 1
    31b4:	9c 8b       	std	Y+20, r25	; 0x14
    31b6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31b8:	8b 89       	ldd	r24, Y+19	; 0x13
    31ba:	9c 89       	ldd	r25, Y+20	; 0x14
    31bc:	00 97       	sbiw	r24, 0x00	; 0
    31be:	69 f7       	brne	.-38     	; 0x319a <main+0x1ff8>
    31c0:	14 c0       	rjmp	.+40     	; 0x31ea <main+0x2048>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31c2:	6d 89       	ldd	r22, Y+21	; 0x15
    31c4:	7e 89       	ldd	r23, Y+22	; 0x16
    31c6:	8f 89       	ldd	r24, Y+23	; 0x17
    31c8:	98 8d       	ldd	r25, Y+24	; 0x18
    31ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31ce:	dc 01       	movw	r26, r24
    31d0:	cb 01       	movw	r24, r22
    31d2:	9c 8b       	std	Y+20, r25	; 0x14
    31d4:	8b 8b       	std	Y+19, r24	; 0x13
    31d6:	8b 89       	ldd	r24, Y+19	; 0x13
    31d8:	9c 89       	ldd	r25, Y+20	; 0x14
    31da:	98 8b       	std	Y+16, r25	; 0x10
    31dc:	8f 87       	std	Y+15, r24	; 0x0f
    31de:	8f 85       	ldd	r24, Y+15	; 0x0f
    31e0:	98 89       	ldd	r25, Y+16	; 0x10
    31e2:	01 97       	sbiw	r24, 0x01	; 1
    31e4:	f1 f7       	brne	.-4      	; 0x31e2 <main+0x2040>
    31e6:	98 8b       	std	Y+16, r25	; 0x10
    31e8:	8f 87       	std	Y+15, r24	; 0x0f
   	_delay_ms(500);
   	LED_OFF(DIO_PORTC,PIN7);
    31ea:	82 e0       	ldi	r24, 0x02	; 2
    31ec:	67 e0       	ldi	r22, 0x07	; 7
    31ee:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    31f2:	80 e0       	ldi	r24, 0x00	; 0
    31f4:	90 e0       	ldi	r25, 0x00	; 0
    31f6:	aa ef       	ldi	r26, 0xFA	; 250
    31f8:	b3 e4       	ldi	r27, 0x43	; 67
    31fa:	8b 87       	std	Y+11, r24	; 0x0b
    31fc:	9c 87       	std	Y+12, r25	; 0x0c
    31fe:	ad 87       	std	Y+13, r26	; 0x0d
    3200:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3202:	6b 85       	ldd	r22, Y+11	; 0x0b
    3204:	7c 85       	ldd	r23, Y+12	; 0x0c
    3206:	8d 85       	ldd	r24, Y+13	; 0x0d
    3208:	9e 85       	ldd	r25, Y+14	; 0x0e
    320a:	20 e0       	ldi	r18, 0x00	; 0
    320c:	30 e0       	ldi	r19, 0x00	; 0
    320e:	4a e7       	ldi	r20, 0x7A	; 122
    3210:	55 e4       	ldi	r21, 0x45	; 69
    3212:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3216:	dc 01       	movw	r26, r24
    3218:	cb 01       	movw	r24, r22
    321a:	8f 83       	std	Y+7, r24	; 0x07
    321c:	98 87       	std	Y+8, r25	; 0x08
    321e:	a9 87       	std	Y+9, r26	; 0x09
    3220:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3222:	6f 81       	ldd	r22, Y+7	; 0x07
    3224:	78 85       	ldd	r23, Y+8	; 0x08
    3226:	89 85       	ldd	r24, Y+9	; 0x09
    3228:	9a 85       	ldd	r25, Y+10	; 0x0a
    322a:	20 e0       	ldi	r18, 0x00	; 0
    322c:	30 e0       	ldi	r19, 0x00	; 0
    322e:	40 e8       	ldi	r20, 0x80	; 128
    3230:	5f e3       	ldi	r21, 0x3F	; 63
    3232:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3236:	88 23       	and	r24, r24
    3238:	2c f4       	brge	.+10     	; 0x3244 <main+0x20a2>
		__ticks = 1;
    323a:	81 e0       	ldi	r24, 0x01	; 1
    323c:	90 e0       	ldi	r25, 0x00	; 0
    323e:	9e 83       	std	Y+6, r25	; 0x06
    3240:	8d 83       	std	Y+5, r24	; 0x05
    3242:	3f c0       	rjmp	.+126    	; 0x32c2 <main+0x2120>
	else if (__tmp > 65535)
    3244:	6f 81       	ldd	r22, Y+7	; 0x07
    3246:	78 85       	ldd	r23, Y+8	; 0x08
    3248:	89 85       	ldd	r24, Y+9	; 0x09
    324a:	9a 85       	ldd	r25, Y+10	; 0x0a
    324c:	20 e0       	ldi	r18, 0x00	; 0
    324e:	3f ef       	ldi	r19, 0xFF	; 255
    3250:	4f e7       	ldi	r20, 0x7F	; 127
    3252:	57 e4       	ldi	r21, 0x47	; 71
    3254:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3258:	18 16       	cp	r1, r24
    325a:	4c f5       	brge	.+82     	; 0x32ae <main+0x210c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    325c:	6b 85       	ldd	r22, Y+11	; 0x0b
    325e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3260:	8d 85       	ldd	r24, Y+13	; 0x0d
    3262:	9e 85       	ldd	r25, Y+14	; 0x0e
    3264:	20 e0       	ldi	r18, 0x00	; 0
    3266:	30 e0       	ldi	r19, 0x00	; 0
    3268:	40 e2       	ldi	r20, 0x20	; 32
    326a:	51 e4       	ldi	r21, 0x41	; 65
    326c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3270:	dc 01       	movw	r26, r24
    3272:	cb 01       	movw	r24, r22
    3274:	bc 01       	movw	r22, r24
    3276:	cd 01       	movw	r24, r26
    3278:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    327c:	dc 01       	movw	r26, r24
    327e:	cb 01       	movw	r24, r22
    3280:	9e 83       	std	Y+6, r25	; 0x06
    3282:	8d 83       	std	Y+5, r24	; 0x05
    3284:	0f c0       	rjmp	.+30     	; 0x32a4 <main+0x2102>
    3286:	80 e9       	ldi	r24, 0x90	; 144
    3288:	91 e0       	ldi	r25, 0x01	; 1
    328a:	9c 83       	std	Y+4, r25	; 0x04
    328c:	8b 83       	std	Y+3, r24	; 0x03
    328e:	8b 81       	ldd	r24, Y+3	; 0x03
    3290:	9c 81       	ldd	r25, Y+4	; 0x04
    3292:	01 97       	sbiw	r24, 0x01	; 1
    3294:	f1 f7       	brne	.-4      	; 0x3292 <main+0x20f0>
    3296:	9c 83       	std	Y+4, r25	; 0x04
    3298:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    329a:	8d 81       	ldd	r24, Y+5	; 0x05
    329c:	9e 81       	ldd	r25, Y+6	; 0x06
    329e:	01 97       	sbiw	r24, 0x01	; 1
    32a0:	9e 83       	std	Y+6, r25	; 0x06
    32a2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32a4:	8d 81       	ldd	r24, Y+5	; 0x05
    32a6:	9e 81       	ldd	r25, Y+6	; 0x06
    32a8:	00 97       	sbiw	r24, 0x00	; 0
    32aa:	69 f7       	brne	.-38     	; 0x3286 <main+0x20e4>
    32ac:	14 c0       	rjmp	.+40     	; 0x32d6 <main+0x2134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32ae:	6f 81       	ldd	r22, Y+7	; 0x07
    32b0:	78 85       	ldd	r23, Y+8	; 0x08
    32b2:	89 85       	ldd	r24, Y+9	; 0x09
    32b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    32b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32ba:	dc 01       	movw	r26, r24
    32bc:	cb 01       	movw	r24, r22
    32be:	9e 83       	std	Y+6, r25	; 0x06
    32c0:	8d 83       	std	Y+5, r24	; 0x05
    32c2:	8d 81       	ldd	r24, Y+5	; 0x05
    32c4:	9e 81       	ldd	r25, Y+6	; 0x06
    32c6:	9a 83       	std	Y+2, r25	; 0x02
    32c8:	89 83       	std	Y+1, r24	; 0x01
    32ca:	89 81       	ldd	r24, Y+1	; 0x01
    32cc:	9a 81       	ldd	r25, Y+2	; 0x02
    32ce:	01 97       	sbiw	r24, 0x01	; 1
    32d0:	f1 f7       	brne	.-4      	; 0x32ce <main+0x212c>
    32d2:	9a 83       	std	Y+2, r25	; 0x02
    32d4:	89 83       	std	Y+1, r24	; 0x01
   	_delay_ms(500);
   	LED_OFF(DIO_PORTC,PIN2);
    32d6:	82 e0       	ldi	r24, 0x02	; 2
    32d8:	62 e0       	ldi	r22, 0x02	; 2
    32da:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    32de:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <main+0x24>

}
else
{
	LED_OFF(DIO_PORTC,PIN2);
    32e2:	82 e0       	ldi	r24, 0x02	; 2
    32e4:	62 e0       	ldi	r22, 0x02	; 2
    32e6:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
   	LED_OFF(DIO_PORTC,PIN7);
    32ea:	82 e0       	ldi	r24, 0x02	; 2
    32ec:	67 e0       	ldi	r22, 0x07	; 7
    32ee:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
   	LED_OFF(DIO_PORTD,PIN3);
    32f2:	83 e0       	ldi	r24, 0x03	; 3
    32f4:	63 e0       	ldi	r22, 0x03	; 3
    32f6:	0e 94 b2 05 	call	0xb64	; 0xb64 <LED_OFF>
    32fa:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <main+0x24>

000032fe <DIO_SetPinDirection>:


uint8 DIO_SetPinDirection(uint8 copy_port,
		                 uint8 copy_pin,
						 uint8 copy_direction)
{
    32fe:	df 93       	push	r29
    3300:	cf 93       	push	r28
    3302:	cd b7       	in	r28, 0x3d	; 61
    3304:	de b7       	in	r29, 0x3e	; 62
    3306:	28 97       	sbiw	r28, 0x08	; 8
    3308:	0f b6       	in	r0, 0x3f	; 63
    330a:	f8 94       	cli
    330c:	de bf       	out	0x3e, r29	; 62
    330e:	0f be       	out	0x3f, r0	; 63
    3310:	cd bf       	out	0x3d, r28	; 61
    3312:	8a 83       	std	Y+2, r24	; 0x02
    3314:	6b 83       	std	Y+3, r22	; 0x03
    3316:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_errorStatus = OK;
    3318:	19 82       	std	Y+1, r1	; 0x01
   if (copy_pin <= PIN7)
    331a:	8b 81       	ldd	r24, Y+3	; 0x03
    331c:	88 30       	cpi	r24, 0x08	; 8
    331e:	08 f0       	brcs	.+2      	; 0x3322 <DIO_SetPinDirection+0x24>
    3320:	f4 c0       	rjmp	.+488    	; 0x350a <DIO_SetPinDirection+0x20c>
   {
	   if (copy_direction == OUTPUT)
    3322:	8c 81       	ldd	r24, Y+4	; 0x04
    3324:	81 30       	cpi	r24, 0x01	; 1
    3326:	09 f0       	breq	.+2      	; 0x332a <DIO_SetPinDirection+0x2c>
    3328:	72 c0       	rjmp	.+228    	; 0x340e <DIO_SetPinDirection+0x110>
	   {
		   switch(copy_port)
    332a:	8a 81       	ldd	r24, Y+2	; 0x02
    332c:	28 2f       	mov	r18, r24
    332e:	30 e0       	ldi	r19, 0x00	; 0
    3330:	38 87       	std	Y+8, r19	; 0x08
    3332:	2f 83       	std	Y+7, r18	; 0x07
    3334:	8f 81       	ldd	r24, Y+7	; 0x07
    3336:	98 85       	ldd	r25, Y+8	; 0x08
    3338:	81 30       	cpi	r24, 0x01	; 1
    333a:	91 05       	cpc	r25, r1
    333c:	49 f1       	breq	.+82     	; 0x3390 <DIO_SetPinDirection+0x92>
    333e:	2f 81       	ldd	r18, Y+7	; 0x07
    3340:	38 85       	ldd	r19, Y+8	; 0x08
    3342:	22 30       	cpi	r18, 0x02	; 2
    3344:	31 05       	cpc	r19, r1
    3346:	2c f4       	brge	.+10     	; 0x3352 <DIO_SetPinDirection+0x54>
    3348:	8f 81       	ldd	r24, Y+7	; 0x07
    334a:	98 85       	ldd	r25, Y+8	; 0x08
    334c:	00 97       	sbiw	r24, 0x00	; 0
    334e:	61 f0       	breq	.+24     	; 0x3368 <DIO_SetPinDirection+0x6a>
    3350:	5b c0       	rjmp	.+182    	; 0x3408 <DIO_SetPinDirection+0x10a>
    3352:	2f 81       	ldd	r18, Y+7	; 0x07
    3354:	38 85       	ldd	r19, Y+8	; 0x08
    3356:	22 30       	cpi	r18, 0x02	; 2
    3358:	31 05       	cpc	r19, r1
    335a:	71 f1       	breq	.+92     	; 0x33b8 <DIO_SetPinDirection+0xba>
    335c:	8f 81       	ldd	r24, Y+7	; 0x07
    335e:	98 85       	ldd	r25, Y+8	; 0x08
    3360:	83 30       	cpi	r24, 0x03	; 3
    3362:	91 05       	cpc	r25, r1
    3364:	e9 f1       	breq	.+122    	; 0x33e0 <DIO_SetPinDirection+0xe2>
    3366:	50 c0       	rjmp	.+160    	; 0x3408 <DIO_SetPinDirection+0x10a>
		   {
		          case DIO_PORTA : SET_BIT(DDRA,copy_pin); break;
    3368:	aa e3       	ldi	r26, 0x3A	; 58
    336a:	b0 e0       	ldi	r27, 0x00	; 0
    336c:	ea e3       	ldi	r30, 0x3A	; 58
    336e:	f0 e0       	ldi	r31, 0x00	; 0
    3370:	80 81       	ld	r24, Z
    3372:	48 2f       	mov	r20, r24
    3374:	8b 81       	ldd	r24, Y+3	; 0x03
    3376:	28 2f       	mov	r18, r24
    3378:	30 e0       	ldi	r19, 0x00	; 0
    337a:	81 e0       	ldi	r24, 0x01	; 1
    337c:	90 e0       	ldi	r25, 0x00	; 0
    337e:	02 2e       	mov	r0, r18
    3380:	02 c0       	rjmp	.+4      	; 0x3386 <DIO_SetPinDirection+0x88>
    3382:	88 0f       	add	r24, r24
    3384:	99 1f       	adc	r25, r25
    3386:	0a 94       	dec	r0
    3388:	e2 f7       	brpl	.-8      	; 0x3382 <DIO_SetPinDirection+0x84>
    338a:	84 2b       	or	r24, r20
    338c:	8c 93       	st	X, r24
    338e:	bf c0       	rjmp	.+382    	; 0x350e <DIO_SetPinDirection+0x210>
		          case DIO_PORTB : SET_BIT(DDRB,copy_pin); break;
    3390:	a7 e3       	ldi	r26, 0x37	; 55
    3392:	b0 e0       	ldi	r27, 0x00	; 0
    3394:	e7 e3       	ldi	r30, 0x37	; 55
    3396:	f0 e0       	ldi	r31, 0x00	; 0
    3398:	80 81       	ld	r24, Z
    339a:	48 2f       	mov	r20, r24
    339c:	8b 81       	ldd	r24, Y+3	; 0x03
    339e:	28 2f       	mov	r18, r24
    33a0:	30 e0       	ldi	r19, 0x00	; 0
    33a2:	81 e0       	ldi	r24, 0x01	; 1
    33a4:	90 e0       	ldi	r25, 0x00	; 0
    33a6:	02 2e       	mov	r0, r18
    33a8:	02 c0       	rjmp	.+4      	; 0x33ae <DIO_SetPinDirection+0xb0>
    33aa:	88 0f       	add	r24, r24
    33ac:	99 1f       	adc	r25, r25
    33ae:	0a 94       	dec	r0
    33b0:	e2 f7       	brpl	.-8      	; 0x33aa <DIO_SetPinDirection+0xac>
    33b2:	84 2b       	or	r24, r20
    33b4:	8c 93       	st	X, r24
    33b6:	ab c0       	rjmp	.+342    	; 0x350e <DIO_SetPinDirection+0x210>
		          case DIO_PORTC : SET_BIT(DDRC,copy_pin); break;
    33b8:	a4 e3       	ldi	r26, 0x34	; 52
    33ba:	b0 e0       	ldi	r27, 0x00	; 0
    33bc:	e4 e3       	ldi	r30, 0x34	; 52
    33be:	f0 e0       	ldi	r31, 0x00	; 0
    33c0:	80 81       	ld	r24, Z
    33c2:	48 2f       	mov	r20, r24
    33c4:	8b 81       	ldd	r24, Y+3	; 0x03
    33c6:	28 2f       	mov	r18, r24
    33c8:	30 e0       	ldi	r19, 0x00	; 0
    33ca:	81 e0       	ldi	r24, 0x01	; 1
    33cc:	90 e0       	ldi	r25, 0x00	; 0
    33ce:	02 2e       	mov	r0, r18
    33d0:	02 c0       	rjmp	.+4      	; 0x33d6 <DIO_SetPinDirection+0xd8>
    33d2:	88 0f       	add	r24, r24
    33d4:	99 1f       	adc	r25, r25
    33d6:	0a 94       	dec	r0
    33d8:	e2 f7       	brpl	.-8      	; 0x33d2 <DIO_SetPinDirection+0xd4>
    33da:	84 2b       	or	r24, r20
    33dc:	8c 93       	st	X, r24
    33de:	97 c0       	rjmp	.+302    	; 0x350e <DIO_SetPinDirection+0x210>
		          case DIO_PORTD : SET_BIT(DDRD,copy_pin); break;
    33e0:	a1 e3       	ldi	r26, 0x31	; 49
    33e2:	b0 e0       	ldi	r27, 0x00	; 0
    33e4:	e1 e3       	ldi	r30, 0x31	; 49
    33e6:	f0 e0       	ldi	r31, 0x00	; 0
    33e8:	80 81       	ld	r24, Z
    33ea:	48 2f       	mov	r20, r24
    33ec:	8b 81       	ldd	r24, Y+3	; 0x03
    33ee:	28 2f       	mov	r18, r24
    33f0:	30 e0       	ldi	r19, 0x00	; 0
    33f2:	81 e0       	ldi	r24, 0x01	; 1
    33f4:	90 e0       	ldi	r25, 0x00	; 0
    33f6:	02 2e       	mov	r0, r18
    33f8:	02 c0       	rjmp	.+4      	; 0x33fe <DIO_SetPinDirection+0x100>
    33fa:	88 0f       	add	r24, r24
    33fc:	99 1f       	adc	r25, r25
    33fe:	0a 94       	dec	r0
    3400:	e2 f7       	brpl	.-8      	; 0x33fa <DIO_SetPinDirection+0xfc>
    3402:	84 2b       	or	r24, r20
    3404:	8c 93       	st	X, r24
    3406:	83 c0       	rjmp	.+262    	; 0x350e <DIO_SetPinDirection+0x210>
		          default :local_errorStatus= NOK ; break ;
    3408:	81 e0       	ldi	r24, 0x01	; 1
    340a:	89 83       	std	Y+1, r24	; 0x01
    340c:	80 c0       	rjmp	.+256    	; 0x350e <DIO_SetPinDirection+0x210>
		   }

	   }
	   else if (copy_direction == INPUT)
    340e:	8c 81       	ldd	r24, Y+4	; 0x04
    3410:	88 23       	and	r24, r24
    3412:	09 f0       	breq	.+2      	; 0x3416 <DIO_SetPinDirection+0x118>
    3414:	77 c0       	rjmp	.+238    	; 0x3504 <DIO_SetPinDirection+0x206>
	   {
		   switch(copy_port)
    3416:	8a 81       	ldd	r24, Y+2	; 0x02
    3418:	28 2f       	mov	r18, r24
    341a:	30 e0       	ldi	r19, 0x00	; 0
    341c:	3e 83       	std	Y+6, r19	; 0x06
    341e:	2d 83       	std	Y+5, r18	; 0x05
    3420:	8d 81       	ldd	r24, Y+5	; 0x05
    3422:	9e 81       	ldd	r25, Y+6	; 0x06
    3424:	81 30       	cpi	r24, 0x01	; 1
    3426:	91 05       	cpc	r25, r1
    3428:	59 f1       	breq	.+86     	; 0x3480 <DIO_SetPinDirection+0x182>
    342a:	2d 81       	ldd	r18, Y+5	; 0x05
    342c:	3e 81       	ldd	r19, Y+6	; 0x06
    342e:	22 30       	cpi	r18, 0x02	; 2
    3430:	31 05       	cpc	r19, r1
    3432:	2c f4       	brge	.+10     	; 0x343e <DIO_SetPinDirection+0x140>
    3434:	8d 81       	ldd	r24, Y+5	; 0x05
    3436:	9e 81       	ldd	r25, Y+6	; 0x06
    3438:	00 97       	sbiw	r24, 0x00	; 0
    343a:	69 f0       	breq	.+26     	; 0x3456 <DIO_SetPinDirection+0x158>
    343c:	60 c0       	rjmp	.+192    	; 0x34fe <DIO_SetPinDirection+0x200>
    343e:	2d 81       	ldd	r18, Y+5	; 0x05
    3440:	3e 81       	ldd	r19, Y+6	; 0x06
    3442:	22 30       	cpi	r18, 0x02	; 2
    3444:	31 05       	cpc	r19, r1
    3446:	89 f1       	breq	.+98     	; 0x34aa <DIO_SetPinDirection+0x1ac>
    3448:	8d 81       	ldd	r24, Y+5	; 0x05
    344a:	9e 81       	ldd	r25, Y+6	; 0x06
    344c:	83 30       	cpi	r24, 0x03	; 3
    344e:	91 05       	cpc	r25, r1
    3450:	09 f4       	brne	.+2      	; 0x3454 <DIO_SetPinDirection+0x156>
    3452:	40 c0       	rjmp	.+128    	; 0x34d4 <DIO_SetPinDirection+0x1d6>
    3454:	54 c0       	rjmp	.+168    	; 0x34fe <DIO_SetPinDirection+0x200>
		  		   {
		  		   case DIO_PORTA : CLEAR_BIT(DDRA,copy_pin); break;
    3456:	aa e3       	ldi	r26, 0x3A	; 58
    3458:	b0 e0       	ldi	r27, 0x00	; 0
    345a:	ea e3       	ldi	r30, 0x3A	; 58
    345c:	f0 e0       	ldi	r31, 0x00	; 0
    345e:	80 81       	ld	r24, Z
    3460:	48 2f       	mov	r20, r24
    3462:	8b 81       	ldd	r24, Y+3	; 0x03
    3464:	28 2f       	mov	r18, r24
    3466:	30 e0       	ldi	r19, 0x00	; 0
    3468:	81 e0       	ldi	r24, 0x01	; 1
    346a:	90 e0       	ldi	r25, 0x00	; 0
    346c:	02 2e       	mov	r0, r18
    346e:	02 c0       	rjmp	.+4      	; 0x3474 <DIO_SetPinDirection+0x176>
    3470:	88 0f       	add	r24, r24
    3472:	99 1f       	adc	r25, r25
    3474:	0a 94       	dec	r0
    3476:	e2 f7       	brpl	.-8      	; 0x3470 <DIO_SetPinDirection+0x172>
    3478:	80 95       	com	r24
    347a:	84 23       	and	r24, r20
    347c:	8c 93       	st	X, r24
    347e:	47 c0       	rjmp	.+142    	; 0x350e <DIO_SetPinDirection+0x210>
		  		   case DIO_PORTB : CLEAR_BIT(DDRB,copy_pin); break;
    3480:	a7 e3       	ldi	r26, 0x37	; 55
    3482:	b0 e0       	ldi	r27, 0x00	; 0
    3484:	e7 e3       	ldi	r30, 0x37	; 55
    3486:	f0 e0       	ldi	r31, 0x00	; 0
    3488:	80 81       	ld	r24, Z
    348a:	48 2f       	mov	r20, r24
    348c:	8b 81       	ldd	r24, Y+3	; 0x03
    348e:	28 2f       	mov	r18, r24
    3490:	30 e0       	ldi	r19, 0x00	; 0
    3492:	81 e0       	ldi	r24, 0x01	; 1
    3494:	90 e0       	ldi	r25, 0x00	; 0
    3496:	02 2e       	mov	r0, r18
    3498:	02 c0       	rjmp	.+4      	; 0x349e <DIO_SetPinDirection+0x1a0>
    349a:	88 0f       	add	r24, r24
    349c:	99 1f       	adc	r25, r25
    349e:	0a 94       	dec	r0
    34a0:	e2 f7       	brpl	.-8      	; 0x349a <DIO_SetPinDirection+0x19c>
    34a2:	80 95       	com	r24
    34a4:	84 23       	and	r24, r20
    34a6:	8c 93       	st	X, r24
    34a8:	32 c0       	rjmp	.+100    	; 0x350e <DIO_SetPinDirection+0x210>
		  		   case DIO_PORTC : CLEAR_BIT(DDRC,copy_pin); break;
    34aa:	a4 e3       	ldi	r26, 0x34	; 52
    34ac:	b0 e0       	ldi	r27, 0x00	; 0
    34ae:	e4 e3       	ldi	r30, 0x34	; 52
    34b0:	f0 e0       	ldi	r31, 0x00	; 0
    34b2:	80 81       	ld	r24, Z
    34b4:	48 2f       	mov	r20, r24
    34b6:	8b 81       	ldd	r24, Y+3	; 0x03
    34b8:	28 2f       	mov	r18, r24
    34ba:	30 e0       	ldi	r19, 0x00	; 0
    34bc:	81 e0       	ldi	r24, 0x01	; 1
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	02 2e       	mov	r0, r18
    34c2:	02 c0       	rjmp	.+4      	; 0x34c8 <DIO_SetPinDirection+0x1ca>
    34c4:	88 0f       	add	r24, r24
    34c6:	99 1f       	adc	r25, r25
    34c8:	0a 94       	dec	r0
    34ca:	e2 f7       	brpl	.-8      	; 0x34c4 <DIO_SetPinDirection+0x1c6>
    34cc:	80 95       	com	r24
    34ce:	84 23       	and	r24, r20
    34d0:	8c 93       	st	X, r24
    34d2:	1d c0       	rjmp	.+58     	; 0x350e <DIO_SetPinDirection+0x210>
		  		   case DIO_PORTD : CLEAR_BIT(DDRD,copy_pin); break;
    34d4:	a1 e3       	ldi	r26, 0x31	; 49
    34d6:	b0 e0       	ldi	r27, 0x00	; 0
    34d8:	e1 e3       	ldi	r30, 0x31	; 49
    34da:	f0 e0       	ldi	r31, 0x00	; 0
    34dc:	80 81       	ld	r24, Z
    34de:	48 2f       	mov	r20, r24
    34e0:	8b 81       	ldd	r24, Y+3	; 0x03
    34e2:	28 2f       	mov	r18, r24
    34e4:	30 e0       	ldi	r19, 0x00	; 0
    34e6:	81 e0       	ldi	r24, 0x01	; 1
    34e8:	90 e0       	ldi	r25, 0x00	; 0
    34ea:	02 2e       	mov	r0, r18
    34ec:	02 c0       	rjmp	.+4      	; 0x34f2 <DIO_SetPinDirection+0x1f4>
    34ee:	88 0f       	add	r24, r24
    34f0:	99 1f       	adc	r25, r25
    34f2:	0a 94       	dec	r0
    34f4:	e2 f7       	brpl	.-8      	; 0x34ee <DIO_SetPinDirection+0x1f0>
    34f6:	80 95       	com	r24
    34f8:	84 23       	and	r24, r20
    34fa:	8c 93       	st	X, r24
    34fc:	08 c0       	rjmp	.+16     	; 0x350e <DIO_SetPinDirection+0x210>
		  		   default :local_errorStatus= NOK ; break ;
    34fe:	81 e0       	ldi	r24, 0x01	; 1
    3500:	89 83       	std	Y+1, r24	; 0x01
    3502:	05 c0       	rjmp	.+10     	; 0x350e <DIO_SetPinDirection+0x210>
		  		   }

	   }
	   else
	   {
		   local_errorStatus=NOK ;
    3504:	81 e0       	ldi	r24, 0x01	; 1
    3506:	89 83       	std	Y+1, r24	; 0x01
    3508:	02 c0       	rjmp	.+4      	; 0x350e <DIO_SetPinDirection+0x210>
	   }
   }
   else
   {
	   local_errorStatus=NOK ;
    350a:	81 e0       	ldi	r24, 0x01	; 1
    350c:	89 83       	std	Y+1, r24	; 0x01





   return local_errorStatus;
    350e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3510:	28 96       	adiw	r28, 0x08	; 8
    3512:	0f b6       	in	r0, 0x3f	; 63
    3514:	f8 94       	cli
    3516:	de bf       	out	0x3e, r29	; 62
    3518:	0f be       	out	0x3f, r0	; 63
    351a:	cd bf       	out	0x3d, r28	; 61
    351c:	cf 91       	pop	r28
    351e:	df 91       	pop	r29
    3520:	08 95       	ret

00003522 <DIO_SetPinValue>:

uint8 DIO_SetPinValue(uint8 copy_port,
		                 uint8 copy_pin,
						 uint8 copy_value)

{
    3522:	df 93       	push	r29
    3524:	cf 93       	push	r28
    3526:	cd b7       	in	r28, 0x3d	; 61
    3528:	de b7       	in	r29, 0x3e	; 62
    352a:	28 97       	sbiw	r28, 0x08	; 8
    352c:	0f b6       	in	r0, 0x3f	; 63
    352e:	f8 94       	cli
    3530:	de bf       	out	0x3e, r29	; 62
    3532:	0f be       	out	0x3f, r0	; 63
    3534:	cd bf       	out	0x3d, r28	; 61
    3536:	8a 83       	std	Y+2, r24	; 0x02
    3538:	6b 83       	std	Y+3, r22	; 0x03
    353a:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_errorStatus =OK;
    353c:	19 82       	std	Y+1, r1	; 0x01
 if (copy_pin<= PIN7 )
    353e:	8b 81       	ldd	r24, Y+3	; 0x03
    3540:	88 30       	cpi	r24, 0x08	; 8
    3542:	08 f0       	brcs	.+2      	; 0x3546 <DIO_SetPinValue+0x24>
    3544:	f4 c0       	rjmp	.+488    	; 0x372e <DIO_SetPinValue+0x20c>
 {
	 if (copy_value == OUTPUT_HIGH)
    3546:	8c 81       	ldd	r24, Y+4	; 0x04
    3548:	81 30       	cpi	r24, 0x01	; 1
    354a:	09 f0       	breq	.+2      	; 0x354e <DIO_SetPinValue+0x2c>
    354c:	72 c0       	rjmp	.+228    	; 0x3632 <DIO_SetPinValue+0x110>
		   {
			   switch(copy_port)
    354e:	8a 81       	ldd	r24, Y+2	; 0x02
    3550:	28 2f       	mov	r18, r24
    3552:	30 e0       	ldi	r19, 0x00	; 0
    3554:	38 87       	std	Y+8, r19	; 0x08
    3556:	2f 83       	std	Y+7, r18	; 0x07
    3558:	8f 81       	ldd	r24, Y+7	; 0x07
    355a:	98 85       	ldd	r25, Y+8	; 0x08
    355c:	81 30       	cpi	r24, 0x01	; 1
    355e:	91 05       	cpc	r25, r1
    3560:	49 f1       	breq	.+82     	; 0x35b4 <DIO_SetPinValue+0x92>
    3562:	2f 81       	ldd	r18, Y+7	; 0x07
    3564:	38 85       	ldd	r19, Y+8	; 0x08
    3566:	22 30       	cpi	r18, 0x02	; 2
    3568:	31 05       	cpc	r19, r1
    356a:	2c f4       	brge	.+10     	; 0x3576 <DIO_SetPinValue+0x54>
    356c:	8f 81       	ldd	r24, Y+7	; 0x07
    356e:	98 85       	ldd	r25, Y+8	; 0x08
    3570:	00 97       	sbiw	r24, 0x00	; 0
    3572:	61 f0       	breq	.+24     	; 0x358c <DIO_SetPinValue+0x6a>
    3574:	5b c0       	rjmp	.+182    	; 0x362c <DIO_SetPinValue+0x10a>
    3576:	2f 81       	ldd	r18, Y+7	; 0x07
    3578:	38 85       	ldd	r19, Y+8	; 0x08
    357a:	22 30       	cpi	r18, 0x02	; 2
    357c:	31 05       	cpc	r19, r1
    357e:	71 f1       	breq	.+92     	; 0x35dc <DIO_SetPinValue+0xba>
    3580:	8f 81       	ldd	r24, Y+7	; 0x07
    3582:	98 85       	ldd	r25, Y+8	; 0x08
    3584:	83 30       	cpi	r24, 0x03	; 3
    3586:	91 05       	cpc	r25, r1
    3588:	e9 f1       	breq	.+122    	; 0x3604 <DIO_SetPinValue+0xe2>
    358a:	50 c0       	rjmp	.+160    	; 0x362c <DIO_SetPinValue+0x10a>
			   {
			          case DIO_PORTA : SET_BIT(PORTA,copy_pin); break;
    358c:	ab e3       	ldi	r26, 0x3B	; 59
    358e:	b0 e0       	ldi	r27, 0x00	; 0
    3590:	eb e3       	ldi	r30, 0x3B	; 59
    3592:	f0 e0       	ldi	r31, 0x00	; 0
    3594:	80 81       	ld	r24, Z
    3596:	48 2f       	mov	r20, r24
    3598:	8b 81       	ldd	r24, Y+3	; 0x03
    359a:	28 2f       	mov	r18, r24
    359c:	30 e0       	ldi	r19, 0x00	; 0
    359e:	81 e0       	ldi	r24, 0x01	; 1
    35a0:	90 e0       	ldi	r25, 0x00	; 0
    35a2:	02 2e       	mov	r0, r18
    35a4:	02 c0       	rjmp	.+4      	; 0x35aa <DIO_SetPinValue+0x88>
    35a6:	88 0f       	add	r24, r24
    35a8:	99 1f       	adc	r25, r25
    35aa:	0a 94       	dec	r0
    35ac:	e2 f7       	brpl	.-8      	; 0x35a6 <DIO_SetPinValue+0x84>
    35ae:	84 2b       	or	r24, r20
    35b0:	8c 93       	st	X, r24
    35b2:	bf c0       	rjmp	.+382    	; 0x3732 <DIO_SetPinValue+0x210>
			          case DIO_PORTB : SET_BIT(PORTB,copy_pin); break;
    35b4:	a8 e3       	ldi	r26, 0x38	; 56
    35b6:	b0 e0       	ldi	r27, 0x00	; 0
    35b8:	e8 e3       	ldi	r30, 0x38	; 56
    35ba:	f0 e0       	ldi	r31, 0x00	; 0
    35bc:	80 81       	ld	r24, Z
    35be:	48 2f       	mov	r20, r24
    35c0:	8b 81       	ldd	r24, Y+3	; 0x03
    35c2:	28 2f       	mov	r18, r24
    35c4:	30 e0       	ldi	r19, 0x00	; 0
    35c6:	81 e0       	ldi	r24, 0x01	; 1
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	02 2e       	mov	r0, r18
    35cc:	02 c0       	rjmp	.+4      	; 0x35d2 <DIO_SetPinValue+0xb0>
    35ce:	88 0f       	add	r24, r24
    35d0:	99 1f       	adc	r25, r25
    35d2:	0a 94       	dec	r0
    35d4:	e2 f7       	brpl	.-8      	; 0x35ce <DIO_SetPinValue+0xac>
    35d6:	84 2b       	or	r24, r20
    35d8:	8c 93       	st	X, r24
    35da:	ab c0       	rjmp	.+342    	; 0x3732 <DIO_SetPinValue+0x210>
			          case DIO_PORTC : SET_BIT(PORTC,copy_pin); break;
    35dc:	a5 e3       	ldi	r26, 0x35	; 53
    35de:	b0 e0       	ldi	r27, 0x00	; 0
    35e0:	e5 e3       	ldi	r30, 0x35	; 53
    35e2:	f0 e0       	ldi	r31, 0x00	; 0
    35e4:	80 81       	ld	r24, Z
    35e6:	48 2f       	mov	r20, r24
    35e8:	8b 81       	ldd	r24, Y+3	; 0x03
    35ea:	28 2f       	mov	r18, r24
    35ec:	30 e0       	ldi	r19, 0x00	; 0
    35ee:	81 e0       	ldi	r24, 0x01	; 1
    35f0:	90 e0       	ldi	r25, 0x00	; 0
    35f2:	02 2e       	mov	r0, r18
    35f4:	02 c0       	rjmp	.+4      	; 0x35fa <DIO_SetPinValue+0xd8>
    35f6:	88 0f       	add	r24, r24
    35f8:	99 1f       	adc	r25, r25
    35fa:	0a 94       	dec	r0
    35fc:	e2 f7       	brpl	.-8      	; 0x35f6 <DIO_SetPinValue+0xd4>
    35fe:	84 2b       	or	r24, r20
    3600:	8c 93       	st	X, r24
    3602:	97 c0       	rjmp	.+302    	; 0x3732 <DIO_SetPinValue+0x210>
			          case DIO_PORTD : SET_BIT(PORTD,copy_pin); break;
    3604:	a2 e3       	ldi	r26, 0x32	; 50
    3606:	b0 e0       	ldi	r27, 0x00	; 0
    3608:	e2 e3       	ldi	r30, 0x32	; 50
    360a:	f0 e0       	ldi	r31, 0x00	; 0
    360c:	80 81       	ld	r24, Z
    360e:	48 2f       	mov	r20, r24
    3610:	8b 81       	ldd	r24, Y+3	; 0x03
    3612:	28 2f       	mov	r18, r24
    3614:	30 e0       	ldi	r19, 0x00	; 0
    3616:	81 e0       	ldi	r24, 0x01	; 1
    3618:	90 e0       	ldi	r25, 0x00	; 0
    361a:	02 2e       	mov	r0, r18
    361c:	02 c0       	rjmp	.+4      	; 0x3622 <DIO_SetPinValue+0x100>
    361e:	88 0f       	add	r24, r24
    3620:	99 1f       	adc	r25, r25
    3622:	0a 94       	dec	r0
    3624:	e2 f7       	brpl	.-8      	; 0x361e <DIO_SetPinValue+0xfc>
    3626:	84 2b       	or	r24, r20
    3628:	8c 93       	st	X, r24
    362a:	83 c0       	rjmp	.+262    	; 0x3732 <DIO_SetPinValue+0x210>
			          default :local_errorStatus=NOK ; break ;
    362c:	81 e0       	ldi	r24, 0x01	; 1
    362e:	89 83       	std	Y+1, r24	; 0x01
    3630:	80 c0       	rjmp	.+256    	; 0x3732 <DIO_SetPinValue+0x210>
			   }

		   }
		   else if (copy_value == OUTPUT_LOW)
    3632:	8c 81       	ldd	r24, Y+4	; 0x04
    3634:	88 23       	and	r24, r24
    3636:	09 f0       	breq	.+2      	; 0x363a <DIO_SetPinValue+0x118>
    3638:	77 c0       	rjmp	.+238    	; 0x3728 <DIO_SetPinValue+0x206>
		   {
			   switch(copy_port)
    363a:	8a 81       	ldd	r24, Y+2	; 0x02
    363c:	28 2f       	mov	r18, r24
    363e:	30 e0       	ldi	r19, 0x00	; 0
    3640:	3e 83       	std	Y+6, r19	; 0x06
    3642:	2d 83       	std	Y+5, r18	; 0x05
    3644:	8d 81       	ldd	r24, Y+5	; 0x05
    3646:	9e 81       	ldd	r25, Y+6	; 0x06
    3648:	81 30       	cpi	r24, 0x01	; 1
    364a:	91 05       	cpc	r25, r1
    364c:	59 f1       	breq	.+86     	; 0x36a4 <DIO_SetPinValue+0x182>
    364e:	2d 81       	ldd	r18, Y+5	; 0x05
    3650:	3e 81       	ldd	r19, Y+6	; 0x06
    3652:	22 30       	cpi	r18, 0x02	; 2
    3654:	31 05       	cpc	r19, r1
    3656:	2c f4       	brge	.+10     	; 0x3662 <DIO_SetPinValue+0x140>
    3658:	8d 81       	ldd	r24, Y+5	; 0x05
    365a:	9e 81       	ldd	r25, Y+6	; 0x06
    365c:	00 97       	sbiw	r24, 0x00	; 0
    365e:	69 f0       	breq	.+26     	; 0x367a <DIO_SetPinValue+0x158>
    3660:	60 c0       	rjmp	.+192    	; 0x3722 <DIO_SetPinValue+0x200>
    3662:	2d 81       	ldd	r18, Y+5	; 0x05
    3664:	3e 81       	ldd	r19, Y+6	; 0x06
    3666:	22 30       	cpi	r18, 0x02	; 2
    3668:	31 05       	cpc	r19, r1
    366a:	89 f1       	breq	.+98     	; 0x36ce <DIO_SetPinValue+0x1ac>
    366c:	8d 81       	ldd	r24, Y+5	; 0x05
    366e:	9e 81       	ldd	r25, Y+6	; 0x06
    3670:	83 30       	cpi	r24, 0x03	; 3
    3672:	91 05       	cpc	r25, r1
    3674:	09 f4       	brne	.+2      	; 0x3678 <DIO_SetPinValue+0x156>
    3676:	40 c0       	rjmp	.+128    	; 0x36f8 <DIO_SetPinValue+0x1d6>
    3678:	54 c0       	rjmp	.+168    	; 0x3722 <DIO_SetPinValue+0x200>
			  		   {
			  		   case DIO_PORTA : CLEAR_BIT(PORTA,copy_pin); break;
    367a:	ab e3       	ldi	r26, 0x3B	; 59
    367c:	b0 e0       	ldi	r27, 0x00	; 0
    367e:	eb e3       	ldi	r30, 0x3B	; 59
    3680:	f0 e0       	ldi	r31, 0x00	; 0
    3682:	80 81       	ld	r24, Z
    3684:	48 2f       	mov	r20, r24
    3686:	8b 81       	ldd	r24, Y+3	; 0x03
    3688:	28 2f       	mov	r18, r24
    368a:	30 e0       	ldi	r19, 0x00	; 0
    368c:	81 e0       	ldi	r24, 0x01	; 1
    368e:	90 e0       	ldi	r25, 0x00	; 0
    3690:	02 2e       	mov	r0, r18
    3692:	02 c0       	rjmp	.+4      	; 0x3698 <DIO_SetPinValue+0x176>
    3694:	88 0f       	add	r24, r24
    3696:	99 1f       	adc	r25, r25
    3698:	0a 94       	dec	r0
    369a:	e2 f7       	brpl	.-8      	; 0x3694 <DIO_SetPinValue+0x172>
    369c:	80 95       	com	r24
    369e:	84 23       	and	r24, r20
    36a0:	8c 93       	st	X, r24
    36a2:	47 c0       	rjmp	.+142    	; 0x3732 <DIO_SetPinValue+0x210>
			  		   case DIO_PORTB : CLEAR_BIT(PORTB,copy_pin); break;
    36a4:	a8 e3       	ldi	r26, 0x38	; 56
    36a6:	b0 e0       	ldi	r27, 0x00	; 0
    36a8:	e8 e3       	ldi	r30, 0x38	; 56
    36aa:	f0 e0       	ldi	r31, 0x00	; 0
    36ac:	80 81       	ld	r24, Z
    36ae:	48 2f       	mov	r20, r24
    36b0:	8b 81       	ldd	r24, Y+3	; 0x03
    36b2:	28 2f       	mov	r18, r24
    36b4:	30 e0       	ldi	r19, 0x00	; 0
    36b6:	81 e0       	ldi	r24, 0x01	; 1
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	02 2e       	mov	r0, r18
    36bc:	02 c0       	rjmp	.+4      	; 0x36c2 <DIO_SetPinValue+0x1a0>
    36be:	88 0f       	add	r24, r24
    36c0:	99 1f       	adc	r25, r25
    36c2:	0a 94       	dec	r0
    36c4:	e2 f7       	brpl	.-8      	; 0x36be <DIO_SetPinValue+0x19c>
    36c6:	80 95       	com	r24
    36c8:	84 23       	and	r24, r20
    36ca:	8c 93       	st	X, r24
    36cc:	32 c0       	rjmp	.+100    	; 0x3732 <DIO_SetPinValue+0x210>
			  		   case DIO_PORTC : CLEAR_BIT(PORTC,copy_pin); break;
    36ce:	a5 e3       	ldi	r26, 0x35	; 53
    36d0:	b0 e0       	ldi	r27, 0x00	; 0
    36d2:	e5 e3       	ldi	r30, 0x35	; 53
    36d4:	f0 e0       	ldi	r31, 0x00	; 0
    36d6:	80 81       	ld	r24, Z
    36d8:	48 2f       	mov	r20, r24
    36da:	8b 81       	ldd	r24, Y+3	; 0x03
    36dc:	28 2f       	mov	r18, r24
    36de:	30 e0       	ldi	r19, 0x00	; 0
    36e0:	81 e0       	ldi	r24, 0x01	; 1
    36e2:	90 e0       	ldi	r25, 0x00	; 0
    36e4:	02 2e       	mov	r0, r18
    36e6:	02 c0       	rjmp	.+4      	; 0x36ec <DIO_SetPinValue+0x1ca>
    36e8:	88 0f       	add	r24, r24
    36ea:	99 1f       	adc	r25, r25
    36ec:	0a 94       	dec	r0
    36ee:	e2 f7       	brpl	.-8      	; 0x36e8 <DIO_SetPinValue+0x1c6>
    36f0:	80 95       	com	r24
    36f2:	84 23       	and	r24, r20
    36f4:	8c 93       	st	X, r24
    36f6:	1d c0       	rjmp	.+58     	; 0x3732 <DIO_SetPinValue+0x210>
			  		   case DIO_PORTD : CLEAR_BIT(PORTD,copy_pin); break;
    36f8:	a2 e3       	ldi	r26, 0x32	; 50
    36fa:	b0 e0       	ldi	r27, 0x00	; 0
    36fc:	e2 e3       	ldi	r30, 0x32	; 50
    36fe:	f0 e0       	ldi	r31, 0x00	; 0
    3700:	80 81       	ld	r24, Z
    3702:	48 2f       	mov	r20, r24
    3704:	8b 81       	ldd	r24, Y+3	; 0x03
    3706:	28 2f       	mov	r18, r24
    3708:	30 e0       	ldi	r19, 0x00	; 0
    370a:	81 e0       	ldi	r24, 0x01	; 1
    370c:	90 e0       	ldi	r25, 0x00	; 0
    370e:	02 2e       	mov	r0, r18
    3710:	02 c0       	rjmp	.+4      	; 0x3716 <DIO_SetPinValue+0x1f4>
    3712:	88 0f       	add	r24, r24
    3714:	99 1f       	adc	r25, r25
    3716:	0a 94       	dec	r0
    3718:	e2 f7       	brpl	.-8      	; 0x3712 <DIO_SetPinValue+0x1f0>
    371a:	80 95       	com	r24
    371c:	84 23       	and	r24, r20
    371e:	8c 93       	st	X, r24
    3720:	08 c0       	rjmp	.+16     	; 0x3732 <DIO_SetPinValue+0x210>
			  		   default :local_errorStatus=NOK ; break ;
    3722:	81 e0       	ldi	r24, 0x01	; 1
    3724:	89 83       	std	Y+1, r24	; 0x01
    3726:	05 c0       	rjmp	.+10     	; 0x3732 <DIO_SetPinValue+0x210>
			  		   }

		   }
		   else
		   {
			   local_errorStatus=NOK ;
    3728:	81 e0       	ldi	r24, 0x01	; 1
    372a:	89 83       	std	Y+1, r24	; 0x01
    372c:	02 c0       	rjmp	.+4      	; 0x3732 <DIO_SetPinValue+0x210>
		   }
 }
 else
 {
	 local_errorStatus=NOK ;
    372e:	81 e0       	ldi	r24, 0x01	; 1
    3730:	89 83       	std	Y+1, r24	; 0x01

 }
return local_errorStatus;
    3732:	89 81       	ldd	r24, Y+1	; 0x01
}
    3734:	28 96       	adiw	r28, 0x08	; 8
    3736:	0f b6       	in	r0, 0x3f	; 63
    3738:	f8 94       	cli
    373a:	de bf       	out	0x3e, r29	; 62
    373c:	0f be       	out	0x3f, r0	; 63
    373e:	cd bf       	out	0x3d, r28	; 61
    3740:	cf 91       	pop	r28
    3742:	df 91       	pop	r29
    3744:	08 95       	ret

00003746 <DIO_SetPortValue>:



uint8 DIO_SetPortValue(uint8 copy_port,
						 uint8 copy_value)
{
    3746:	df 93       	push	r29
    3748:	cf 93       	push	r28
    374a:	00 d0       	rcall	.+0      	; 0x374c <DIO_SetPortValue+0x6>
    374c:	00 d0       	rcall	.+0      	; 0x374e <DIO_SetPortValue+0x8>
    374e:	0f 92       	push	r0
    3750:	cd b7       	in	r28, 0x3d	; 61
    3752:	de b7       	in	r29, 0x3e	; 62
    3754:	8a 83       	std	Y+2, r24	; 0x02
    3756:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorStatus = OK ;
    3758:	19 82       	std	Y+1, r1	; 0x01


		   switch(copy_port)
    375a:	8a 81       	ldd	r24, Y+2	; 0x02
    375c:	28 2f       	mov	r18, r24
    375e:	30 e0       	ldi	r19, 0x00	; 0
    3760:	3d 83       	std	Y+5, r19	; 0x05
    3762:	2c 83       	std	Y+4, r18	; 0x04
    3764:	8c 81       	ldd	r24, Y+4	; 0x04
    3766:	9d 81       	ldd	r25, Y+5	; 0x05
    3768:	81 30       	cpi	r24, 0x01	; 1
    376a:	91 05       	cpc	r25, r1
    376c:	d1 f0       	breq	.+52     	; 0x37a2 <DIO_SetPortValue+0x5c>
    376e:	2c 81       	ldd	r18, Y+4	; 0x04
    3770:	3d 81       	ldd	r19, Y+5	; 0x05
    3772:	22 30       	cpi	r18, 0x02	; 2
    3774:	31 05       	cpc	r19, r1
    3776:	2c f4       	brge	.+10     	; 0x3782 <DIO_SetPortValue+0x3c>
    3778:	8c 81       	ldd	r24, Y+4	; 0x04
    377a:	9d 81       	ldd	r25, Y+5	; 0x05
    377c:	00 97       	sbiw	r24, 0x00	; 0
    377e:	61 f0       	breq	.+24     	; 0x3798 <DIO_SetPortValue+0x52>
    3780:	1f c0       	rjmp	.+62     	; 0x37c0 <DIO_SetPortValue+0x7a>
    3782:	2c 81       	ldd	r18, Y+4	; 0x04
    3784:	3d 81       	ldd	r19, Y+5	; 0x05
    3786:	22 30       	cpi	r18, 0x02	; 2
    3788:	31 05       	cpc	r19, r1
    378a:	81 f0       	breq	.+32     	; 0x37ac <DIO_SetPortValue+0x66>
    378c:	8c 81       	ldd	r24, Y+4	; 0x04
    378e:	9d 81       	ldd	r25, Y+5	; 0x05
    3790:	83 30       	cpi	r24, 0x03	; 3
    3792:	91 05       	cpc	r25, r1
    3794:	81 f0       	breq	.+32     	; 0x37b6 <DIO_SetPortValue+0x70>
    3796:	14 c0       	rjmp	.+40     	; 0x37c0 <DIO_SetPortValue+0x7a>
		   {
		          case DIO_PORTA :  PORTA = copy_value; break;
    3798:	eb e3       	ldi	r30, 0x3B	; 59
    379a:	f0 e0       	ldi	r31, 0x00	; 0
    379c:	8b 81       	ldd	r24, Y+3	; 0x03
    379e:	80 83       	st	Z, r24
    37a0:	11 c0       	rjmp	.+34     	; 0x37c4 <DIO_SetPortValue+0x7e>
		          case DIO_PORTB :  PORTB = copy_value; break;
    37a2:	e8 e3       	ldi	r30, 0x38	; 56
    37a4:	f0 e0       	ldi	r31, 0x00	; 0
    37a6:	8b 81       	ldd	r24, Y+3	; 0x03
    37a8:	80 83       	st	Z, r24
    37aa:	0c c0       	rjmp	.+24     	; 0x37c4 <DIO_SetPortValue+0x7e>
		          case DIO_PORTC :  PORTC = copy_value; break;
    37ac:	e5 e3       	ldi	r30, 0x35	; 53
    37ae:	f0 e0       	ldi	r31, 0x00	; 0
    37b0:	8b 81       	ldd	r24, Y+3	; 0x03
    37b2:	80 83       	st	Z, r24
    37b4:	07 c0       	rjmp	.+14     	; 0x37c4 <DIO_SetPortValue+0x7e>
		          case DIO_PORTD :  PORTD = copy_value; break;
    37b6:	e2 e3       	ldi	r30, 0x32	; 50
    37b8:	f0 e0       	ldi	r31, 0x00	; 0
    37ba:	8b 81       	ldd	r24, Y+3	; 0x03
    37bc:	80 83       	st	Z, r24
    37be:	02 c0       	rjmp	.+4      	; 0x37c4 <DIO_SetPortValue+0x7e>
		          default :local_errorStatus= NOK ; break ;
    37c0:	81 e0       	ldi	r24, 0x01	; 1
    37c2:	89 83       	std	Y+1, r24	; 0x01
		   }




   return local_errorStatus;
    37c4:	89 81       	ldd	r24, Y+1	; 0x01
}
    37c6:	0f 90       	pop	r0
    37c8:	0f 90       	pop	r0
    37ca:	0f 90       	pop	r0
    37cc:	0f 90       	pop	r0
    37ce:	0f 90       	pop	r0
    37d0:	cf 91       	pop	r28
    37d2:	df 91       	pop	r29
    37d4:	08 95       	ret

000037d6 <DIO_SetPortDirection>:



uint8 DIO_SetPortDirection(uint8 copy_port,
						 uint8 copy_direction)
{
    37d6:	df 93       	push	r29
    37d8:	cf 93       	push	r28
    37da:	cd b7       	in	r28, 0x3d	; 61
    37dc:	de b7       	in	r29, 0x3e	; 62
    37de:	27 97       	sbiw	r28, 0x07	; 7
    37e0:	0f b6       	in	r0, 0x3f	; 63
    37e2:	f8 94       	cli
    37e4:	de bf       	out	0x3e, r29	; 62
    37e6:	0f be       	out	0x3f, r0	; 63
    37e8:	cd bf       	out	0x3d, r28	; 61
    37ea:	8a 83       	std	Y+2, r24	; 0x02
    37ec:	6b 83       	std	Y+3, r22	; 0x03
	uint8 local_errorStatus = OK;
    37ee:	19 82       	std	Y+1, r1	; 0x01
   if ( copy_port <= DIO_PORTD)
    37f0:	8a 81       	ldd	r24, Y+2	; 0x02
    37f2:	84 30       	cpi	r24, 0x04	; 4
    37f4:	08 f0       	brcs	.+2      	; 0x37f8 <DIO_SetPortDirection+0x22>
    37f6:	71 c0       	rjmp	.+226    	; 0x38da <DIO_SetPortDirection+0x104>
   {
	   if (copy_direction == OUTPUT)
    37f8:	8b 81       	ldd	r24, Y+3	; 0x03
    37fa:	81 30       	cpi	r24, 0x01	; 1
    37fc:	b1 f5       	brne	.+108    	; 0x386a <DIO_SetPortDirection+0x94>
	   {
		   switch(copy_port)
    37fe:	8a 81       	ldd	r24, Y+2	; 0x02
    3800:	28 2f       	mov	r18, r24
    3802:	30 e0       	ldi	r19, 0x00	; 0
    3804:	3f 83       	std	Y+7, r19	; 0x07
    3806:	2e 83       	std	Y+6, r18	; 0x06
    3808:	8e 81       	ldd	r24, Y+6	; 0x06
    380a:	9f 81       	ldd	r25, Y+7	; 0x07
    380c:	81 30       	cpi	r24, 0x01	; 1
    380e:	91 05       	cpc	r25, r1
    3810:	d1 f0       	breq	.+52     	; 0x3846 <DIO_SetPortDirection+0x70>
    3812:	2e 81       	ldd	r18, Y+6	; 0x06
    3814:	3f 81       	ldd	r19, Y+7	; 0x07
    3816:	22 30       	cpi	r18, 0x02	; 2
    3818:	31 05       	cpc	r19, r1
    381a:	2c f4       	brge	.+10     	; 0x3826 <DIO_SetPortDirection+0x50>
    381c:	8e 81       	ldd	r24, Y+6	; 0x06
    381e:	9f 81       	ldd	r25, Y+7	; 0x07
    3820:	00 97       	sbiw	r24, 0x00	; 0
    3822:	61 f0       	breq	.+24     	; 0x383c <DIO_SetPortDirection+0x66>
    3824:	1f c0       	rjmp	.+62     	; 0x3864 <DIO_SetPortDirection+0x8e>
    3826:	2e 81       	ldd	r18, Y+6	; 0x06
    3828:	3f 81       	ldd	r19, Y+7	; 0x07
    382a:	22 30       	cpi	r18, 0x02	; 2
    382c:	31 05       	cpc	r19, r1
    382e:	81 f0       	breq	.+32     	; 0x3850 <DIO_SetPortDirection+0x7a>
    3830:	8e 81       	ldd	r24, Y+6	; 0x06
    3832:	9f 81       	ldd	r25, Y+7	; 0x07
    3834:	83 30       	cpi	r24, 0x03	; 3
    3836:	91 05       	cpc	r25, r1
    3838:	81 f0       	breq	.+32     	; 0x385a <DIO_SetPortDirection+0x84>
    383a:	14 c0       	rjmp	.+40     	; 0x3864 <DIO_SetPortDirection+0x8e>
		   {
		          case DIO_PORTA :  DDRA = PORT_HIGH  ; break;
    383c:	ea e3       	ldi	r30, 0x3A	; 58
    383e:	f0 e0       	ldi	r31, 0x00	; 0
    3840:	8f ef       	ldi	r24, 0xFF	; 255
    3842:	80 83       	st	Z, r24
    3844:	4c c0       	rjmp	.+152    	; 0x38de <DIO_SetPortDirection+0x108>
		          case DIO_PORTB :  DDRB = PORT_HIGH  ; break;
    3846:	e7 e3       	ldi	r30, 0x37	; 55
    3848:	f0 e0       	ldi	r31, 0x00	; 0
    384a:	8f ef       	ldi	r24, 0xFF	; 255
    384c:	80 83       	st	Z, r24
    384e:	47 c0       	rjmp	.+142    	; 0x38de <DIO_SetPortDirection+0x108>
		          case DIO_PORTC :  DDRC = PORT_HIGH  ; break;
    3850:	e4 e3       	ldi	r30, 0x34	; 52
    3852:	f0 e0       	ldi	r31, 0x00	; 0
    3854:	8f ef       	ldi	r24, 0xFF	; 255
    3856:	80 83       	st	Z, r24
    3858:	42 c0       	rjmp	.+132    	; 0x38de <DIO_SetPortDirection+0x108>
		          case DIO_PORTD :  DDRD = PORT_HIGH  ; break;
    385a:	e1 e3       	ldi	r30, 0x31	; 49
    385c:	f0 e0       	ldi	r31, 0x00	; 0
    385e:	8f ef       	ldi	r24, 0xFF	; 255
    3860:	80 83       	st	Z, r24
    3862:	3d c0       	rjmp	.+122    	; 0x38de <DIO_SetPortDirection+0x108>
		          default :local_errorStatus=NOK ; break ;
    3864:	81 e0       	ldi	r24, 0x01	; 1
    3866:	89 83       	std	Y+1, r24	; 0x01
    3868:	3a c0       	rjmp	.+116    	; 0x38de <DIO_SetPortDirection+0x108>
		   }

	   }
	   else if (copy_direction == INPUT)
    386a:	8b 81       	ldd	r24, Y+3	; 0x03
    386c:	88 23       	and	r24, r24
    386e:	91 f5       	brne	.+100    	; 0x38d4 <DIO_SetPortDirection+0xfe>
	   {
		   switch(copy_port)
    3870:	8a 81       	ldd	r24, Y+2	; 0x02
    3872:	28 2f       	mov	r18, r24
    3874:	30 e0       	ldi	r19, 0x00	; 0
    3876:	3d 83       	std	Y+5, r19	; 0x05
    3878:	2c 83       	std	Y+4, r18	; 0x04
    387a:	8c 81       	ldd	r24, Y+4	; 0x04
    387c:	9d 81       	ldd	r25, Y+5	; 0x05
    387e:	81 30       	cpi	r24, 0x01	; 1
    3880:	91 05       	cpc	r25, r1
    3882:	c9 f0       	breq	.+50     	; 0x38b6 <DIO_SetPortDirection+0xe0>
    3884:	2c 81       	ldd	r18, Y+4	; 0x04
    3886:	3d 81       	ldd	r19, Y+5	; 0x05
    3888:	22 30       	cpi	r18, 0x02	; 2
    388a:	31 05       	cpc	r19, r1
    388c:	2c f4       	brge	.+10     	; 0x3898 <DIO_SetPortDirection+0xc2>
    388e:	8c 81       	ldd	r24, Y+4	; 0x04
    3890:	9d 81       	ldd	r25, Y+5	; 0x05
    3892:	00 97       	sbiw	r24, 0x00	; 0
    3894:	61 f0       	breq	.+24     	; 0x38ae <DIO_SetPortDirection+0xd8>
    3896:	1b c0       	rjmp	.+54     	; 0x38ce <DIO_SetPortDirection+0xf8>
    3898:	2c 81       	ldd	r18, Y+4	; 0x04
    389a:	3d 81       	ldd	r19, Y+5	; 0x05
    389c:	22 30       	cpi	r18, 0x02	; 2
    389e:	31 05       	cpc	r19, r1
    38a0:	71 f0       	breq	.+28     	; 0x38be <DIO_SetPortDirection+0xe8>
    38a2:	8c 81       	ldd	r24, Y+4	; 0x04
    38a4:	9d 81       	ldd	r25, Y+5	; 0x05
    38a6:	83 30       	cpi	r24, 0x03	; 3
    38a8:	91 05       	cpc	r25, r1
    38aa:	69 f0       	breq	.+26     	; 0x38c6 <DIO_SetPortDirection+0xf0>
    38ac:	10 c0       	rjmp	.+32     	; 0x38ce <DIO_SetPortDirection+0xf8>
		  		   {
		  		   case DIO_PORTA : DDRA = PORT_LOW  ; break;
    38ae:	ea e3       	ldi	r30, 0x3A	; 58
    38b0:	f0 e0       	ldi	r31, 0x00	; 0
    38b2:	10 82       	st	Z, r1
    38b4:	14 c0       	rjmp	.+40     	; 0x38de <DIO_SetPortDirection+0x108>
		  		   case DIO_PORTB : DDRB = PORT_LOW  ; break;
    38b6:	e7 e3       	ldi	r30, 0x37	; 55
    38b8:	f0 e0       	ldi	r31, 0x00	; 0
    38ba:	10 82       	st	Z, r1
    38bc:	10 c0       	rjmp	.+32     	; 0x38de <DIO_SetPortDirection+0x108>
		  		   case DIO_PORTC : DDRC = PORT_LOW  ; break;
    38be:	e4 e3       	ldi	r30, 0x34	; 52
    38c0:	f0 e0       	ldi	r31, 0x00	; 0
    38c2:	10 82       	st	Z, r1
    38c4:	0c c0       	rjmp	.+24     	; 0x38de <DIO_SetPortDirection+0x108>
		  		   case DIO_PORTD : DDRD = PORT_LOW  ; break;
    38c6:	e1 e3       	ldi	r30, 0x31	; 49
    38c8:	f0 e0       	ldi	r31, 0x00	; 0
    38ca:	10 82       	st	Z, r1
    38cc:	08 c0       	rjmp	.+16     	; 0x38de <DIO_SetPortDirection+0x108>
		  		   default :local_errorStatus=NOK ; break ;
    38ce:	81 e0       	ldi	r24, 0x01	; 1
    38d0:	89 83       	std	Y+1, r24	; 0x01
    38d2:	05 c0       	rjmp	.+10     	; 0x38de <DIO_SetPortDirection+0x108>
		  		   }

	   }
	   else
	   {
		   local_errorStatus=NOK ;
    38d4:	81 e0       	ldi	r24, 0x01	; 1
    38d6:	89 83       	std	Y+1, r24	; 0x01
    38d8:	02 c0       	rjmp	.+4      	; 0x38de <DIO_SetPortDirection+0x108>
	   }
   }
   else
   {
	   local_errorStatus=NOK ;
    38da:	81 e0       	ldi	r24, 0x01	; 1
    38dc:	89 83       	std	Y+1, r24	; 0x01

   }

   return local_errorStatus;
    38de:	89 81       	ldd	r24, Y+1	; 0x01
}
    38e0:	27 96       	adiw	r28, 0x07	; 7
    38e2:	0f b6       	in	r0, 0x3f	; 63
    38e4:	f8 94       	cli
    38e6:	de bf       	out	0x3e, r29	; 62
    38e8:	0f be       	out	0x3f, r0	; 63
    38ea:	cd bf       	out	0x3d, r28	; 61
    38ec:	cf 91       	pop	r28
    38ee:	df 91       	pop	r29
    38f0:	08 95       	ret

000038f2 <DIO_GetPinValue>:


uint8 DIO_GetPinValue(uint8 copy_port,
						 uint8 copy_pin ,
						 uint8 *copy_pvalue)
{
    38f2:	df 93       	push	r29
    38f4:	cf 93       	push	r28
    38f6:	cd b7       	in	r28, 0x3d	; 61
    38f8:	de b7       	in	r29, 0x3e	; 62
    38fa:	27 97       	sbiw	r28, 0x07	; 7
    38fc:	0f b6       	in	r0, 0x3f	; 63
    38fe:	f8 94       	cli
    3900:	de bf       	out	0x3e, r29	; 62
    3902:	0f be       	out	0x3f, r0	; 63
    3904:	cd bf       	out	0x3d, r28	; 61
    3906:	8a 83       	std	Y+2, r24	; 0x02
    3908:	6b 83       	std	Y+3, r22	; 0x03
    390a:	5d 83       	std	Y+5, r21	; 0x05
    390c:	4c 83       	std	Y+4, r20	; 0x04
	uint8 local_errorStatus =OK;
    390e:	19 82       	std	Y+1, r1	; 0x01
 if (copy_pin<= PIN7 && (copy_pvalue != NULL))
    3910:	8b 81       	ldd	r24, Y+3	; 0x03
    3912:	88 30       	cpi	r24, 0x08	; 8
    3914:	08 f0       	brcs	.+2      	; 0x3918 <DIO_GetPinValue+0x26>
    3916:	79 c0       	rjmp	.+242    	; 0x3a0a <DIO_GetPinValue+0x118>
    3918:	8c 81       	ldd	r24, Y+4	; 0x04
    391a:	9d 81       	ldd	r25, Y+5	; 0x05
    391c:	00 97       	sbiw	r24, 0x00	; 0
    391e:	09 f4       	brne	.+2      	; 0x3922 <DIO_GetPinValue+0x30>
    3920:	74 c0       	rjmp	.+232    	; 0x3a0a <DIO_GetPinValue+0x118>
 {


			   switch(copy_port)
    3922:	8a 81       	ldd	r24, Y+2	; 0x02
    3924:	28 2f       	mov	r18, r24
    3926:	30 e0       	ldi	r19, 0x00	; 0
    3928:	3f 83       	std	Y+7, r19	; 0x07
    392a:	2e 83       	std	Y+6, r18	; 0x06
    392c:	4e 81       	ldd	r20, Y+6	; 0x06
    392e:	5f 81       	ldd	r21, Y+7	; 0x07
    3930:	41 30       	cpi	r20, 0x01	; 1
    3932:	51 05       	cpc	r21, r1
    3934:	59 f1       	breq	.+86     	; 0x398c <DIO_GetPinValue+0x9a>
    3936:	8e 81       	ldd	r24, Y+6	; 0x06
    3938:	9f 81       	ldd	r25, Y+7	; 0x07
    393a:	82 30       	cpi	r24, 0x02	; 2
    393c:	91 05       	cpc	r25, r1
    393e:	34 f4       	brge	.+12     	; 0x394c <DIO_GetPinValue+0x5a>
    3940:	2e 81       	ldd	r18, Y+6	; 0x06
    3942:	3f 81       	ldd	r19, Y+7	; 0x07
    3944:	21 15       	cp	r18, r1
    3946:	31 05       	cpc	r19, r1
    3948:	69 f0       	breq	.+26     	; 0x3964 <DIO_GetPinValue+0x72>
    394a:	5c c0       	rjmp	.+184    	; 0x3a04 <DIO_GetPinValue+0x112>
    394c:	4e 81       	ldd	r20, Y+6	; 0x06
    394e:	5f 81       	ldd	r21, Y+7	; 0x07
    3950:	42 30       	cpi	r20, 0x02	; 2
    3952:	51 05       	cpc	r21, r1
    3954:	79 f1       	breq	.+94     	; 0x39b4 <DIO_GetPinValue+0xc2>
    3956:	8e 81       	ldd	r24, Y+6	; 0x06
    3958:	9f 81       	ldd	r25, Y+7	; 0x07
    395a:	83 30       	cpi	r24, 0x03	; 3
    395c:	91 05       	cpc	r25, r1
    395e:	09 f4       	brne	.+2      	; 0x3962 <DIO_GetPinValue+0x70>
    3960:	3d c0       	rjmp	.+122    	; 0x39dc <DIO_GetPinValue+0xea>
    3962:	50 c0       	rjmp	.+160    	; 0x3a04 <DIO_GetPinValue+0x112>
			   {
			          case DIO_PORTA : GET_BIT(PINA,copy_pin,*copy_pvalue); break;
    3964:	e9 e3       	ldi	r30, 0x39	; 57
    3966:	f0 e0       	ldi	r31, 0x00	; 0
    3968:	80 81       	ld	r24, Z
    396a:	28 2f       	mov	r18, r24
    396c:	30 e0       	ldi	r19, 0x00	; 0
    396e:	8b 81       	ldd	r24, Y+3	; 0x03
    3970:	88 2f       	mov	r24, r24
    3972:	90 e0       	ldi	r25, 0x00	; 0
    3974:	a9 01       	movw	r20, r18
    3976:	02 c0       	rjmp	.+4      	; 0x397c <DIO_GetPinValue+0x8a>
    3978:	55 95       	asr	r21
    397a:	47 95       	ror	r20
    397c:	8a 95       	dec	r24
    397e:	e2 f7       	brpl	.-8      	; 0x3978 <DIO_GetPinValue+0x86>
    3980:	ca 01       	movw	r24, r20
    3982:	81 70       	andi	r24, 0x01	; 1
    3984:	ec 81       	ldd	r30, Y+4	; 0x04
    3986:	fd 81       	ldd	r31, Y+5	; 0x05
    3988:	80 83       	st	Z, r24
    398a:	41 c0       	rjmp	.+130    	; 0x3a0e <DIO_GetPinValue+0x11c>
			          case DIO_PORTB : GET_BIT(PINB,copy_pin,*copy_pvalue); break;
    398c:	e6 e3       	ldi	r30, 0x36	; 54
    398e:	f0 e0       	ldi	r31, 0x00	; 0
    3990:	80 81       	ld	r24, Z
    3992:	28 2f       	mov	r18, r24
    3994:	30 e0       	ldi	r19, 0x00	; 0
    3996:	8b 81       	ldd	r24, Y+3	; 0x03
    3998:	88 2f       	mov	r24, r24
    399a:	90 e0       	ldi	r25, 0x00	; 0
    399c:	a9 01       	movw	r20, r18
    399e:	02 c0       	rjmp	.+4      	; 0x39a4 <DIO_GetPinValue+0xb2>
    39a0:	55 95       	asr	r21
    39a2:	47 95       	ror	r20
    39a4:	8a 95       	dec	r24
    39a6:	e2 f7       	brpl	.-8      	; 0x39a0 <DIO_GetPinValue+0xae>
    39a8:	ca 01       	movw	r24, r20
    39aa:	81 70       	andi	r24, 0x01	; 1
    39ac:	ec 81       	ldd	r30, Y+4	; 0x04
    39ae:	fd 81       	ldd	r31, Y+5	; 0x05
    39b0:	80 83       	st	Z, r24
    39b2:	2d c0       	rjmp	.+90     	; 0x3a0e <DIO_GetPinValue+0x11c>
			          case DIO_PORTC : GET_BIT(PINC,copy_pin,*copy_pvalue); break;
    39b4:	e3 e3       	ldi	r30, 0x33	; 51
    39b6:	f0 e0       	ldi	r31, 0x00	; 0
    39b8:	80 81       	ld	r24, Z
    39ba:	28 2f       	mov	r18, r24
    39bc:	30 e0       	ldi	r19, 0x00	; 0
    39be:	8b 81       	ldd	r24, Y+3	; 0x03
    39c0:	88 2f       	mov	r24, r24
    39c2:	90 e0       	ldi	r25, 0x00	; 0
    39c4:	a9 01       	movw	r20, r18
    39c6:	02 c0       	rjmp	.+4      	; 0x39cc <DIO_GetPinValue+0xda>
    39c8:	55 95       	asr	r21
    39ca:	47 95       	ror	r20
    39cc:	8a 95       	dec	r24
    39ce:	e2 f7       	brpl	.-8      	; 0x39c8 <DIO_GetPinValue+0xd6>
    39d0:	ca 01       	movw	r24, r20
    39d2:	81 70       	andi	r24, 0x01	; 1
    39d4:	ec 81       	ldd	r30, Y+4	; 0x04
    39d6:	fd 81       	ldd	r31, Y+5	; 0x05
    39d8:	80 83       	st	Z, r24
    39da:	19 c0       	rjmp	.+50     	; 0x3a0e <DIO_GetPinValue+0x11c>
			          case DIO_PORTD : GET_BIT(PIND,copy_pin,*copy_pvalue); break;
    39dc:	e0 e3       	ldi	r30, 0x30	; 48
    39de:	f0 e0       	ldi	r31, 0x00	; 0
    39e0:	80 81       	ld	r24, Z
    39e2:	28 2f       	mov	r18, r24
    39e4:	30 e0       	ldi	r19, 0x00	; 0
    39e6:	8b 81       	ldd	r24, Y+3	; 0x03
    39e8:	88 2f       	mov	r24, r24
    39ea:	90 e0       	ldi	r25, 0x00	; 0
    39ec:	a9 01       	movw	r20, r18
    39ee:	02 c0       	rjmp	.+4      	; 0x39f4 <DIO_GetPinValue+0x102>
    39f0:	55 95       	asr	r21
    39f2:	47 95       	ror	r20
    39f4:	8a 95       	dec	r24
    39f6:	e2 f7       	brpl	.-8      	; 0x39f0 <DIO_GetPinValue+0xfe>
    39f8:	ca 01       	movw	r24, r20
    39fa:	81 70       	andi	r24, 0x01	; 1
    39fc:	ec 81       	ldd	r30, Y+4	; 0x04
    39fe:	fd 81       	ldd	r31, Y+5	; 0x05
    3a00:	80 83       	st	Z, r24
    3a02:	05 c0       	rjmp	.+10     	; 0x3a0e <DIO_GetPinValue+0x11c>
			          default :local_errorStatus=NOK ; break ;
    3a04:	81 e0       	ldi	r24, 0x01	; 1
    3a06:	89 83       	std	Y+1, r24	; 0x01
    3a08:	02 c0       	rjmp	.+4      	; 0x3a0e <DIO_GetPinValue+0x11c>
			   }

 }
 else
 {
	 local_errorStatus= NOK;
    3a0a:	81 e0       	ldi	r24, 0x01	; 1
    3a0c:	89 83       	std	Y+1, r24	; 0x01

 }
return local_errorStatus;
    3a0e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3a10:	27 96       	adiw	r28, 0x07	; 7
    3a12:	0f b6       	in	r0, 0x3f	; 63
    3a14:	f8 94       	cli
    3a16:	de bf       	out	0x3e, r29	; 62
    3a18:	0f be       	out	0x3f, r0	; 63
    3a1a:	cd bf       	out	0x3d, r28	; 61
    3a1c:	cf 91       	pop	r28
    3a1e:	df 91       	pop	r29
    3a20:	08 95       	ret

00003a22 <DIO_setInternalPullup>:



uint8 DIO_setInternalPullup(uint8 copyy_port,uint8 copy_pin)
{
    3a22:	df 93       	push	r29
    3a24:	cf 93       	push	r28
    3a26:	00 d0       	rcall	.+0      	; 0x3a28 <DIO_setInternalPullup+0x6>
    3a28:	cd b7       	in	r28, 0x3d	; 61
    3a2a:	de b7       	in	r29, 0x3e	; 62
    3a2c:	89 83       	std	Y+1, r24	; 0x01
    3a2e:	6a 83       	std	Y+2, r22	; 0x02
 /* SET PIN AS INPUT */
	DIO_SetPinDirection(copyy_port,copy_pin,INPUT);
    3a30:	89 81       	ldd	r24, Y+1	; 0x01
    3a32:	6a 81       	ldd	r22, Y+2	; 0x02
    3a34:	40 e0       	ldi	r20, 0x00	; 0
    3a36:	0e 94 7f 19 	call	0x32fe	; 0x32fe <DIO_SetPinDirection>

 /* SET PIN AS  HIGH */
	DIO_SetPinValue(copyy_port,copy_pin,OUTPUT_HIGH);
    3a3a:	89 81       	ldd	r24, Y+1	; 0x01
    3a3c:	6a 81       	ldd	r22, Y+2	; 0x02
    3a3e:	41 e0       	ldi	r20, 0x01	; 1
    3a40:	0e 94 91 1a 	call	0x3522	; 0x3522 <DIO_SetPinValue>

	return 0;
    3a44:	80 e0       	ldi	r24, 0x00	; 0
}
    3a46:	0f 90       	pop	r0
    3a48:	0f 90       	pop	r0
    3a4a:	cf 91       	pop	r28
    3a4c:	df 91       	pop	r29
    3a4e:	08 95       	ret

00003a50 <__prologue_saves__>:
    3a50:	2f 92       	push	r2
    3a52:	3f 92       	push	r3
    3a54:	4f 92       	push	r4
    3a56:	5f 92       	push	r5
    3a58:	6f 92       	push	r6
    3a5a:	7f 92       	push	r7
    3a5c:	8f 92       	push	r8
    3a5e:	9f 92       	push	r9
    3a60:	af 92       	push	r10
    3a62:	bf 92       	push	r11
    3a64:	cf 92       	push	r12
    3a66:	df 92       	push	r13
    3a68:	ef 92       	push	r14
    3a6a:	ff 92       	push	r15
    3a6c:	0f 93       	push	r16
    3a6e:	1f 93       	push	r17
    3a70:	cf 93       	push	r28
    3a72:	df 93       	push	r29
    3a74:	cd b7       	in	r28, 0x3d	; 61
    3a76:	de b7       	in	r29, 0x3e	; 62
    3a78:	ca 1b       	sub	r28, r26
    3a7a:	db 0b       	sbc	r29, r27
    3a7c:	0f b6       	in	r0, 0x3f	; 63
    3a7e:	f8 94       	cli
    3a80:	de bf       	out	0x3e, r29	; 62
    3a82:	0f be       	out	0x3f, r0	; 63
    3a84:	cd bf       	out	0x3d, r28	; 61
    3a86:	09 94       	ijmp

00003a88 <__epilogue_restores__>:
    3a88:	2a 88       	ldd	r2, Y+18	; 0x12
    3a8a:	39 88       	ldd	r3, Y+17	; 0x11
    3a8c:	48 88       	ldd	r4, Y+16	; 0x10
    3a8e:	5f 84       	ldd	r5, Y+15	; 0x0f
    3a90:	6e 84       	ldd	r6, Y+14	; 0x0e
    3a92:	7d 84       	ldd	r7, Y+13	; 0x0d
    3a94:	8c 84       	ldd	r8, Y+12	; 0x0c
    3a96:	9b 84       	ldd	r9, Y+11	; 0x0b
    3a98:	aa 84       	ldd	r10, Y+10	; 0x0a
    3a9a:	b9 84       	ldd	r11, Y+9	; 0x09
    3a9c:	c8 84       	ldd	r12, Y+8	; 0x08
    3a9e:	df 80       	ldd	r13, Y+7	; 0x07
    3aa0:	ee 80       	ldd	r14, Y+6	; 0x06
    3aa2:	fd 80       	ldd	r15, Y+5	; 0x05
    3aa4:	0c 81       	ldd	r16, Y+4	; 0x04
    3aa6:	1b 81       	ldd	r17, Y+3	; 0x03
    3aa8:	aa 81       	ldd	r26, Y+2	; 0x02
    3aaa:	b9 81       	ldd	r27, Y+1	; 0x01
    3aac:	ce 0f       	add	r28, r30
    3aae:	d1 1d       	adc	r29, r1
    3ab0:	0f b6       	in	r0, 0x3f	; 63
    3ab2:	f8 94       	cli
    3ab4:	de bf       	out	0x3e, r29	; 62
    3ab6:	0f be       	out	0x3f, r0	; 63
    3ab8:	cd bf       	out	0x3d, r28	; 61
    3aba:	ed 01       	movw	r28, r26
    3abc:	08 95       	ret

00003abe <_exit>:
    3abe:	f8 94       	cli

00003ac0 <__stop_program>:
    3ac0:	ff cf       	rjmp	.-2      	; 0x3ac0 <__stop_program>
